{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Linkify from 'react-linkify';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport './styles.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sourceList, setSourceList] = useState([]);\n  const [currentTime, setCurrentTime] = useState(getFormattedTime());\n  const [currentDateLV, setCurrentDateLV] = useState(getFormattedLatvianDate());\n  const [currentDate, setCurrentDate] = useState(getFormattedDate());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [spreadsheetData, setSpreadsheetData] = useState([]);\n  const [itemsPerPage] = useState(20);\n  const url = 'http://localhost:3001/';\n  const [renderedContent, setRenderedContent] = useState(null);\n  const [renderedButtons, setRenderedButtons] = useState(null);\n  const renderAsyncContent = async () => {\n    if (sourceList.length === 0) {\n      return null; // Переосмыслите, что возвращать в этом случае, например, заглушку или загрузочный индикатор\n    }\n    const content = await renderContent();\n    setRenderedContent(content);\n  };\n  const renderContent = async () => {\n    if (currentPage > totalPages) {\n      const sourceIndex = currentPage - totalPages - 1;\n      const source = sourceList[sourceIndex];\n      const request = url + \"getImage/\" + source.file;\n      if (source && source.type.startsWith(\"URL\")) {\n        const urlParts = source.type.split('(');\n        const urlType = urlParts[1] ? urlParts[1].slice(0, -1) : ''; // Извлекаем тип (foto), (video), (text)\n\n        switch (urlType) {\n          case 'foto':\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Image ${currentPage}`,\n              className: \"photoImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this);\n          case 'video':\n            return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: source.file,\n              width: \"100vw\",\n              height: \"100vh\",\n              playing: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this);\n          case 'text':\n            const txtFileRequest = await fetch(source.file);\n            if (txtFileRequest.ok) {\n              const txtContent = await txtFileRequest.text();\n              const linkedContent = txtContent.split('\\n');\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: linkedContent.map((line, index) => {\n                  const isYouTubeLink = line.includes('youtu.be');\n                  const isImageLink = line.match(/\\.(jpeg|jpg|gif|png)$/);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Linkify, {\n                      children: line\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 49\n                    }, this), isYouTubeLink && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                      url: line,\n                      width: \"300px\",\n                      height: \"200px\",\n                      playing: true,\n                      muted: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 53\n                    }, this), isImageLink && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: line,\n                      alt: `Image ${index}`\n                    }, `img-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 53\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this);\n            } else {\n              // Обработка ошибки получения файла .txt\n              console.error('Error fetching .txt file:', txtFileRequest.status);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching .txt file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 36\n              }, this);\n            }\n          default:\n            console.error(`Unsupported URL type: ${urlType}`);\n            return null;\n        }\n      }\n      if (sourceIndex >= 0 && sourceIndex < sourceList.length && !source.type.endsWith(\"txt\")) {\n        if (source.type !== \"video(mp4)\") {\n          try {\n            const response = await fetch(request);\n            console.log('HTTP status:', response.status);\n            if (response.ok) {\n              if (source.type.startsWith(\"foto\")) {\n                const blobData = await response.blob();\n                const imageUrl = URL.createObjectURL(blobData);\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageUrl,\n                  alt: `Sheet ${currentPage}`,\n                  className: \"photoImage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this);\n              } else {\n                // Добавьте обработку других типов файлов, если необходимо\n                return null;\n              }\n            } else {\n              // обработка ошибок\n              console.error('Error fetching image:', response.status);\n              return null;\n            }\n          } catch (error) {\n            console.error('Error fetching image:', error);\n            return null;\n          }\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"video\", {\n            className: \"videoPlayer\",\n            autoPlay: true,\n            loop: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: `${request}`,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n              src: `${request}`,\n              type: \"video/ogg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this);\n        }\n      } else if (source.type === \"text\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: source.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this);\n      } else {\n        // Добавьте обработку других типов файлов, если необходимо\n        return null;\n      }\n    } else {\n      // код для отображения таблицы данных\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AIZVIETO\\u0160ANAS LAPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentDateLV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"dataBody\",\n              children: sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => /*#__PURE__*/_jsxDEV(DataTable, {\n                data: data,\n                currentDate: currentDate\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  useEffect(() => {\n    renderAsyncContent();\n    renderPageNumbersAsync();\n  }, [currentPage, sourceList, spreadsheetData]);\n  useEffect(() => {\n    const fetchSourcesList = async () => {\n      try {\n        const response = await fetch(url + 'getSourcesList');\n        if (!response.ok) {\n          console.error('Failed to fetch sources list. HTTP status:', response.status);\n          throw new Error('Failed to fetch sources list');\n        }\n        const {\n          sourcesList\n        } = await response.json();\n        setSourceList(sourcesList);\n        renderAsyncContent(); // Вызываем renderAsyncContent после установки sourceList\n        renderPageNumbersAsync(); // Вызываем renderPageNumbersAsync после установки sourceList\n      } catch (error) {\n        console.error('Error fetching sources list:', error);\n      }\n    };\n\n    // Запускаем функцию для получения списка источников данных\n    fetchSourcesList();\n  }, []);\n  const PageButton = ({\n    onClick,\n    isActive\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    className: `button-81 ${isActive ? 'active' : ''}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n  function getFormattedTime() {\n    const currentDate = new Date();\n    const hours = currentDate.getHours();\n    const minutes = currentDate.getMinutes();\n    const seconds = currentDate.getSeconds();\n    const formattedHours = String(hours).padStart(2, '0');\n    const formattedMinutes = String(minutes).padStart(2, '0');\n    const formattedSeconds = String(seconds).padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n  function getFormattedDate(date) {\n    if (!date) {\n      date = new Date();\n    }\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}.`;\n  }\n  function getFormattedLatvianDate() {\n    const daysOfWeek = ['Svētdiena', 'Pirmdiena', 'Otrdiena', 'Trešdiena', 'Ceturtdiena', 'Piektdiena', 'Sestdiena'];\n    const months = ['janvāris', 'februāris', 'marts', 'aprīlis', 'maijs', 'jūnijs', 'jūlijs', 'augusts', 'septembris', 'oktobris', 'novembris', 'decembris'];\n    const currentDate = new Date();\n    const dayOfWeek = daysOfWeek[currentDate.getDay()];\n    const dayOfMonth = currentDate.getDate();\n    const month = months[currentDate.getMonth()];\n    return `${dayOfWeek}, ${dayOfMonth}. ${month}`;\n  }\n  const updateCurrentTime = useCallback(() => {\n    setCurrentTime(getFormattedTime());\n  }, []);\n  const updateCurrentDate = useCallback(() => {\n    setCurrentDate(getFormattedDate());\n  }, []);\n  const updateCurrentDateLV = useCallback(() => {\n    setCurrentDateLV(getFormattedLatvianDate());\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateCurrentTime();\n      updateCurrentDateLV();\n      updateCurrentDate();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime]);\n  const romanToNumber = roman => {\n    const romanNumeralMap = {\n      I: 1,\n      II: 2,\n      III: 3\n    };\n    return romanNumeralMap[roman] || 0;\n  };\n  const sortData = (data, columns) => {\n    const sortedData = [...data];\n    sortedData.sort((a, b) => {\n      for (let i = 0; i < columns.length; i++) {\n        const column = columns[i];\n        const valueA = a[column] || '';\n        const valueB = b[column] || '';\n        if (column === 'class') {\n          const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n          const matchA = valueA.match(regex);\n          const matchB = valueB.match(regex);\n          if (matchA && matchB) {\n            const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n            if (numComparison !== 0) {\n              return numComparison;\n            }\n            const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n            if (romanComparison !== 0) {\n              return romanComparison;\n            }\n            return matchA[2].localeCompare(matchB[2], 'en', {\n              sensitivity: 'base'\n            });\n          } else {\n            return 0;\n          }\n        } else {\n          const comparison = valueA.localeCompare(valueB, 'en', {\n            sensitivity: 'base'\n          });\n          if (comparison !== 0) {\n            return comparison;\n          }\n        }\n      }\n      return 0;\n    });\n    return sortedData;\n  };\n  useEffect(() => {\n    const runCSharpScript = async () => {\n      try {\n        console.log('Sending a POST request to run C# script...');\n        const response = await fetch(url + 'runCSharpScript', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Server response received:', response);\n        if (!response.ok) {\n          console.error('Failed to run C# script on the server. HTTP status:', response.status);\n          throw new Error('Failed to run C# script on the server');\n        }\n        const JsonData = await response.text(); // Get the raw text response\n\n        const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n        let dataArray = JSON.parse(jsonData.data);\n\n        // Заполняем пропуски в свойстве \"date\"\n        for (let i = 0; i < dataArray.length; i++) {\n          if (dataArray[i].date === null || dataArray[i].date === \"\") {\n            dataArray[i].date = dataArray[i - 1].date;\n          }\n        }\n\n        // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n        dataArray = dataArray.filter(item => {\n          if (item.subst_person === \"\" || item.subst_person === \"nav stundas\") return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n          return true;\n        });\n        const filteredData = filterDataByCurrentDate(dataArray, currentDate);\n        console.log('C# script executed successfully. Data from the server:', filteredData);\n        setSpreadsheetData(filteredData);\n      } catch (error) {\n        console.error('Error running C# script:', error);\n      }\n    };\n\n    // Вызываем функцию для отправки POST-запроса\n    runCSharpScript();\n    const intervalId = setInterval(() => {\n      updateCurrentTime();\n      updateCurrentDateLV();\n      updateCurrentDate();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime, setSpreadsheetData, currentDate]);\n  const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n  const renderPageNumbers = async () => {\n    const pageNumbers = [];\n    let totalElements = sourceList.length;\n    for (let i = 1; i <= totalPages + totalElements; i++) {\n      if (sourceList[i - totalPages - 1]) {\n        pageNumbers.push( /*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: () => paginate(i),\n          isActive: i === currentPage\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this));\n      }\n    }\n    return pageNumbers;\n  };\n  const renderPageNumbersAsync = async () => {\n    const pageNumbers = await renderPageNumbers();\n    setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n  };\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    if (pageNumber > totalPages) console.log(`Clicked on photo page ${pageNumber}`);\n  };\n  const filterDataByCurrentDate = (data, currentDate) => {\n    return data.filter(item => {\n      const itemDate = item.date;\n      return itemDate === currentDate;\n    });\n  };\n  const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderedContent, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginationContainer\",\n      children: renderedButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NKsrcDklTsDTG8UXOmrLY8x2ceo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Linkify","ReactPlayer","DataTable","jsxDEV","_jsxDEV","App","_s","sourceList","setSourceList","currentTime","setCurrentTime","getFormattedTime","currentDateLV","setCurrentDateLV","getFormattedLatvianDate","currentDate","setCurrentDate","getFormattedDate","currentPage","setCurrentPage","spreadsheetData","setSpreadsheetData","itemsPerPage","url","renderedContent","setRenderedContent","renderedButtons","setRenderedButtons","renderAsyncContent","length","content","renderContent","totalPages","sourceIndex","source","request","file","type","startsWith","urlParts","split","urlType","slice","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","playing","muted","txtFileRequest","fetch","ok","txtContent","text","linkedContent","children","map","line","index","isYouTubeLink","includes","isImageLink","match","console","error","status","endsWith","response","log","blobData","blob","imageUrl","URL","createObjectURL","autoPlay","loop","sortedFilteredData","data","renderPageNumbersAsync","fetchSourcesList","Error","sourcesList","json","PageButton","onClick","isActive","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","date","day","getDate","month","getMonth","year","getFullYear","daysOfWeek","months","dayOfWeek","getDay","dayOfMonth","updateCurrentTime","updateCurrentDate","updateCurrentDateLV","intervalId","setInterval","clearInterval","romanToNumber","roman","romanNumeralMap","I","II","III","sortData","columns","sortedData","sort","a","b","i","column","valueA","valueB","regex","matchA","matchB","numComparison","parseInt","romanComparison","localeCompare","sensitivity","comparison","runCSharpScript","method","headers","JsonData","jsonData","JSON","parse","dataArray","filter","item","subst_person","filteredData","filterDataByCurrentDate","Math","ceil","renderPageNumbers","pageNumbers","totalElements","push","paginate","pageNumber","itemDate","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Linkify from 'react-linkify';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport './styles.css';\nimport './App.css';\n\nfunction App() {\n    const [sourceList, setSourceList] = useState([]);\n    const [currentTime, setCurrentTime] = useState(getFormattedTime());\n    const [currentDateLV, setCurrentDateLV] = useState(getFormattedLatvianDate());\n    const [currentDate, setCurrentDate] = useState(getFormattedDate());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [spreadsheetData, setSpreadsheetData] = useState([]);\n    const [itemsPerPage] = useState(20);\n    const url = 'http://localhost:3001/';\n    const [renderedContent, setRenderedContent] = useState(null);\n    const [renderedButtons, setRenderedButtons] = useState(null);\n\n    const renderAsyncContent = async () => {\n        if (sourceList.length === 0) {\n            return null; // Переосмыслите, что возвращать в этом случае, например, заглушку или загрузочный индикатор\n        }\n\n        const content = await renderContent();\n        setRenderedContent(content);\n    };\n\n\n    const renderContent = async () => {\n        if (currentPage > totalPages) {\n            const sourceIndex = currentPage - totalPages - 1;\n            const source = sourceList[sourceIndex];\n            const request = url + \"getImage/\" + source.file;\n\n            if (source && source.type.startsWith(\"URL\")) {\n                const urlParts = source.type.split('(');\n                const urlType = urlParts[1] ? urlParts[1].slice(0, -1) : ''; // Извлекаем тип (foto), (video), (text)\n\n                switch (urlType) {\n                    case 'foto':\n                        return (\n                            <img\n                                src={source.file}\n                                alt={`Image ${currentPage}`}\n                                className=\"photoImage\"\n                            />\n                        );\n                    case 'video':\n                        return (\n                            <ReactPlayer\n                                url={source.file}\n                                width=\"100vw\"\n                                height=\"100vh\"\n                                playing\n                                muted\n                            />\n                        );\n                    case 'text':\n                        const txtFileRequest = await fetch(source.file);\n\n                        if (txtFileRequest.ok) {\n                            const txtContent = await txtFileRequest.text();\n                            const linkedContent = txtContent.split('\\n');\n\n                            return (\n                                <div>\n                                    {linkedContent.map((line, index) => {\n                                        const isYouTubeLink = line.includes('youtu.be');\n                                        const isImageLink = line.match(/\\.(jpeg|jpg|gif|png)$/);\n\n                                        return (\n                                            <div key={index}>\n                                                <Linkify>{line}</Linkify>\n                                                {isYouTubeLink && (\n                                                    <ReactPlayer\n                                                        url={line}\n                                                        width=\"300px\"\n                                                        height=\"200px\"\n                                                        playing\n                                                        muted\n                                                    />\n                                                )}\n                                                {isImageLink && (\n                                                    <img src={line} alt={`Image ${index}`} key={`img-${index}`} />\n                                                )}\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        } else {\n                            // Обработка ошибки получения файла .txt\n                            console.error('Error fetching .txt file:', txtFileRequest.status);\n                            return <div>Error fetching .txt file</div>;\n                        }\n                    default:\n                        console.error(`Unsupported URL type: ${urlType}`);\n                        return null;\n                }\n            }\n\n\n            if (sourceIndex >= 0 && sourceIndex < sourceList.length && !source.type.endsWith(\"txt\")) {\n                if (source.type !== \"video(mp4)\") {\n                    try {\n                        const response = await fetch(request);\n                        console.log('HTTP status:', response.status);\n\n                        if (response.ok) {\n                            if (source.type.startsWith(\"foto\")) {\n                                const blobData = await response.blob();\n                                const imageUrl = URL.createObjectURL(blobData);\n\n                                return (\n                                    <img\n                                        src={imageUrl}\n                                        alt={`Sheet ${currentPage}`}\n                                        className=\"photoImage\"\n                                    />\n                                );\n                            } else {\n                                // Добавьте обработку других типов файлов, если необходимо\n                                return null;\n                            }\n                        } else {\n                            // обработка ошибок\n                            console.error('Error fetching image:', response.status);\n                            return null;\n                        }\n                    } catch (error) {\n                        console.error('Error fetching image:', error);\n                        return null;\n                    }\n                } else {\n                    return (\n                        <video className=\"videoPlayer\" autoPlay loop>\n                            <source src={`${request}`} type=\"video/mp4\" />\n                            <source src={`${request}`} type=\"video/ogg\" />\n                            Your browser does not support the video tag.\n                        </video>\n                    );\n                }\n            } else if (source.type === \"text\") {\n                return (\n                <div>\n                    <h1>{source.file}</h1>\n                </div>\n                );\n            } else {\n                // Добавьте обработку других типов файлов, если необходимо\n                return null;\n            }\n        } else {\n            // код для отображения таблицы данных\n            return (\n                <div>\n                    <h1>{currentTime}</h1>\n                    <h2>AIZVIETOŠANAS LAPA</h2>\n                    <h3>{currentDateLV}</h3>\n                    <div className=\"table-wrapper\">\n                        <table className=\"fl-table\">\n                            <thead>\n                                <tr>\n                                    <th>Aizvietotājs</th>\n                                    <th>Stunda</th>\n                                    <th>Klase</th>\n                                    <th>Kab.</th>\n                                    <th>Promešosais skolotājs</th>\n                                    <th>Piezīmes</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"dataBody\">\n                                {sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => (\n                                    <DataTable\n                                        key={index}\n                                        data={data}\n                                        currentDate={currentDate}\n                                    />\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n\n    useEffect(() => {\n        renderAsyncContent();\n        renderPageNumbersAsync();\n    }, [currentPage, sourceList, spreadsheetData]);\n\n\n    useEffect(() => {\n        const fetchSourcesList = async () => {\n            try {\n                const response = await fetch(url + 'getSourcesList');\n                if (!response.ok) {\n                    console.error('Failed to fetch sources list. HTTP status:', response.status);\n                    throw new Error('Failed to fetch sources list');\n                }\n                const { sourcesList } = await response.json();\n                setSourceList(sourcesList);\n                renderAsyncContent(); // Вызываем renderAsyncContent после установки sourceList\n                renderPageNumbersAsync(); // Вызываем renderPageNumbersAsync после установки sourceList\n            } catch (error) {\n                console.error('Error fetching sources list:', error);\n            }\n        };\n\n        // Запускаем функцию для получения списка источников данных\n        fetchSourcesList();\n    }, []);\n\n    const PageButton = ({ onClick, isActive }) => (\n        <button onClick={onClick} className={`button-81 ${isActive ? 'active' : ''}`}>\n        </button>\n    );\n\n    function getFormattedTime() {\n        const currentDate = new Date();\n        const hours = currentDate.getHours();\n        const minutes = currentDate.getMinutes();\n        const seconds = currentDate.getSeconds();\n        const formattedHours = String(hours).padStart(2, '0');\n        const formattedMinutes = String(minutes).padStart(2, '0');\n        const formattedSeconds = String(seconds).padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    }\n\n    function getFormattedDate(date) {\n        if (!date) {\n            date = new Date();\n        }\n\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n\n        return `${day}.${month}.${year}.`;\n    }\n\n    function getFormattedLatvianDate() {\n        const daysOfWeek = ['Svētdiena', 'Pirmdiena', 'Otrdiena', 'Trešdiena', 'Ceturtdiena', 'Piektdiena', 'Sestdiena'];\n        const months = ['janvāris', 'februāris', 'marts', 'aprīlis', 'maijs', 'jūnijs', 'jūlijs', 'augusts', 'septembris', 'oktobris', 'novembris', 'decembris'];\n\n        const currentDate = new Date();\n        const dayOfWeek = daysOfWeek[currentDate.getDay()];\n        const dayOfMonth = currentDate.getDate();\n        const month = months[currentDate.getMonth()];\n\n        return `${dayOfWeek}, ${dayOfMonth}. ${month}`;\n    }\n\n    const updateCurrentTime = useCallback(() => {\n        setCurrentTime(getFormattedTime());\n    }, []);\n\n    const updateCurrentDate = useCallback(() => {\n        setCurrentDate(getFormattedDate());\n    }, []);\n\n    const updateCurrentDateLV = useCallback(() => {\n        setCurrentDateLV(getFormattedLatvianDate());\n    }, []);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            updateCurrentTime();\n            updateCurrentDateLV();\n            updateCurrentDate();\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime]);\n\n    const romanToNumber = (roman) => {\n        const romanNumeralMap = {\n            I: 1,\n            II: 2,\n            III: 3\n        };\n\n        return romanNumeralMap[roman] || 0;\n    };\n\n    const sortData = (data, columns) => {\n        const sortedData = [...data];\n\n        sortedData.sort((a, b) => {\n            for (let i = 0; i < columns.length; i++) {\n                const column = columns[i];\n                const valueA = a[column] || '';\n                const valueB = b[column] || '';\n\n                if (column === 'class') {\n                    const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n                    const matchA = valueA.match(regex);\n                    const matchB = valueB.match(regex);\n\n                    if (matchA && matchB) {\n                        const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n\n                        if (numComparison !== 0) {\n                            return numComparison;\n                        }\n\n                        const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n\n                        if (romanComparison !== 0) {\n                            return romanComparison;\n                        }\n\n                        return matchA[2].localeCompare(matchB[2], 'en', { sensitivity: 'base' });\n                    } else {\n                        return 0;\n                    }\n                } else {\n                    const comparison = valueA.localeCompare(valueB, 'en', { sensitivity: 'base' });\n\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n            }\n            return 0;\n        });\n\n        return sortedData;\n    };\n\n\n\n    useEffect(() => {\n        const runCSharpScript = async () => {\n            try {\n                console.log('Sending a POST request to run C# script...');\n\n                const response = await fetch(url + 'runCSharpScript', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n\n                console.log('Server response received:', response);\n\n                if (!response.ok) {\n                    console.error('Failed to run C# script on the server. HTTP status:', response.status);\n                    throw new Error('Failed to run C# script on the server');\n                }\n\n                const JsonData = await response.text(); // Get the raw text response\n\n                const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n                let dataArray = JSON.parse(jsonData.data);\n\n                // Заполняем пропуски в свойстве \"date\"\n                for (let i = 0; i < dataArray.length; i++) {\n                    if (dataArray[i].date === null || dataArray[i].date === \"\") {\n                        dataArray[i].date = dataArray[i - 1].date;\n                    }\n                }\n\n                // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n                dataArray = dataArray.filter(item => {\n                    if (item.subst_person === \"\" || item.subst_person === \"nav stundas\")\n                        return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n                    return true;\n                });\n\n                const filteredData = filterDataByCurrentDate(dataArray, currentDate);\n\n                console.log('C# script executed successfully. Data from the server:', filteredData);\n                setSpreadsheetData(filteredData);\n            } catch (error) {\n                console.error('Error running C# script:', error);\n            }\n        };\n\n\n        // Вызываем функцию для отправки POST-запроса\n        runCSharpScript();\n\n        const intervalId = setInterval(() => {\n            updateCurrentTime();\n            updateCurrentDateLV();\n            updateCurrentDate();\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime, setSpreadsheetData, currentDate]);\n\n\n    const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n\n    const renderPageNumbers = async () => {\n        const pageNumbers = [];\n        let totalElements = sourceList.length;\n\n        for (let i = 1; i <= totalPages + totalElements; i++) {\n            if (sourceList[i - totalPages - 1]) {\n                pageNumbers.push(\n                    <PageButton\n                        key={i}\n                        onClick={() => paginate(i)}\n                        isActive={i === currentPage}\n                    />\n                );\n            }\n        }\n\n        return pageNumbers;\n    };\n\n\n\n\n    const renderPageNumbersAsync = async () => {\n        const pageNumbers = await renderPageNumbers();\n        setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n    };\n\n    const paginate = (pageNumber) => {\n        setCurrentPage(pageNumber);\n        if (pageNumber > totalPages)\n            console.log(`Clicked on photo page ${pageNumber}`);\n    };\n\n    const filterDataByCurrentDate = (data, currentDate) => {\n        return data.filter(item => {\n            const itemDate = item.date;\n            return itemDate === currentDate;\n        });\n    };\n\n    const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n\n    return (\n        <div>\n\n\n            {renderedContent}\n            {/*\n                    <input\n                        type=\"number\"\n                        id=\"itemsPerPage\"\n                        onChange={handleItemsPerPageChange}\n                        placeholder=\"Items per page...\"\n                        min=\"1\"\n                        className=\"itemsPerPageInput\"\n                    />\n                */}\n            <div className=\"paginationContainer\">\n                {renderedButtons}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}