{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport ReactPlayer from 'react-player';\nimport moment from 'moment-timezone';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport { StrictModeDroppable, updateConfig, getAllFiles, addSourceFile, deleteSourceFile, deleteSource, getSourcesList, authenticate, changeLogin, runCSharpScript, getConfig, getCSharpScriptConfigAsnc, updateStyles, applyTableStylesAsync } from './adminToServer.js';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginInfo, setLoginInfo] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState('aizvietosanas');\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableColor, setTableColor] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const units = ['px', '%', 'vw', 'vh'];\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [sourcesList, setSourcesList] = useState([]);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [oldLogin, setOldLogin] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\n  const timeZones = moment.tz.names();\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\n  const [credentialFile, setCredentialFile] = useState(null);\n  const [columnNamesRange, setColumnNamesRange] = useState('');\n  const [dataRange, setDataRange] = useState('');\n  const reRef = useRef();\n  const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\n  const [serverFiles, setServerFiles] = useState([]);\n  const handleTableColorChangeDebounced = useCallback(debounce(newColor => {\n    setHeaderStyles({\n      ...headerStyles,\n      color: newColor\n    });\n    setCellStyles({\n      ...cellStyles,\n      color: newColor\n    });\n    setTableColor(newColor);\n  }, 300), [headerStyles, cellStyles]);\n  useEffect(() => {\n    const fetchSources = async () => {\n      try {\n        const response = await fetch(url + 'getAllSources');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sources');\n        }\n        const data = await response.json();\n        const filesWithMetadata = data.files.map((file, index) => ({\n          id: index,\n          type: getFileType(file),\n          file,\n          index: index\n        }));\n        setServerFiles(filesWithMetadata);\n        console.log(\"All files: \" + filesWithMetadata);\n      } catch (error) {\n        console.error('Error fetching sources:', error);\n      }\n    };\n    fetchSources();\n  }, []);\n  const handleAddURL = async () => {\n    let urlInput = prompt('Enter URL:');\n    if (urlInput) {\n      // Проверяем, является ли введенное значение ссылкой\n      if (isValidURL(urlInput)) {\n        // Проверяем, является ли ссылка видео или фото\n        const fileType = await getFileTypeFromURL(urlInput);\n\n        // Если тип файла определен, делаем запрос на сервер\n        if (fileType) {\n          try {\n            const response = await fetch(`${url}addSource/${encodeURIComponent(selectedFolder)}/${fileType}/${encodeURIComponent(urlInput)}`, {\n              method: 'POST'\n            });\n            if (response.ok) {\n              console.log('File added successfully');\n            } else {\n              console.error('Failed to add file');\n            }\n          } catch (error) {\n            console.error('Error adding file:', error);\n          }\n        } else {\n          console.error('Unsupported file type');\n        }\n      } else {\n        console.error('Invalid URL');\n      }\n    } else {\n      console.error('URL is empty');\n    }\n  };\n\n  // Функция для определения, является ли строка URL\n  function isValidURL(string) {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  // Функция для определения типа файла по URL\n  const getFileTypeFromURL = async url => {\n    try {\n      const response = await fetch(url);\n      const contentType = response.headers.get('content-type');\n      if (url.includes('youtu.be') || url.includes('youtube.com')) {\n        return 'URL(video)';\n      } else if (contentType && contentType.includes('image')) {\n        return 'URL(foto)';\n      } else if (contentType && contentType.includes('video')) {\n        return 'URL(video)';\n      } else {\n        return null; // Неизвестный тип файла\n      }\n    } catch (error) {\n      console.error('Error fetching URL:', error);\n      return null;\n    }\n  };\n  const handleFileInputChange = async event => {\n    if (event.target.files) {\n      // Проверяем, что есть выбранный файл\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // Определяем тип файла на основе его расширения\n      const fileType = getFileType(file.name);\n\n      // Если тип файла определен, делаем запрос на сервер\n      if (fileType) {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('type', fileType);\n        formData.append('folder', selectedFolder);\n        try {\n          const response = await fetch(`${url}addSource/${encodeURIComponent(selectedFolder)}/${fileType}/${encodeURIComponent(file.name)}`, {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            console.log('File added successfully');\n          } else {\n            console.error('Failed to add file');\n          }\n        } catch (error) {\n          console.error('Error adding file:', error);\n        }\n      } else {\n        console.error('Unsupported file type');\n      }\n    }\n  };\n\n  // Функция для определения типа файла на основе его расширения\n  const getFileType = fileName => {\n    const extension = fileName.split('.').pop();\n    switch (extension.toLowerCase()) {\n      case 'jpg':\n      case 'jpeg':\n      case 'png':\n      case 'gif':\n        return 'foto';\n      case 'mp4':\n        return 'video';\n      case 'txt':\n        return 'text';\n      default:\n        return null;\n      // Неизвестный тип файла\n    }\n  };\n  const handleColumnNamesRangeChange = range => {\n    if (isValidRange(range)) setColumnNamesRange(range);else console.log(\"Invalid\");\n  };\n  const isValidCellCharacter = charCode => {\n    // Допустимыми символами являются заглавные латинские буквы\n    return charCode >= 65 && charCode <= 90; // A-Z\n  };\n  const isValidRange = range => {\n    // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\n    const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\n    if (!excelRangeRegex.test(range)) {\n      return false; // Неверный формат ренджа\n    }\n\n    // Разделить рендж на две ячейки: начальную и конечную\n    const [startCell, endCell] = range.split(':');\n\n    // Проверка корректности номеров столбцов\n    const columnRegex = /^[A-Za-z]+$/;\n    if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\n      return false; // Некорректное обозначение столбцов\n    }\n\n    // Проверка корректности номеров строк\n    const rowRegex = /^\\d+$/;\n    if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\n      return false; // Некорректное обозначение строк\n    }\n    return true; // Рендж соответствует формату Excel\n  };\n  const handleDataRangeChange = range => {\n    setDataRange(range);\n  };\n  const handleTimeZoneChange = async e => {\n    setSelectedTimeZone(e.target.value);\n    const updates = [{\n      key: 'TimeZone',\n      value: e.target.value\n    }\n    // Другие обновления конфигурации, если есть\n    ];\n    try {\n      const data = await updateConfig(updates);\n      console.log(data); // Вывод ответа от сервера\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n  useEffect(() => {\n    getAllFolders();\n  }, []);\n  const getAllFolders = async () => {\n    try {\n      const data = await getAllFiles();\n      setFolders(data.files);\n    } catch (error) {\n      console.error('Error getting folders:', error);\n    }\n  };\n  const handleAddFolder = async () => {\n    let fileName = prompt('Enter folder name:');\n    if (fileName) {\n      // Добавляем .txt, если расширение не указано\n      if (!fileName.includes('.')) {\n        fileName += '.txt';\n      }\n      try {\n        await addSourceFile(fileName);\n        getAllFolders();\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    }\n  };\n  const handleDeleteFolder = async fileName => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await deleteSourceFile(fileName);\n        getAllFolders();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteLink = async (type, fileName) => {\n    try {\n      const success = await deleteSource(selectedFolder, type, fileName);\n      if (success) {\n        console.log('File deleted successfully');\n        // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\n        setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\n      } else {\n        console.error('Error deleting file: Failed to delete file');\n        // Обработка ошибок удаления файла\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      // Обработка ошибок сетевого запроса\n    }\n  };\n  const handleFolderClick = async fileName => {\n    setSelectedFolder(fileName);\n    console.log('Getting sources list:', fileName);\n    try {\n      const data = await getSourcesList(fileName);\n      const sourcesWithIndex = data.sourcesList.map((source, index) => ({\n        ...source,\n        index: index\n      }));\n      setSourcesList(sourcesWithIndex);\n      console.log('Got sources list:', sourcesWithIndex);\n    } catch (error) {\n      console.error('Error getting sources list:', error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    try {\n      // Получаем токен ReCAPTCHA\n      const token = await reRef.current.executeAsync();\n      reRef.current.reset();\n\n      // Аутентификация\n      const response = await authenticate(login, password, token);\n\n      // Обрабатываем ответ сервера\n      if (response.ok) {\n        setIsLoggedIn(true);\n      } else {\n        // Обработка ошибки входа\n        console.error('Login failed');\n        setLoginInfo(response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginInfo(error);\n    }\n  };\n  const handleLoginChange = async () => {\n    if (oldLogin === '' || newLogin === '' || password === '') {\n      alert('Old login, new login, and new password are required.');\n      return;\n    }\n    try {\n      const {\n        success,\n        error\n      } = await changeLogin(oldLogin, newLogin, password);\n      if (success) {\n        alert('Login updated successfully.');\n      } else {\n        alert(error);\n      }\n    } catch (error) {\n      console.error('Error updating login:', error);\n      alert('Network error. Failed to update login.');\n    }\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const dataArray = await runCSharpScript();\n      if (dataArray) {\n        const ws = XLSX.utils.json_to_sheet(dataArray);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n        XLSX.writeFile(wb, 'data.xlsx');\n      }\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    handleGetCSharpScriptConfig();\n  }, []);\n  const handleGetConfig = async () => {\n    try {\n      const config = await getConfig();\n      setConfig(config);\n    } catch (error) {\n      console.error('Error getting configuration:', error);\n    }\n  };\n  const handleGetCSharpScriptConfig = async () => {\n    try {\n      const cSharpScriptConfig = await getCSharpScriptConfigAsnc();\n      setCSharpScriptConfig(cSharpScriptConfig);\n    } catch (error) {\n      console.error('Error getting C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChangeDebounced = debounce(newColor => {\n    setColor(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета\n  const handleColorChange = e => {\n    const newColor = e.target.value;\n    handleColorChangeDebounced(newColor);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const handleColorChange1Debounced = debounce(newColor => {\n    setColor1(newColor);\n  }, 300);\n\n  // Обработчик изменения цвета 2 с задержкой\n  const handleColorChange2Debounced = debounce(newColor => {\n    setColor2(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета 1\n  const handleColorChange1 = e => {\n    const newColor = e.target.value;\n    handleColorChange1Debounced(newColor);\n  };\n\n  // Обработчик изменения цвета 2\n  const handleColorChange2 = e => {\n    const newColor = e.target.value;\n    handleColorChange2Debounced(newColor);\n  };\n  const applySingleColor = async () => {\n    const bodyData = {\n      color\n    };\n    try {\n      const data = await updateStyles(bodyData);\n      console.log('Response from updateStyles:', data);\n      // Дополнительная обработка данных, если необходимо\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    const bodyData = {\n      color1,\n      color2,\n      angle\n    };\n    try {\n      const data = await updateStyles(bodyData);\n      console.log('Response from updateStyles:', data);\n      // Дополнительная обработка данных, если необходимо\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n    const bodyData = {\n      defaultGradient\n    };\n    try {\n      const data = await updateStyles(bodyData);\n      console.log('Response from updateStyles:', data);\n      // Дополнительная обработка данных, если необходимо\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async () => {\n    try {\n      const data = await applyTableStylesAsync(headerStyles, cellStyles);\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n  const handleHeaderFontSizeChange = (value, type) => {\n    if (value !== '') setHeaderStyles({\n      ...headerStyles,\n      fontSize: value + type\n    });\n  };\n  const handleCellFontSizeChange = (value, type) => {\n    if (value !== '') setCellStyles({\n      ...cellStyles,\n      fontSize: value + type\n    });\n  };\n  const handlePasswordChange = async () => {\n    // Проверка на совпадение нового пароля и его подтверждения\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirm password must match');\n      return;\n    }\n    try {\n      const response = await fetch(url + 'encryptpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword,\n          oldPassword: oldPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      // Очистка полей после успешного обновления пароля\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n\n      // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\n      alert('Password updated successfully');\n    } catch (error) {\n      console.error('Error updating password:', error.message);\n      // Действия в случае ошибки, например, показать сообщение об ошибке\n      alert('Failed to update password. Please try again later.');\n    }\n  };\n  const sortedTimeZones = timeZones.sort((a, b) => {\n    const offsetA = moment.tz(a).utcOffset();\n    const offsetB = moment.tz(b).utcOffset();\n    return offsetA - offsetB;\n  });\n  const isValidGoogleSheetsUrl = url => {\n    // Регулярное выражение для проверки валидности URL Google Sheets\n    const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\n\n    // Проверка URL с помощью регулярного выражения\n    return googleSheetsUrlRegex.test(url);\n  };\n  const handleSpreadsheetUrlChange = url => {\n    setSpreadsheetUrl(url);\n\n    // Проверка валидности URL Google Sheets\n    if (isValidGoogleSheetsUrl(url)) {\n      // URL валиден для Google Sheets - выполнить нужные действия\n      console.log('Valid Google Sheets URL');\n    } else {\n      // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\n      console.log('Invalid Google Sheets URL');\n    }\n  };\n  const handleCredentialFileChange = file => {\n    setCredentialFile(file);\n\n    // Чтение содержимого файла\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Проверка валидности содержимого файла credentials.json\n      if (isValidCredentialsFile(fileContent)) {\n        // Файл credentials.json валиден - выполнить нужные действия\n        console.log('Valid credentials.json file');\n      } else {\n        // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\n        console.log('Invalid credentials.json file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const isValidCredentialsFile = fileContent => {\n    // Преобразование содержимого файла в объект\n    let credentials;\n    try {\n      credentials = JSON.parse(fileContent);\n    } catch (error) {\n      console.error(\"Error parsing credentials.json:\", error);\n      return false;\n    }\n\n    // Проверка наличия обязательных полей\n    const requiredFields = [\"type\", \"project_id\", \"private_key_id\", \"private_key\", \"client_email\", \"client_id\", \"auth_uri\", \"token_uri\", \"auth_provider_x509_cert_url\", \"client_x509_cert_url\"];\n    for (const field of requiredFields) {\n      if (!credentials.hasOwnProperty(field)) {\n        console.error(`Missing required field in credentials.json: ${field}`);\n        return false;\n      }\n    }\n\n    // Проверка типа\n    if (credentials.type !== \"service_account\") {\n      console.error(`Invalid type in credentials.json: ${credentials.type}`);\n      return false;\n    }\n\n    // Проверка формата приватного ключа\n    const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\n    if (!privateKeyFormatRegex.test(credentials.private_key)) {\n      console.error(\"Invalid format for private key in credentials.json\");\n      return false;\n    }\n\n    // Дополнительные проверки, если необходимо\n\n    return true;\n  };\n  const handleSubmit = () => {\n    // Проверка диапазонов названий столбцов и данных\n    // Если все данные корректны, отправка на сервер\n  };\n  const getFolderName = folder => {\n    // Разделяем имя файла по точке\n    const parts = folder.split('.');\n    // Удаляем последнюю часть (расширение файла)\n    parts.pop();\n    // Соединяем оставшиеся части снова в строку\n    return parts.join('.');\n  };\n  const handleRenameFolder = folderName => {\n    let newFolderName = prompt(\"Ievadiet jaunu mapes nosaukumu:\", getFolderName(folderName)); // Предполагается, что у вас есть доступ к названию папки\n    if (!newFolderName.endsWith(\".txt\")) {\n      newFolderName += \".txt\";\n    }\n    if (newFolderName !== null) {\n      fetch(`${url}renameFolder/${encodeURIComponent(folderName)}`, {\n        // Передаем название папки в параметре URL\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newFileName: newFolderName\n        }) // Передаем новое название папки в теле запроса\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Kļūda, mainot mapes nosaukumu');\n        }\n        return response.json();\n      }).then(data => {\n        alert(data.message); // Показываем сообщение об успешном изменении названия\n        // Можно выполнить дополнительные действия после успешного изменения названия папки\n        const updatedFolders = folders.map(folderItem => {\n          if (folderItem === folderName) {\n            return newFolderName;\n          } else {\n            return folderItem;\n          }\n        });\n        setFolders(updatedFolders); // Обновляем состояние с обновленным списком папок\n      }).catch(error => {\n        console.error('Kļūda, mainot mapes nosaukumu:', error);\n        alert('Radās kļūda, mainot mapes nosaukumu');\n      });\n    }\n  };\n  const handleDragEnd = async result => {\n    console.log(result);\n    if (!result.destination) {\n      return;\n    }\n    const items = Array.from(sourcesList);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    try {\n      const response = await fetch(`${url}updateOrder/${encodeURIComponent(selectedFolder)}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items: sourcesList\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      setSourcesList(items);\n    } catch (error) {\n      console.error('Error updating order:', error);\n    }\n  };\n  const getFileDisplay = file => {\n    switch (file.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${url}getSource/${file.file}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"previewItemLink\",\n          children: file.file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 21\n        }, this);\n      case 'URL(foto)':\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.file,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: file.file,\n            alt: `Attēls ${file.index}`,\n            className: \"previewImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 21\n        }, this);\n      case 'URL(video)':\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.file,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            url: file.file,\n            width: \"100%\",\n            height: \"7.4vh\",\n            playing: true,\n            controls: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 21\n        }, this);\n      case 'foto':\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url + `getSource/${file.file}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url + `getSource/${file.file}`,\n            alt: `Attēls ${file.index}`,\n            className: \"previewImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }, this);\n      case 'video':\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url + `getSource/${file.file}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            src: url + `getSource/${file.file}`,\n            controls: true,\n            className: \"previewVideo\",\n            autoPlay: true,\n            loop: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: url + `getSource/${file.file}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 21\n        }, this);\n    }\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      handleGetCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Lietot\\u0101jv\\u0101rds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parole:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: key,\n        size: \"invisible\",\n        ref: reRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: loginInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Ien\\u0101kt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 17\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 987,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'additional' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('additional'),\n          children: \"Papildus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 29\n        }, this), selectedOption === 'additional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spreadsheetUrl\",\n            children: \"Google Sheets URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spreadsheetUrl\",\n            placeholder: \"Enter Google Sheets URL\",\n            value: spreadsheetUrl,\n            onChange: e => handleSpreadsheetUrlChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: e => handleCredentialFileChange(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"columnNamesRange\",\n            children: \"Stabi\\u0146u nosaukumu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"columnNamesRange\",\n            placeholder: \"Enter column names range (e.g., B2:I2)\",\n            value: columnNamesRange,\n            onChange: e => handleColumnNamesRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataRange\",\n            children: \"Datu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dataRange\",\n            placeholder: \"Enter data range (e.g., B3:I)\",\n            value: dataRange,\n            onChange: e => handleDataRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: handleSubmit,\n            children: \"Saglab\\u0101t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 33\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"headerFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru galvenes stiliem\",\n                value: headerStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: headerStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1077,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontFamily\",\n                value: headerStyles.fontFamily,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1088,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1090,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontWeight\",\n                value: headerStyles.fontWeight,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1102,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1103,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cellFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru tabulas \\u0161\\u016Bn\\u0101m\",\n                value: cellStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1113,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: cellStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1125,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontFamily\",\n                value: cellStyles.fontFamily,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontWeight\",\n                value: cellStyles.fontWeight,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1144,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tabulas kr\\u0101sa:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              id: \"tableColor\",\n              value: tableColor,\n              onChange: e => {\n                const newColor = e.target.value;\n                handleTableColorChangeDebounced(newColor);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyTableStyles,\n            children: \"Pielietot tabulas stilus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applySingleColor,\n            children: \"Pielietot vienu kr\\u0101su\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1226,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1245,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyGradient,\n            children: \"Pielietot gradientu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1253,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1254,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '0vh',\n            left: '15vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1279,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1281,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1278,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1277,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1289,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1290,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1291,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1292,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1293,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1294,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1299,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1300,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1301,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1302,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1296,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1305,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1306,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1307,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1308,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1309,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1310,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1304,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1269,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFolder,\n            children: \"Pievienot mapi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 33\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFolderClick(folder),\n              children: getFolderName(folder)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1323,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRenameFolder(folder),\n              children: \"Main\\u012Bt nosaukumu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => handleDeleteFolder(folder),\n              style: {\n                cursor: 'pointer',\n                marginLeft: '5px'\n              },\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 41\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewWindow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              children: \"Choose file to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"fileInput\",\n              accept: \"image/*, video/*, .txt\",\n              onChange: handleFileInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1336,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddURL,\n              children: \"Add URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n              onDragEnd: handleDragEnd,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    border: '2px solid rgba(245, 245, 245, 1)',\n                    marginLeft: '2px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Visi faili:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1347,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(StrictModeDroppable, {\n                    droppableId: \"serverDroppable\",\n                    direction: \"horizontal\",\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"flex-start\" // выравнивание элементов в начале строки\n                      },\n                      children: [serverFiles && serverFiles.length > 0 && serverFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: file.id.toString(),\n                        index: index,\n                        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"previewItem\",\n                            children: [getFileDisplay(file), /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: file.file\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1370,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: () => handleDeleteLink(file.type, file.file),\n                              style: {\n                                cursor: 'pointer'\n                              },\n                              children: \"\\u2716\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1371,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1367,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1362,\n                          columnNumber: 73\n                        }, this)\n                      }, file.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1360,\n                        columnNumber: 65\n                      }, this)), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1350,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1348,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1346,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    border: '2px solid rgba(245, 245, 245, 1)'\n                  },\n                  children: [sourcesList && sourcesList.length > 0 && /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Mapes faili:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1387,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(StrictModeDroppable, {\n                    droppableId: \"droppable\",\n                    direction: \"horizontal\",\n                    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"flex-start\" // выравнивание элементов в начале строки\n                      },\n                      children: [sourcesList && sourcesList.length > 0 && sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: source.id.toString(),\n                        index: index,\n                        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"previewItem\",\n                            children: [getFileDisplay(source), /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: source.file\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1411,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: () => handleDeleteLink(source.type, source.file),\n                              style: {\n                                cursor: 'pointer'\n                              },\n                              children: \"\\u2716\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1412,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1408,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1403,\n                          columnNumber: 73\n                        }, this)\n                      }, source.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1401,\n                        columnNumber: 65\n                      }, this)), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1391,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1389,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1344,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1343,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeZoneSelect\",\n          children: \"Izv\\u0113lieties laika joslu:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeZoneSelect\",\n          value: selectedTimeZone,\n          onChange: handleTimeZoneChange,\n          children: sortedTimeZones.map(timeZone => {\n            const offsetMinutes = moment.tz(timeZone).utcOffset();\n            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\n            const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\n            const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\n            const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: timeZone,\n              children: [\"(UTC \", offsetString, \") \", region, \", \", city]\n            }, timeZone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1443,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1450,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Vecais parole\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1452,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Jaun\\u0101 parole\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Apstipriniet jauno paroli\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Atjaunot paroli\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1470,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Vecais lietot\\u0101jv\\u0101rds\",\n          value: oldLogin,\n          onChange: e => setOldLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1473,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Jaunais lietot\\u0101jv\\u0101rds\",\n          value: newLogin,\n          onChange: e => setNewLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginChange,\n          children: \"Atjaunot lietot\\u0101jv\\u0101rdu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 920,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"6xp3QLIPIiO6QivRZVr8Mu6hjqc=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","ReCAPTCHA","ReactPlayer","moment","ReactAnglePicker","StrictModeDroppable","updateConfig","getAllFiles","addSourceFile","deleteSourceFile","deleteSource","getSourcesList","authenticate","changeLogin","runCSharpScript","getConfig","getCSharpScriptConfigAsnc","updateStyles","applyTableStylesAsync","XLSX","jsxDEV","_jsxDEV","AdminConsole","_s","login","setLogin","password","setPassword","loginInfo","setLoginInfo","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableColor","setTableColor","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","units","folders","setFolders","selectedFolder","setSelectedFolder","sourcesList","setSourcesList","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","oldLogin","setOldLogin","newLogin","setNewLogin","selectedTimeZone","setSelectedTimeZone","timeZones","tz","names","spreadsheetUrl","setSpreadsheetUrl","credentialFile","setCredentialFile","columnNamesRange","setColumnNamesRange","dataRange","setDataRange","reRef","key","serverFiles","setServerFiles","handleTableColorChangeDebounced","debounce","newColor","fetchSources","response","fetch","ok","Error","data","json","filesWithMetadata","files","map","file","index","id","type","getFileType","console","log","error","handleAddURL","urlInput","prompt","isValidURL","fileType","getFileTypeFromURL","encodeURIComponent","method","string","URL","_","contentType","headers","get","includes","handleFileInputChange","event","target","name","formData","FormData","append","body","fileName","extension","split","pop","toLowerCase","handleColumnNamesRangeChange","range","isValidRange","isValidCellCharacter","charCode","excelRangeRegex","test","startCell","endCell","columnRegex","match","rowRegex","handleDataRangeChange","handleTimeZoneChange","e","value","updates","getAllFolders","handleAddFolder","handleDeleteFolder","window","confirm","handleDeleteLink","success","prevList","filter","item","handleFolderClick","sourcesWithIndex","source","handleTabClick","tab","handleLogin","token","current","executeAsync","reset","statusText","handleLoginChange","alert","handleRunCSharpScript","dataArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","handleGetCSharpScriptConfig","handleGetConfig","cSharpScriptConfig","handleOptionChange","option","handleColorChangeDebounced","func","timeout","timer","args","clearTimeout","setTimeout","apply","handleColorChange","handleChange","handleColorChange1Debounced","handleColorChange2Debounced","handleColorChange1","handleColorChange2","applySingleColor","bodyData","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","handleHeaderFontSizeChange","handleCellFontSizeChange","handlePasswordChange","JSON","stringify","message","sortedTimeZones","sort","a","b","offsetA","utcOffset","offsetB","isValidGoogleSheetsUrl","googleSheetsUrlRegex","handleSpreadsheetUrlChange","handleCredentialFileChange","reader","FileReader","onload","fileContent","result","isValidCredentialsFile","readAsText","credentials","parse","requiredFields","field","hasOwnProperty","privateKeyFormatRegex","private_key","handleSubmit","getFolderName","folder","parts","join","handleRenameFolder","folderName","newFolderName","endsWith","newFileName","then","updatedFolders","folderItem","catch","handleDragEnd","destination","items","Array","from","reorderedItem","splice","getFileDisplay","href","rel","className","children","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","playing","controls","muted","autoPlay","loop","handleLoadExcel","blob","workbook","read","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","isArray","length","formattedData","Object","keys","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","entries","status","updateResponses","forEach","updateResponse","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","htmlFor","onChange","sitekey","size","ref","onClick","placeholder","accept","replace","unit","font","onFinalChange","style","top","left","transform","background","border","cursor","marginLeft","onDragEnd","display","justifyContent","droppableId","direction","provided","droppableProps","innerRef","flexWrap","draggableId","toString","draggableProps","dragHandleProps","timeZone","offsetMinutes","offsetHours","Math","floor","abs","offsetMinutesPart","offsetString","padStart","region","city","part","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ReactPlayer from 'react-player';\r\nimport moment from 'moment-timezone';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport { StrictModeDroppable, updateConfig, getAllFiles, addSourceFile, deleteSourceFile, deleteSource, getSourcesList, authenticate, changeLogin, runCSharpScript, getConfig, getCSharpScriptConfigAsnc, updateStyles, applyTableStylesAsync } from './adminToServer.js';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginInfo,setLoginInfo] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState('aizvietosanas');\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n    const units = ['px', '%', 'vw', 'vh'];\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolder, setSelectedFolder] = useState('');\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [oldLogin, setOldLogin] = useState('');\r\n    const [newLogin, setNewLogin] = useState('');\r\n    const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\r\n    const timeZones = moment.tz.names();\r\n    const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\r\n    const [credentialFile, setCredentialFile] = useState(null);\r\n    const [columnNamesRange, setColumnNamesRange] = useState('');\r\n    const [dataRange, setDataRange] = useState('');\r\n    const reRef = useRef();\r\n    const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\r\n    const [serverFiles, setServerFiles] = useState([]);\r\n\r\n    const handleTableColorChangeDebounced = useCallback(debounce((newColor) => {\r\n        setHeaderStyles({ ...headerStyles, color: newColor });\r\n        setCellStyles({ ...cellStyles, color: newColor });\r\n        setTableColor(newColor);\r\n    }, 300), [headerStyles, cellStyles]);\r\n\r\n    useEffect(() => {\r\n        const fetchSources = async () => {\r\n            try {\r\n                const response = await fetch(url + 'getAllSources');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sources');\r\n                }\r\n                const data = await response.json();\r\n                const filesWithMetadata = data.files.map((file, index) => ({\r\n                    id: index,\r\n                    type: getFileType(file),\r\n                    file,\r\n                    index: index\r\n                }));\r\n                setServerFiles(filesWithMetadata);\r\n                console.log(\"All files: \" + filesWithMetadata);\r\n            } catch (error) {\r\n                console.error('Error fetching sources:', error);\r\n            }\r\n        };\r\n        fetchSources();\r\n    }, []);\r\n\r\n    const handleAddURL = async () => {\r\n        let urlInput = prompt('Enter URL:');\r\n        if (urlInput) {\r\n            // Проверяем, является ли введенное значение ссылкой\r\n            if (isValidURL(urlInput)) {\r\n                // Проверяем, является ли ссылка видео или фото\r\n                const fileType = await getFileTypeFromURL(urlInput);\r\n\r\n                // Если тип файла определен, делаем запрос на сервер\r\n                if (fileType) {\r\n                    try {\r\n                        const response = await fetch(`${url}addSource/${encodeURIComponent(selectedFolder)}/${fileType}/${encodeURIComponent(urlInput)}`, {\r\n                            method: 'POST',\r\n                        });\r\n                        if (response.ok) {\r\n                            console.log('File added successfully');\r\n                        } else {\r\n                            console.error('Failed to add file');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error adding file:', error);\r\n                    }\r\n                } else {\r\n                    console.error('Unsupported file type');\r\n                }\r\n            } else {\r\n                console.error('Invalid URL');\r\n            }\r\n        } else {\r\n            console.error('URL is empty');\r\n        }\r\n    };\r\n\r\n    // Функция для определения, является ли строка URL\r\n    function isValidURL(string) {\r\n        try {\r\n            new URL(string);\r\n            return true;\r\n        } catch (_) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // Функция для определения типа файла по URL\r\n    const getFileTypeFromURL = async (url) => {\r\n        try {\r\n            const response = await fetch(url);\r\n            const contentType = response.headers.get('content-type');\r\n            if (url.includes('youtu.be') || url.includes('youtube.com')) {\r\n                return 'URL(video)';\r\n            } else if (contentType && contentType.includes('image')) {\r\n                return 'URL(foto)';\r\n            } else if (contentType && contentType.includes('video')) {\r\n                return 'URL(video)';\r\n            } else {\r\n                return null; // Неизвестный тип файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching URL:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const handleFileInputChange = async (event) => {\r\n        if (event.target.files) { // Проверяем, что есть выбранный файл\r\n            const file = event.target.files[0];\r\n            if (!file) return;\r\n\r\n            // Определяем тип файла на основе его расширения\r\n            const fileType = getFileType(file.name);\r\n\r\n            // Если тип файла определен, делаем запрос на сервер\r\n            if (fileType) {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('type', fileType);\r\n                formData.append('folder', selectedFolder);\r\n\r\n                try {\r\n                    const response = await fetch(`${url}addSource/${encodeURIComponent(selectedFolder)}/${fileType}/${encodeURIComponent(file.name)}`, {\r\n                        method: 'POST',\r\n                        body: formData\r\n                    });\r\n                    if (response.ok) {\r\n                        console.log('File added successfully');\r\n                    } else {\r\n                        console.error('Failed to add file');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error adding file:', error);\r\n                }\r\n            } else {\r\n                console.error('Unsupported file type');\r\n            }\r\n        }\r\n    };\r\n\r\n    // Функция для определения типа файла на основе его расширения\r\n    const getFileType = (fileName) => {\r\n        const extension = fileName.split('.').pop();\r\n        switch (extension.toLowerCase()) {\r\n            case 'jpg':\r\n            case 'jpeg':\r\n            case 'png':\r\n            case 'gif':\r\n                return 'foto';\r\n            case 'mp4':\r\n                return 'video';\r\n            case 'txt':\r\n                return 'text';\r\n            default:\r\n                return null; // Неизвестный тип файла\r\n        }\r\n    };\r\n\r\n    const handleColumnNamesRangeChange = (range) => {\r\n        if (isValidRange(range))\r\n            setColumnNamesRange(range);\r\n        else\r\n            console.log(\"Invalid\");\r\n    };\r\n\r\n    const isValidCellCharacter = (charCode) => {\r\n        // Допустимыми символами являются заглавные латинские буквы\r\n        return (charCode >= 65 && charCode <= 90); // A-Z\r\n    };\r\n\r\n    const isValidRange = (range) => {\r\n        // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\r\n        const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\r\n        if (!excelRangeRegex.test(range)) {\r\n            return false; // Неверный формат ренджа\r\n        }\r\n\r\n        // Разделить рендж на две ячейки: начальную и конечную\r\n        const [startCell, endCell] = range.split(':');\r\n\r\n        // Проверка корректности номеров столбцов\r\n        const columnRegex = /^[A-Za-z]+$/;\r\n        if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\r\n            return false; // Некорректное обозначение столбцов\r\n        }\r\n\r\n        // Проверка корректности номеров строк\r\n        const rowRegex = /^\\d+$/;\r\n        if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\r\n            return false; // Некорректное обозначение строк\r\n        }\r\n\r\n        return true; // Рендж соответствует формату Excel\r\n    };\r\n\r\n    const handleDataRangeChange = (range) => {\r\n        setDataRange(range);\r\n    };\r\n\r\n    const handleTimeZoneChange = async (e) => {\r\n        setSelectedTimeZone(e.target.value);\r\n        const updates = [\r\n            { key: 'TimeZone', value: e.target.value },\r\n            // Другие обновления конфигурации, если есть\r\n        ];\r\n\r\n        try {\r\n            const data = await updateConfig(updates);\r\n            console.log(data); // Вывод ответа от сервера\r\n        } catch (error) {\r\n            console.error('Error updating config:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAllFolders();\r\n    }, []);\r\n\r\n    const getAllFolders = async () => {\r\n        try {\r\n            const data = await getAllFiles();\r\n            setFolders(data.files);\r\n        } catch (error) {\r\n            console.error('Error getting folders:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddFolder = async () => {\r\n        let fileName = prompt('Enter folder name:');\r\n        if (fileName) {\r\n            // Добавляем .txt, если расширение не указано\r\n            if (!fileName.includes('.')) {\r\n                fileName += '.txt';\r\n            }\r\n\r\n            try {\r\n                await addSourceFile(fileName);\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error adding folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (fileName) => {\r\n        if (window.confirm('Are you sure you want to delete this folder?')) {\r\n            try {\r\n                await deleteSourceFile(fileName);\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error deleting folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteLink = async (type, fileName) => {\r\n        try {\r\n            const success = await deleteSource(selectedFolder, type, fileName);\r\n            if (success) {\r\n                console.log('File deleted successfully');\r\n                // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\r\n                setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\r\n            } else {\r\n                console.error('Error deleting file: Failed to delete file');\r\n                // Обработка ошибок удаления файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            // Обработка ошибок сетевого запроса\r\n        }\r\n    };\r\n\r\n\r\n    const handleFolderClick = async (fileName) => {\r\n        setSelectedFolder(fileName);\r\n        console.log('Getting sources list:', fileName);\r\n        try {\r\n            const data = await getSourcesList(fileName);\r\n            const sourcesWithIndex = data.sourcesList.map((source, index) => ({\r\n                ...source,\r\n                index: index\r\n            }));\r\n            setSourcesList(sourcesWithIndex);\r\n            console.log('Got sources list:', sourcesWithIndex);\r\n        } catch (error) {\r\n            console.error('Error getting sources list:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Получаем токен ReCAPTCHA\r\n            const token = await reRef.current.executeAsync();\r\n            reRef.current.reset();\r\n\r\n            // Аутентификация\r\n            const response = await authenticate(login, password, token);\r\n\r\n            // Обрабатываем ответ сервера\r\n            if (response.ok) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                // Обработка ошибки входа\r\n                console.error('Login failed');\r\n                setLoginInfo(response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setLoginInfo(error);\r\n        }\r\n    };\r\n\r\n    const handleLoginChange = async () => {\r\n        if (oldLogin === '' || newLogin === '' || password === '') {\r\n            alert('Old login, new login, and new password are required.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const { success, error } = await changeLogin(oldLogin, newLogin, password);\r\n            if (success) {\r\n                alert('Login updated successfully.');\r\n            } else {\r\n                alert(error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating login:', error);\r\n            alert('Network error. Failed to update login.');\r\n        }\r\n    };\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const dataArray = await runCSharpScript();\r\n            if (dataArray) {\r\n                const ws = XLSX.utils.json_to_sheet(dataArray);\r\n                const wb = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n                XLSX.writeFile(wb, 'data.xlsx');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        handleGetCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const handleGetConfig = async () => {\r\n        try {\r\n            const config = await getConfig();\r\n            setConfig(config);\r\n        } catch (error) {\r\n            console.error('Error getting configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleGetCSharpScriptConfig = async () => {\r\n        try {\r\n            const cSharpScriptConfig = await getCSharpScriptConfigAsnc();\r\n            setCSharpScriptConfig(cSharpScriptConfig);\r\n        } catch (error) {\r\n            console.error('Error getting C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChangeDebounced = debounce((newColor) => {\r\n        setColor(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета\r\n    const handleColorChange = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChangeDebounced(newColor);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const handleColorChange1Debounced = debounce((newColor) => {\r\n        setColor1(newColor);\r\n    }, 300);\r\n\r\n    // Обработчик изменения цвета 2 с задержкой\r\n    const handleColorChange2Debounced = debounce((newColor) => {\r\n        setColor2(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета 1\r\n    const handleColorChange1 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange1Debounced(newColor);\r\n    };\r\n\r\n    // Обработчик изменения цвета 2\r\n    const handleColorChange2 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange2Debounced(newColor);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        const bodyData = { color };\r\n        try {\r\n            const data = await updateStyles(bodyData);\r\n            console.log('Response from updateStyles:', data);\r\n            // Дополнительная обработка данных, если необходимо\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        const bodyData = { color1, color2, angle };\r\n        try {\r\n            const data = await updateStyles(bodyData);\r\n            console.log('Response from updateStyles:', data);\r\n            // Дополнительная обработка данных, если необходимо\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n        const bodyData = { defaultGradient };\r\n        try {\r\n            const data = await updateStyles(bodyData);\r\n            console.log('Response from updateStyles:', data);\r\n            // Дополнительная обработка данных, если необходимо\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async () => {\r\n        try {\r\n            const data = await applyTableStylesAsync(headerStyles, cellStyles);\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n    const handleHeaderFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setHeaderStyles({ ...headerStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handleCellFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setCellStyles({ ...cellStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handlePasswordChange = async () => {\r\n        // Проверка на совпадение нового пароля и его подтверждения\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirm password must match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url + 'encryptpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: newPassword,\r\n                    oldPassword: oldPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update password');\r\n            }\r\n\r\n            // Очистка полей после успешного обновления пароля\r\n            setOldPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n\r\n            // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\r\n            alert('Password updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating password:', error.message);\r\n            // Действия в случае ошибки, например, показать сообщение об ошибке\r\n            alert('Failed to update password. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const sortedTimeZones = timeZones.sort((a, b) => {\r\n        const offsetA = moment.tz(a).utcOffset();\r\n        const offsetB = moment.tz(b).utcOffset();\r\n        return offsetA - offsetB;\r\n    });\r\n\r\n    const isValidGoogleSheetsUrl = (url) => {\r\n        // Регулярное выражение для проверки валидности URL Google Sheets\r\n        const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\r\n\r\n        // Проверка URL с помощью регулярного выражения\r\n        return googleSheetsUrlRegex.test(url);\r\n    };\r\n\r\n    const handleSpreadsheetUrlChange = (url) => {\r\n        setSpreadsheetUrl(url);\r\n\r\n        // Проверка валидности URL Google Sheets\r\n        if (isValidGoogleSheetsUrl(url)) {\r\n            // URL валиден для Google Sheets - выполнить нужные действия\r\n            console.log('Valid Google Sheets URL');\r\n        } else {\r\n            // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\r\n            console.log('Invalid Google Sheets URL');\r\n        }\r\n    };\r\n\r\n    const handleCredentialFileChange = (file) => {\r\n        setCredentialFile(file);\r\n\r\n        // Чтение содержимого файла\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const fileContent = event.target.result;\r\n\r\n            // Проверка валидности содержимого файла credentials.json\r\n            if (isValidCredentialsFile(fileContent)) {\r\n                // Файл credentials.json валиден - выполнить нужные действия\r\n                console.log('Valid credentials.json file');\r\n            } else {\r\n                // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\r\n                console.log('Invalid credentials.json file');\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const isValidCredentialsFile = (fileContent) => {\r\n        // Преобразование содержимого файла в объект\r\n        let credentials;\r\n        try {\r\n            credentials = JSON.parse(fileContent);\r\n        } catch (error) {\r\n            console.error(\"Error parsing credentials.json:\", error);\r\n            return false;\r\n        }\r\n\r\n        // Проверка наличия обязательных полей\r\n        const requiredFields = [\r\n            \"type\",\r\n            \"project_id\",\r\n            \"private_key_id\",\r\n            \"private_key\",\r\n            \"client_email\",\r\n            \"client_id\",\r\n            \"auth_uri\",\r\n            \"token_uri\",\r\n            \"auth_provider_x509_cert_url\",\r\n            \"client_x509_cert_url\"\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!credentials.hasOwnProperty(field)) {\r\n                console.error(`Missing required field in credentials.json: ${field}`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Проверка типа\r\n        if (credentials.type !== \"service_account\") {\r\n            console.error(`Invalid type in credentials.json: ${credentials.type}`);\r\n            return false;\r\n        }\r\n\r\n        // Проверка формата приватного ключа\r\n        const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\r\n        if (!privateKeyFormatRegex.test(credentials.private_key)) {\r\n            console.error(\"Invalid format for private key in credentials.json\");\r\n            return false;\r\n        }\r\n\r\n        // Дополнительные проверки, если необходимо\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Проверка диапазонов названий столбцов и данных\r\n        // Если все данные корректны, отправка на сервер\r\n    };\r\n\r\n    const getFolderName = (folder) => {\r\n        // Разделяем имя файла по точке\r\n        const parts = folder.split('.');\r\n        // Удаляем последнюю часть (расширение файла)\r\n        parts.pop();\r\n        // Соединяем оставшиеся части снова в строку\r\n        return parts.join('.');\r\n    };\r\n\r\n    const handleRenameFolder = (folderName) => {\r\n        let newFolderName = prompt(\"Ievadiet jaunu mapes nosaukumu:\", getFolderName(folderName)); // Предполагается, что у вас есть доступ к названию папки\r\n        if (!newFolderName.endsWith(\".txt\")) {\r\n            newFolderName += \".txt\";\r\n        }\r\n\r\n        if (newFolderName !== null) {\r\n            fetch(`${url}renameFolder/${encodeURIComponent(folderName)}`, { // Передаем название папки в параметре URL\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ newFileName: newFolderName }) // Передаем новое название папки в теле запроса\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Kļūda, mainot mapes nosaukumu');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    alert(data.message); // Показываем сообщение об успешном изменении названия\r\n                    // Можно выполнить дополнительные действия после успешного изменения названия папки\r\n                    const updatedFolders = folders.map(folderItem => {\r\n                        if (folderItem === folderName) {\r\n                            return newFolderName;\r\n                        } else {\r\n                            return folderItem;\r\n                        }\r\n                    });\r\n                    setFolders(updatedFolders); // Обновляем состояние с обновленным списком папок\r\n                })\r\n                .catch(error => {\r\n                    console.error('Kļūda, mainot mapes nosaukumu:', error);\r\n                    alert('Radās kļūda, mainot mapes nosaukumu');\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleDragEnd = async (result) => {\r\n        console.log(result);\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = Array.from(sourcesList);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        try {\r\n            const response = await fetch(`${url}updateOrder/${encodeURIComponent(selectedFolder)}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ items: sourcesList })\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(data);\r\n\r\n            setSourcesList(items);\r\n        } catch (error) {\r\n            console.error('Error updating order:', error);\r\n        }\r\n    };\r\n\r\n    const getFileDisplay = (file) => {\r\n        switch (file.type) {\r\n            case 'text':\r\n                return (\r\n                    <a href={`${url}getSource/${file.file}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"previewItemLink\">\r\n                        {file.file}\r\n                    </a>\r\n                );\r\n            case 'URL(foto)':\r\n                return (\r\n                    <a href={file.file} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={file.file} alt={`Attēls ${file.index}`} className=\"previewImage\" />\r\n                    </a>\r\n                );\r\n            case 'URL(video)':\r\n                return (\r\n                    <a href={file.file} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <ReactPlayer\r\n                            url={file.file}\r\n                            width=\"100%\"\r\n                            height=\"7.4vh\"\r\n                            playing\r\n                            controls\r\n                            muted\r\n                        />\r\n                    </a>\r\n                );\r\n            case 'foto':\r\n                return (\r\n                    <a href={url + `getSource/${file.file}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={url + `getSource/${file.file}`} alt={`Attēls ${file.index}`} className=\"previewImage\" />\r\n                    </a>\r\n                );\r\n            case 'video':\r\n                return (\r\n                    <a href={url + `getSource/${file.file}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <video src={url + `getSource/${file.file}`} controls className=\"previewVideo\" autoPlay loop muted />\r\n                    </a>\r\n                );\r\n            default:\r\n                return (\r\n                    <div>{url + `getSource/${file.file}`}</div>\r\n                );\r\n        }\r\n    };\r\n\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            handleGetCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <div className=\"admin-form\">\r\n                    <div>\r\n                        <label htmlFor=\"login\">Lietotājvārds:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"login\"\r\n                            value={login}\r\n                            onChange={(e) => setLogin(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Parole:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <ReCAPTCHA\r\n                        sitekey={key}\r\n                        size=\"invisible\"\r\n                        ref={reRef}\r\n                    />\r\n                    <div>\r\n                        <label>{loginInfo}</label>\r\n                    </div>\r\n                    <button onClick={handleLogin}>Ienākt</button>\r\n\r\n                </div>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'additional' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('additional')}\r\n                            >\r\n                                Papildus\r\n                            </button>\r\n                            {selectedOption === 'additional' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    <label htmlFor=\"spreadsheetUrl\">Google Sheets URL:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"spreadsheetUrl\"\r\n                                        placeholder=\"Enter Google Sheets URL\"\r\n                                        value={spreadsheetUrl}\r\n                                        onChange={(e) => handleSpreadsheetUrlChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если ссылка валидна */}\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={(e) => handleCredentialFileChange(e.target.files[0])}\r\n                                    />\r\n                                    {/* Возможность загрузить файл credentials.json */}\r\n                                    <br />\r\n                                    <label htmlFor=\"columnNamesRange\">Stabiņu nosaukumu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"columnNamesRange\"\r\n                                        placeholder=\"Enter column names range (e.g., B2:I2)\"\r\n                                        value={columnNamesRange}\r\n                                        onChange={(e) => handleColumnNamesRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если диапазон названий столбцов валиден */}\r\n                                    <br />\r\n                                    <label htmlFor=\"dataRange\">Datu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"dataRange\"\r\n                                        placeholder=\"Enter data range (e.g., B3:I)\"\r\n                                        value={dataRange}\r\n                                        onChange={(e) => handleDataRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Кнопка для сохранения на сервере */}\r\n                                    <button className=\"apply-button\" onClick={handleSubmit}>Saglabāt</button>\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'tabula' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"headerFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru galvenes stiliem\"\r\n                                                value={headerStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={headerStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"headerFontFamily\"\r\n                                                value={headerStyles.fontFamily}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"headerFontWeight\"\r\n                                                value={headerStyles.fontWeight}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                        {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"cellFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru tabulas šūnām\"\r\n                                                value={cellStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={cellStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"cellFontFamily\"\r\n                                                value={cellStyles.fontFamily}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"cellFontWeight\"\r\n                                                value={cellStyles.fontWeight}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Tabulas krāsa:</h4>\r\n                                        <input\r\n                                            type=\"color\"\r\n                                            id=\"tableColor\"\r\n                                            value={tableColor}\r\n                                            onChange={(e) => {\r\n                                                const newColor = e.target.value;\r\n                                                handleTableColorChangeDebounced(newColor);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <button className=\"apply-button\" onClick={applyTableStyles}>Pielietot tabulas stilus</button>\r\n\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <button className=\"apply-button\" onClick={applySingleColor}>Pielietot vienu krāsu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <br />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}<br /><br />\r\n                                    <button className=\"apply-button\" onClick={applyGradient}>Pielietot gradientu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '0vh', left: '15vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead>\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            <div>\r\n                                <button onClick={handleAddFolder}>Pievienot mapi</button>\r\n                                {folders.map(folder => (\r\n                                    <div key={folder}>\r\n                                        <button onClick={() => handleFolderClick(folder)}>{getFolderName(folder)}</button>\r\n                                        <button onClick={() => handleRenameFolder(folder)}>Mainīt nosaukumu</button>\r\n                                        <span\r\n                                            onClick={() => handleDeleteFolder(folder)}\r\n                                            style={{ cursor: 'pointer', marginLeft: '5px' }}>\r\n                                            ✖\r\n                                        </span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"previewWindow\">\r\n                                <div>\r\n                                    <label htmlFor=\"fileInput\">Choose file to add:</label>\r\n                                    <input type=\"file\" id=\"fileInput\" accept=\"image/*, video/*, .txt\" onChange={handleFileInputChange} />\r\n                                </div>\r\n                                <div>\r\n                                    <button onClick={handleAddURL}>Add URL</button>\r\n                                </div>\r\n\r\n                                <div className=\"container\">\r\n                                    <DragDropContext onDragEnd={handleDragEnd}>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                            {/* Таблица с файлами, находящимися на сервере */}\r\n                                            <div style={{ border: '2px solid rgba(245, 245, 245, 1)',marginLeft: '2px' }}>\r\n                                                <h4>Visi faili:</h4>\r\n                                                <StrictModeDroppable droppableId=\"serverDroppable\" direction=\"horizontal\">\r\n                                                    {(provided) => (\r\n                                                        <div\r\n                                                            {...provided.droppableProps}\r\n                                                            ref={provided.innerRef}\r\n                                                            style={{\r\n                                                                display: \"flex\",\r\n                                                                flexWrap: \"wrap\",\r\n                                                                justifyContent: \"flex-start\", // выравнивание элементов в начале строки\r\n                                                            }}\r\n                                                        >\r\n                                                            {serverFiles && serverFiles.length > 0 && serverFiles.map((file, index) => (\r\n                                                                <Draggable key={file.id} draggableId={file.id.toString()} index={index}>\r\n                                                                    {(provided) => (\r\n                                                                        <div\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            {...provided.dragHandleProps}\r\n                                                                        >\r\n                                                                            <div className=\"previewItem\">\r\n                                                                                {/* Отображаем файлы, находящиеся на сервере */}\r\n                                                                                {getFileDisplay(file)}\r\n                                                                                <span>{file.file}</span>\r\n                                                                                <span onClick={() => handleDeleteLink(file.type, file.file)} style={{ cursor: 'pointer' }}>✖</span>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </Draggable>\r\n                                                            ))}\r\n                                                            {provided.placeholder}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </StrictModeDroppable>\r\n                                            </div>\r\n\r\n                                            {/* Таблица с файлами, загруженными пользователем */}\r\n                                            <div style={{ border: '2px solid rgba(245, 245, 245, 1)' }}>\r\n                                                {sourcesList && sourcesList.length > 0 &&\r\n                                                    <h4>Mapes faili:</h4>\r\n                                                }\r\n                                                <StrictModeDroppable droppableId=\"droppable\" direction=\"horizontal\">\r\n                                                    {(provided) => (\r\n                                                        <div\r\n                                                            {...provided.droppableProps}\r\n                                                            ref={provided.innerRef}\r\n                                                            style={{\r\n                                                                display: \"flex\",\r\n                                                                flexWrap: \"wrap\",\r\n                                                                justifyContent: \"flex-start\", // выравнивание элементов в начале строки\r\n                                                            }}\r\n                                                        >\r\n                                                            {sourcesList && sourcesList.length > 0 && sourcesList.map((source, index) => (\r\n                                                                <Draggable key={source.id} draggableId={source.id.toString()} index={index}>\r\n                                                                    {(provided) => (\r\n                                                                        <div\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            {...provided.dragHandleProps}\r\n                                                                        >\r\n                                                                            <div className=\"previewItem\">\r\n                                                                                {/* Отображаем файлы, загруженные пользователем */}\r\n                                                                                {getFileDisplay(source)}\r\n                                                                                <span>{source.file}</span>\r\n                                                                                <span onClick={() => handleDeleteLink(source.type, source.file)} style={{ cursor: 'pointer' }}>✖</span>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </Draggable>\r\n                                                            ))}\r\n                                                            {provided.placeholder}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </StrictModeDroppable>\r\n                                            </div>\r\n                                        </div>\r\n                                    </DragDropContext>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <label htmlFor=\"timeZoneSelect\">Izvēlieties laika joslu:</label>\r\n                            <select id=\"timeZoneSelect\" value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n                                {sortedTimeZones.map(timeZone => {\r\n                                    const offsetMinutes = moment.tz(timeZone).utcOffset();\r\n                                    const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\r\n                                    const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\r\n                                    const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\r\n                                    const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\r\n                                    return (\r\n                                        <option key={timeZone} value={timeZone}>\r\n                                            (UTC {offsetString}) {region}, {city}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n\r\n                            <br />\r\n                            {/* Поля ввода для обновления пароля */}\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Vecais parole\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Jaunā parole\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Apstipriniet jauno paroli\"\r\n                                value={confirmNewPassword}\r\n                                onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handlePasswordChange}>Atjaunot paroli</button>\r\n                            <br />\r\n                            {/* Поля ввода для обновления логина */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Vecais lietotājvārds\"\r\n                                value={oldLogin}\r\n                                onChange={(e) => setOldLogin(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Jaunais lietotājvārds\"\r\n                                value={newLogin}\r\n                                onChange={(e) => setNewLogin(e.target.value)}\r\n                            />\r\n                            <button onClick={handleLoginChange}>Atjaunot lietotājvārdu</button>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}