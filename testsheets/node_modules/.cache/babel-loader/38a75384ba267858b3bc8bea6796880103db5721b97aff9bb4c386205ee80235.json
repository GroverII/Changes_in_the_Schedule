{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport ReactPlayer from 'react-player';\nimport moment from 'moment-timezone';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport { updateConfig, getAllFiles, addSourceFile, deleteSourceFile, deleteSource, getSourcesList, logIn, changeLogin, runCSharpScript } from './adminToServer.js';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginInfo, setLoginInfo] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState('aizvietosanas');\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableColor, setTableColor] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const units = ['px', '%', 'vw', 'vh'];\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [sourcesList, setSourcesList] = useState([]);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [oldLogin, setOldLogin] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\n  const timeZones = moment.tz.names();\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\n  const [credentialFile, setCredentialFile] = useState(null);\n  const [columnNamesRange, setColumnNamesRange] = useState('');\n  const [dataRange, setDataRange] = useState('');\n  const reRef = useRef();\n  const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\n  const [fileType, setFileType] = useState('');\n  const [fileInputVisible, setFileInputVisible] = useState(false);\n  const [fileInputValue, setFileInputValue] = useState('');\n  const handleTableColorChangeDebounced = useCallback(debounce(newColor => {\n    setHeaderStyles({\n      ...headerStyles,\n      color: newColor\n    });\n    setCellStyles({\n      ...cellStyles,\n      color: newColor\n    });\n    setTableColor(newColor);\n  }, 300), [headerStyles, cellStyles]);\n  const handleFileTypeChange = event => {\n    const selectedFileType = event.target.value;\n    setFileType(selectedFileType);\n    setFileInputVisible(selectedFileType === 'foto' || selectedFileType === 'video' || selectedFileType === 'text');\n    setFileInputValue('');\n  };\n  const handleFileInputChange = event => {\n    setFileInputValue(event.target.value);\n  };\n  const handleColumnNamesRangeChange = range => {\n    if (isValidRange(range)) setColumnNamesRange(range);else console.log(\"Invalid\");\n  };\n  const isValidCellCharacter = charCode => {\n    // Допустимыми символами являются заглавные латинские буквы\n    return charCode >= 65 && charCode <= 90; // A-Z\n  };\n  const isValidRange = range => {\n    // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\n    const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\n    if (!excelRangeRegex.test(range)) {\n      return false; // Неверный формат ренджа\n    }\n\n    // Разделить рендж на две ячейки: начальную и конечную\n    const [startCell, endCell] = range.split(':');\n\n    // Проверка корректности номеров столбцов\n    const columnRegex = /^[A-Za-z]+$/;\n    if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\n      return false; // Некорректное обозначение столбцов\n    }\n\n    // Проверка корректности номеров строк\n    const rowRegex = /^\\d+$/;\n    if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\n      return false; // Некорректное обозначение строк\n    }\n    return true; // Рендж соответствует формату Excel\n  };\n  const handleDataRangeChange = range => {\n    setDataRange(range);\n  };\n  const handleTimeZoneChange = async e => {\n    setSelectedTimeZone(e.target.value);\n    const updates = [{\n      key: 'TimeZone',\n      value: e.target.value\n    }\n    // Другие обновления конфигурации, если есть\n    ];\n    try {\n      const data = await updateConfig(updates);\n      console.log(data); // Вывод ответа от сервера\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n  useEffect(() => {\n    getAllFolders();\n  }, []);\n  const getAllFolders = async () => {\n    try {\n      const data = await getAllFiles();\n      setFolders(data.files);\n    } catch (error) {\n      console.error('Error getting folders:', error);\n    }\n  };\n  const handleAddFolder = async () => {\n    let fileName = prompt('Enter folder name:');\n    if (fileName) {\n      // Добавляем .txt, если расширение не указано\n      if (!fileName.includes('.')) {\n        fileName += '.txt';\n      }\n      try {\n        await addSourceFile(fileName);\n        getAllFolders();\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    }\n  };\n  const handleDeleteFolder = async fileName => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await deleteSourceFile(fileName);\n        getAllFolders();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteLink = async (type, fileName) => {\n    try {\n      const success = await deleteSource(selectedFolder, type, fileName);\n      if (success) {\n        console.log('File deleted successfully');\n        // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\n        setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\n      } else {\n        console.error('Error deleting file: Failed to delete file');\n        // Обработка ошибок удаления файла\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      // Обработка ошибок сетевого запроса\n    }\n  };\n  const handleFolderClick = async fileName => {\n    setSelectedFolder(fileName);\n    console.log('Getting sources list:', fileName);\n    try {\n      const data = await getSourcesList(fileName);\n      setSourcesList(data.sourcesList);\n      console.log('Getted sources list:', data);\n    } catch (error) {\n      console.error('Error getting sources list:', error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async (login, password) => {\n    try {\n      const token = await reRef.current.executeAsync();\n      reRef.current.reset();\n      const {\n        isLoggedIn,\n        data,\n        error\n      } = await logIn(login, password, token);\n      console.log(isLoggedIn, data, error);\n      if (isLoggedIn) {\n        setIsLoggedIn(true);\n      } else {\n        console.error('Login failed');\n        setLoginInfo(error.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginInfo(error);\n    }\n  };\n  const handleLoginChange = async (oldLogin, newLogin, password) => {\n    try {\n      const {\n        success,\n        error\n      } = await changeLogin(oldLogin, newLogin, password);\n      if (success) {\n        alert('Login updated successfully.');\n      } else {\n        alert(error || 'Failed to update login.');\n      }\n    } catch (error) {\n      alert('Network error. Failed to update login.');\n      console.error('Error updating login:', error);\n    }\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const dataArray = await runCSharpScript();\n      // Обработка полученных данных\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n      // Обработка ошибок\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChangeDebounced = debounce(newColor => {\n    setColor(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета\n  const handleColorChange = e => {\n    const newColor = e.target.value;\n    handleColorChangeDebounced(newColor);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const handleColorChange1Debounced = debounce(newColor => {\n    setColor1(newColor);\n  }, 300);\n\n  // Обработчик изменения цвета 2 с задержкой\n  const handleColorChange2Debounced = debounce(newColor => {\n    setColor2(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета 1\n  const handleColorChange1 = e => {\n    const newColor = e.target.value;\n    handleColorChange1Debounced(newColor);\n  };\n\n  // Обработчик изменения цвета 2\n  const handleColorChange2 = e => {\n    const newColor = e.target.value;\n    handleColorChange2Debounced(newColor);\n  };\n  const applySingleColor = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color1,\n          color2,\n          angle\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    try {\n      const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          defaultGradient\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async () => {\n    try {\n      const headerStylesToSend = {\n        fontSize: headerStyles.fontSize,\n        fontFamily: headerStyles.fontFamily,\n        fontWeight: headerStyles.fontWeight,\n        color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\n        // Другие свойства, если есть\n      };\n      const cellStylesToSend = {\n        fontSize: cellStyles.fontSize,\n        fontFamily: cellStyles.fontFamily,\n        fontWeight: cellStyles.fontWeight,\n        color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\n        // Другие свойства, если есть\n      };\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          headerStyles: headerStylesToSend,\n          cellStyles: cellStylesToSend\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n  const handleHeaderFontSizeChange = (value, type) => {\n    if (value !== '') setHeaderStyles({\n      ...headerStyles,\n      fontSize: value + type\n    });\n  };\n  const handleCellFontSizeChange = (value, type) => {\n    if (value !== '') setCellStyles({\n      ...cellStyles,\n      fontSize: value + type\n    });\n  };\n  const handlePasswordChange = async () => {\n    // Проверка на совпадение нового пароля и его подтверждения\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirm password must match');\n      return;\n    }\n    try {\n      const response = await fetch(url + 'encryptpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword,\n          oldPassword: oldPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      // Очистка полей после успешного обновления пароля\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n\n      // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\n      alert('Password updated successfully');\n    } catch (error) {\n      console.error('Error updating password:', error.message);\n      // Действия в случае ошибки, например, показать сообщение об ошибке\n      alert('Failed to update password. Please try again later.');\n    }\n  };\n  const sortedTimeZones = timeZones.sort((a, b) => {\n    const offsetA = moment.tz(a).utcOffset();\n    const offsetB = moment.tz(b).utcOffset();\n    return offsetA - offsetB;\n  });\n  const isValidGoogleSheetsUrl = url => {\n    // Регулярное выражение для проверки валидности URL Google Sheets\n    const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\n\n    // Проверка URL с помощью регулярного выражения\n    return googleSheetsUrlRegex.test(url);\n  };\n  const handleSpreadsheetUrlChange = url => {\n    setSpreadsheetUrl(url);\n\n    // Проверка валидности URL Google Sheets\n    if (isValidGoogleSheetsUrl(url)) {\n      // URL валиден для Google Sheets - выполнить нужные действия\n      console.log('Valid Google Sheets URL');\n    } else {\n      // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\n      console.log('Invalid Google Sheets URL');\n    }\n  };\n  const handleCredentialFileChange = file => {\n    setCredentialFile(file);\n\n    // Чтение содержимого файла\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Проверка валидности содержимого файла credentials.json\n      if (isValidCredentialsFile(fileContent)) {\n        // Файл credentials.json валиден - выполнить нужные действия\n        console.log('Valid credentials.json file');\n      } else {\n        // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\n        console.log('Invalid credentials.json file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const isValidCredentialsFile = fileContent => {\n    // Преобразование содержимого файла в объект\n    let credentials;\n    try {\n      credentials = JSON.parse(fileContent);\n    } catch (error) {\n      console.error(\"Error parsing credentials.json:\", error);\n      return false;\n    }\n\n    // Проверка наличия обязательных полей\n    const requiredFields = [\"type\", \"project_id\", \"private_key_id\", \"private_key\", \"client_email\", \"client_id\", \"auth_uri\", \"token_uri\", \"auth_provider_x509_cert_url\", \"client_x509_cert_url\"];\n    for (const field of requiredFields) {\n      if (!credentials.hasOwnProperty(field)) {\n        console.error(`Missing required field in credentials.json: ${field}`);\n        return false;\n      }\n    }\n\n    // Проверка типа\n    if (credentials.type !== \"service_account\") {\n      console.error(`Invalid type in credentials.json: ${credentials.type}`);\n      return false;\n    }\n\n    // Проверка формата приватного ключа\n    const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\n    if (!privateKeyFormatRegex.test(credentials.private_key)) {\n      console.error(\"Invalid format for private key in credentials.json\");\n      return false;\n    }\n\n    // Дополнительные проверки, если необходимо\n\n    return true;\n  };\n  const handleSubmit = () => {\n    // Проверка диапазонов названий столбцов и данных\n    // Если все данные корректны, отправка на сервер\n  };\n  const getFolderName = folder => {\n    // Разделяем имя файла по точке\n    const parts = folder.split('.');\n    // Удаляем последнюю часть (расширение файла)\n    parts.pop();\n    // Соединяем оставшиеся части снова в строку\n    return parts.join('.');\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Lietot\\u0101jv\\u0101rds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parole:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: key,\n        size: \"invisible\",\n        ref: reRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: loginInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Ien\\u0101kt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 17\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'additional' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('additional'),\n          children: \"Papildus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 29\n        }, this), selectedOption === 'additional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spreadsheetUrl\",\n            children: \"Google Sheets URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spreadsheetUrl\",\n            placeholder: \"Enter Google Sheets URL\",\n            value: spreadsheetUrl,\n            onChange: e => handleSpreadsheetUrlChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: e => handleCredentialFileChange(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"columnNamesRange\",\n            children: \"Stabi\\u0146u nosaukumu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"columnNamesRange\",\n            placeholder: \"Enter column names range (e.g., B2:I2)\",\n            value: columnNamesRange,\n            onChange: e => handleColumnNamesRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataRange\",\n            children: \"Datu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dataRange\",\n            placeholder: \"Enter data range (e.g., B3:I)\",\n            value: dataRange,\n            onChange: e => handleDataRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: handleSubmit,\n            children: \"Saglab\\u0101t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 33\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"headerFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru galvenes stiliem\",\n                value: headerStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: headerStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontFamily\",\n                value: headerStyles.fontFamily,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontWeight\",\n                value: headerStyles.fontWeight,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cellFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru tabulas \\u0161\\u016Bn\\u0101m\",\n                value: cellStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: cellStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 914,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontFamily\",\n                value: cellStyles.fontFamily,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontWeight\",\n                value: cellStyles.fontWeight,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tabulas kr\\u0101sa:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              id: \"tableColor\",\n              value: tableColor,\n              onChange: e => {\n                const newColor = e.target.value;\n                handleTableColorChangeDebounced(newColor);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyTableStyles,\n            children: \"Pielietot tabulas stilus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applySingleColor,\n            children: \"Pielietot vienu kr\\u0101su\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyGradient,\n            children: \"Pielietot gradientu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '0vh',\n            left: '15vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1073,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1081,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1088,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1089,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1090,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1094,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1096,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFolder,\n            children: \"Pievienot mapi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 33\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFolderClick(folder),\n              children: getFolderName(folder)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(folder),\n              children: \"Dz\\u0113st\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 41\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewWindow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Atv\\u0113rta mape: \", selectedFolder === \"\" ? 'neviena' : getFolderName(selectedFolder)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileType\",\n              children: \"Choose file type(add):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"fileType\",\n              onChange: handleFileTypeChange,\n              value: fileType,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"foto\",\n                children: \"Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"video\",\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"URL(foto)\",\n                children: \"URL Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"URL(video)\",\n                children: \"URL Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"text\",\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 37\n            }, this), fileInputVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: fileType.includes(\"URL\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  children: [\"Enter \", fileType, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1134,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"fileInput\",\n                  value: fileInputValue,\n                  onChange: handleFileInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fileInput\",\n                  children: [\"Upload your \", fileType, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1139,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"fileInput\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1140,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1138,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 33\n          }, this), sourcesList && sourcesList.length > 0 && sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewItem\",\n            children: [source.type === 'text' &&\n            /*#__PURE__*/\n            // Показываем текстовый файл\n            _jsxDEV(\"a\", {\n              href: `${url}getSource/${source.file}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"previewItemLink\",\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 45\n            }, this), source.type.startsWith('URL') && (\n            // Показываем ресурс на основе URL\n            // Ресурс может быть изображением или видео\n            source.type === 'URL(foto)' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Attēls ${index}`,\n              className: \"previewImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 49\n            }, this) : source.type === 'URL(video)' ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: source.file,\n              width: \"100%\",\n              height: \"7.4vh\",\n              playing: true,\n              controls: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"K\\u013C\\u016Bda: Nepie\\u0146emta URL veida saite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 49\n            }, this)), source.type === 'foto' &&\n            /*#__PURE__*/\n            // Показываем изображение\n            _jsxDEV(\"img\", {\n              src: url + `getSource/${source.file}`,\n              alt: `Attēls ${index}`,\n              className: \"previewImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 45\n            }, this), source.type === 'video' &&\n            /*#__PURE__*/\n            // Показываем видео\n            _jsxDEV(\"video\", {\n              src: url + `getSource/${source.file}`,\n              controls: true,\n              className: \"previewVideo\",\n              autoPlay: true,\n              loop: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 45\n            }, this), source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: url + `getSource/${source.file}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: source.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteLink(source.type, source.file),\n                children: \"Dz\\u0113st\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeZoneSelect\",\n          children: \"Izv\\u0113lieties laika joslu:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeZoneSelect\",\n          value: selectedTimeZone,\n          onChange: handleTimeZoneChange,\n          children: sortedTimeZones.map(timeZone => {\n            const offsetMinutes = moment.tz(timeZone).utcOffset();\n            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\n            const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\n            const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\n            const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: timeZone,\n              children: [\"(UTC \", offsetString, \") \", region, \", \", city]\n            }, timeZone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Vecais parole\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Jaun\\u0101 parole\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Apstipriniet jauno paroli\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Atjaunot paroli\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Vecais lietot\\u0101jv\\u0101rds\",\n          value: oldLogin,\n          onChange: e => setOldLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1237,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Jaunais lietot\\u0101jv\\u0101rds\",\n          value: newLogin,\n          onChange: e => setNewLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginChange,\n          children: \"Atjaunot lietot\\u0101jv\\u0101rdu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 709,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"+OHYIM/4wlb6L/fm99OSFHTwzVU=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","ReCAPTCHA","ReactPlayer","moment","ReactAnglePicker","updateConfig","getAllFiles","addSourceFile","deleteSourceFile","deleteSource","getSourcesList","logIn","changeLogin","runCSharpScript","XLSX","jsxDEV","_jsxDEV","AdminConsole","_s","login","setLogin","password","setPassword","loginInfo","setLoginInfo","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableColor","setTableColor","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","units","folders","setFolders","selectedFolder","setSelectedFolder","sourcesList","setSourcesList","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","oldLogin","setOldLogin","newLogin","setNewLogin","selectedTimeZone","setSelectedTimeZone","timeZones","tz","names","spreadsheetUrl","setSpreadsheetUrl","credentialFile","setCredentialFile","columnNamesRange","setColumnNamesRange","dataRange","setDataRange","reRef","key","fileType","setFileType","fileInputVisible","setFileInputVisible","fileInputValue","setFileInputValue","handleTableColorChangeDebounced","debounce","newColor","handleFileTypeChange","event","selectedFileType","target","value","handleFileInputChange","handleColumnNamesRangeChange","range","isValidRange","console","log","isValidCellCharacter","charCode","excelRangeRegex","test","startCell","endCell","split","columnRegex","match","rowRegex","handleDataRangeChange","handleTimeZoneChange","e","updates","data","error","getAllFolders","files","handleAddFolder","fileName","prompt","includes","handleDeleteFolder","window","confirm","handleDeleteLink","type","success","prevList","filter","item","handleFolderClick","handleTabClick","tab","handleLogin","token","current","executeAsync","reset","message","handleLoginChange","alert","handleRunCSharpScript","dataArray","getConfig","getCSharpScriptConfig","response","fetch","ok","status","json","handleOptionChange","option","handleColorChangeDebounced","func","timeout","timer","args","clearTimeout","setTimeout","apply","handleColorChange","handleChange","handleColorChange1Debounced","handleColorChange2Debounced","handleColorChange1","handleColorChange2","applySingleColor","method","headers","body","JSON","stringify","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","headerStylesToSend","cellStylesToSend","handleHeaderFontSizeChange","handleCellFontSizeChange","handlePasswordChange","Error","sortedTimeZones","sort","a","b","offsetA","utcOffset","offsetB","isValidGoogleSheetsUrl","googleSheetsUrlRegex","handleSpreadsheetUrlChange","handleCredentialFileChange","file","reader","FileReader","onload","fileContent","result","isValidCredentialsFile","readAsText","credentials","parse","requiredFields","field","hasOwnProperty","privateKeyFormatRegex","private_key","handleSubmit","getFolderName","folder","parts","pop","join","handleLoadExcel","blob","workbook","read","firstSheetName","SheetNames","sheetData","utils","sheet_to_json","Sheets","defval","Array","isArray","length","formattedData","Object","keys","map","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","entries","updateResponses","forEach","updateResponse","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","children","className","htmlFor","_jsxFileName","lineNumber","columnNumber","id","onChange","sitekey","size","ref","onClick","placeholder","accept","replace","unit","font","index","onFinalChange","style","top","left","transform","background","border","source","href","rel","startsWith","src","alt","width","height","playing","controls","muted","autoPlay","loop","timeZone","offsetMinutes","offsetHours","Math","floor","abs","offsetMinutesPart","offsetString","toString","padStart","region","city","part","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ReactPlayer from 'react-player';\r\nimport moment from 'moment-timezone';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport { updateConfig, getAllFiles, addSourceFile, deleteSourceFile, deleteSource, getSourcesList, logIn, changeLogin, runCSharpScript } from './adminToServer.js';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginInfo,setLoginInfo] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState('aizvietosanas');\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n    const units = ['px', '%', 'vw', 'vh'];\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolder, setSelectedFolder] = useState('');\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [oldLogin, setOldLogin] = useState('');\r\n    const [newLogin, setNewLogin] = useState('');\r\n    const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\r\n    const timeZones = moment.tz.names();\r\n    const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\r\n    const [credentialFile, setCredentialFile] = useState(null);\r\n    const [columnNamesRange, setColumnNamesRange] = useState('');\r\n    const [dataRange, setDataRange] = useState('');\r\n    const reRef = useRef();\r\n    const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\r\n    const [fileType, setFileType] = useState('');\r\n    const [fileInputVisible, setFileInputVisible] = useState(false);\r\n    const [fileInputValue, setFileInputValue] = useState('');\r\n\r\n    const handleTableColorChangeDebounced = useCallback(debounce((newColor) => {\r\n        setHeaderStyles({ ...headerStyles, color: newColor });\r\n        setCellStyles({ ...cellStyles, color: newColor });\r\n        setTableColor(newColor);\r\n    }, 300), [headerStyles, cellStyles]);\r\n\r\n    const handleFileTypeChange = (event) => {\r\n        const selectedFileType = event.target.value;\r\n        setFileType(selectedFileType);\r\n        setFileInputVisible(selectedFileType === 'foto' || selectedFileType === 'video' || selectedFileType === 'text');\r\n        setFileInputValue('');\r\n    };\r\n\r\n    const handleFileInputChange = (event) => {\r\n        setFileInputValue(event.target.value);\r\n    };\r\n\r\n    const handleColumnNamesRangeChange = (range) => {\r\n        if (isValidRange(range))\r\n            setColumnNamesRange(range);\r\n        else\r\n            console.log(\"Invalid\");\r\n    };\r\n\r\n    const isValidCellCharacter = (charCode) => {\r\n        // Допустимыми символами являются заглавные латинские буквы\r\n        return (charCode >= 65 && charCode <= 90); // A-Z\r\n    };\r\n\r\n    const isValidRange = (range) => {\r\n        // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\r\n        const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\r\n        if (!excelRangeRegex.test(range)) {\r\n            return false; // Неверный формат ренджа\r\n        }\r\n\r\n        // Разделить рендж на две ячейки: начальную и конечную\r\n        const [startCell, endCell] = range.split(':');\r\n\r\n        // Проверка корректности номеров столбцов\r\n        const columnRegex = /^[A-Za-z]+$/;\r\n        if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\r\n            return false; // Некорректное обозначение столбцов\r\n        }\r\n\r\n        // Проверка корректности номеров строк\r\n        const rowRegex = /^\\d+$/;\r\n        if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\r\n            return false; // Некорректное обозначение строк\r\n        }\r\n\r\n        return true; // Рендж соответствует формату Excel\r\n    };\r\n\r\n    const handleDataRangeChange = (range) => {\r\n        setDataRange(range);\r\n    };\r\n\r\n    const handleTimeZoneChange = async (e) => {\r\n        setSelectedTimeZone(e.target.value);\r\n        const updates = [\r\n            { key: 'TimeZone', value: e.target.value },\r\n            // Другие обновления конфигурации, если есть\r\n        ];\r\n\r\n        try {\r\n            const data = await updateConfig(updates);\r\n            console.log(data); // Вывод ответа от сервера\r\n        } catch (error) {\r\n            console.error('Error updating config:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAllFolders();\r\n    }, []);\r\n\r\n    const getAllFolders = async () => {\r\n        try {\r\n            const data = await getAllFiles();\r\n            setFolders(data.files);\r\n        } catch (error) {\r\n            console.error('Error getting folders:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddFolder = async () => {\r\n        let fileName = prompt('Enter folder name:');\r\n        if (fileName) {\r\n            // Добавляем .txt, если расширение не указано\r\n            if (!fileName.includes('.')) {\r\n                fileName += '.txt';\r\n            }\r\n\r\n            try {\r\n                await addSourceFile(fileName);\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error adding folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (fileName) => {\r\n        if (window.confirm('Are you sure you want to delete this folder?')) {\r\n            try {\r\n                await deleteSourceFile(fileName);\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error deleting folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteLink = async (type, fileName) => {\r\n        try {\r\n            const success = await deleteSource(selectedFolder, type, fileName);\r\n            if (success) {\r\n                console.log('File deleted successfully');\r\n                // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\r\n                setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\r\n            } else {\r\n                console.error('Error deleting file: Failed to delete file');\r\n                // Обработка ошибок удаления файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            // Обработка ошибок сетевого запроса\r\n        }\r\n    };\r\n\r\n\r\n    const handleFolderClick = async (fileName) => {\r\n        setSelectedFolder(fileName);\r\n        console.log('Getting sources list:', fileName);\r\n        try {\r\n            const data = await getSourcesList(fileName);\r\n            setSourcesList(data.sourcesList);\r\n            console.log('Getted sources list:', data);\r\n        } catch (error) {\r\n            console.error('Error getting sources list:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async (login, password) => {\r\n        try {\r\n            const token = await reRef.current.executeAsync();\r\n            reRef.current.reset();\r\n            const { isLoggedIn, data, error } = await logIn(login, password, token);\r\n            console.log(isLoggedIn, data, error);\r\n            if (isLoggedIn) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                console.error('Login failed');\r\n                setLoginInfo(error.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setLoginInfo(error);\r\n        }\r\n    };\r\n\r\n    const handleLoginChange = async (oldLogin, newLogin, password) => {\r\n        try {\r\n            const { success, error } = await changeLogin(oldLogin, newLogin, password);\r\n\r\n            if (success) {\r\n                alert('Login updated successfully.');\r\n            } else {\r\n                alert(error || 'Failed to update login.');\r\n            }\r\n        } catch (error) {\r\n            alert('Network error. Failed to update login.');\r\n            console.error('Error updating login:', error);\r\n        }\r\n    };\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const dataArray = await runCSharpScript();\r\n            // Обработка полученных данных\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n            // Обработка ошибок\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChangeDebounced = debounce((newColor) => {\r\n        setColor(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета\r\n    const handleColorChange = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChangeDebounced(newColor);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const handleColorChange1Debounced = debounce((newColor) => {\r\n        setColor1(newColor);\r\n    }, 300);\r\n\r\n    // Обработчик изменения цвета 2 с задержкой\r\n    const handleColorChange2Debounced = debounce((newColor) => {\r\n        setColor2(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета 1\r\n    const handleColorChange1 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange1Debounced(newColor);\r\n    };\r\n\r\n    // Обработчик изменения цвета 2\r\n    const handleColorChange2 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange2Debounced(newColor);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color1, color2, angle })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        try {\r\n            const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ defaultGradient })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async () => {\r\n        try {\r\n            const headerStylesToSend = {\r\n                fontSize: headerStyles.fontSize,\r\n                fontFamily: headerStyles.fontFamily,\r\n                fontWeight: headerStyles.fontWeight,\r\n                color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const cellStylesToSend = {\r\n                fontSize: cellStyles.fontSize,\r\n                fontFamily: cellStyles.fontFamily,\r\n                fontWeight: cellStyles.fontWeight,\r\n                color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ headerStyles: headerStylesToSend, cellStyles: cellStylesToSend })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleHeaderFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setHeaderStyles({ ...headerStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handleCellFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setCellStyles({ ...cellStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handlePasswordChange = async () => {\r\n        // Проверка на совпадение нового пароля и его подтверждения\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirm password must match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url + 'encryptpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: newPassword,\r\n                    oldPassword: oldPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update password');\r\n            }\r\n\r\n            // Очистка полей после успешного обновления пароля\r\n            setOldPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n\r\n            // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\r\n            alert('Password updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating password:', error.message);\r\n            // Действия в случае ошибки, например, показать сообщение об ошибке\r\n            alert('Failed to update password. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const sortedTimeZones = timeZones.sort((a, b) => {\r\n        const offsetA = moment.tz(a).utcOffset();\r\n        const offsetB = moment.tz(b).utcOffset();\r\n        return offsetA - offsetB;\r\n    });\r\n\r\n    const isValidGoogleSheetsUrl = (url) => {\r\n        // Регулярное выражение для проверки валидности URL Google Sheets\r\n        const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\r\n\r\n        // Проверка URL с помощью регулярного выражения\r\n        return googleSheetsUrlRegex.test(url);\r\n    };\r\n\r\n    const handleSpreadsheetUrlChange = (url) => {\r\n        setSpreadsheetUrl(url);\r\n\r\n        // Проверка валидности URL Google Sheets\r\n        if (isValidGoogleSheetsUrl(url)) {\r\n            // URL валиден для Google Sheets - выполнить нужные действия\r\n            console.log('Valid Google Sheets URL');\r\n        } else {\r\n            // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\r\n            console.log('Invalid Google Sheets URL');\r\n        }\r\n    };\r\n\r\n    const handleCredentialFileChange = (file) => {\r\n        setCredentialFile(file);\r\n\r\n        // Чтение содержимого файла\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const fileContent = event.target.result;\r\n\r\n            // Проверка валидности содержимого файла credentials.json\r\n            if (isValidCredentialsFile(fileContent)) {\r\n                // Файл credentials.json валиден - выполнить нужные действия\r\n                console.log('Valid credentials.json file');\r\n            } else {\r\n                // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\r\n                console.log('Invalid credentials.json file');\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const isValidCredentialsFile = (fileContent) => {\r\n        // Преобразование содержимого файла в объект\r\n        let credentials;\r\n        try {\r\n            credentials = JSON.parse(fileContent);\r\n        } catch (error) {\r\n            console.error(\"Error parsing credentials.json:\", error);\r\n            return false;\r\n        }\r\n\r\n        // Проверка наличия обязательных полей\r\n        const requiredFields = [\r\n            \"type\",\r\n            \"project_id\",\r\n            \"private_key_id\",\r\n            \"private_key\",\r\n            \"client_email\",\r\n            \"client_id\",\r\n            \"auth_uri\",\r\n            \"token_uri\",\r\n            \"auth_provider_x509_cert_url\",\r\n            \"client_x509_cert_url\"\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!credentials.hasOwnProperty(field)) {\r\n                console.error(`Missing required field in credentials.json: ${field}`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Проверка типа\r\n        if (credentials.type !== \"service_account\") {\r\n            console.error(`Invalid type in credentials.json: ${credentials.type}`);\r\n            return false;\r\n        }\r\n\r\n        // Проверка формата приватного ключа\r\n        const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\r\n        if (!privateKeyFormatRegex.test(credentials.private_key)) {\r\n            console.error(\"Invalid format for private key in credentials.json\");\r\n            return false;\r\n        }\r\n\r\n        // Дополнительные проверки, если необходимо\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Проверка диапазонов названий столбцов и данных\r\n        // Если все данные корректны, отправка на сервер\r\n    };\r\n\r\n    const getFolderName = (folder) => {\r\n        // Разделяем имя файла по точке\r\n        const parts = folder.split('.');\r\n        // Удаляем последнюю часть (расширение файла)\r\n        parts.pop();\r\n        // Соединяем оставшиеся части снова в строку\r\n        return parts.join('.');\r\n    };\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <div className=\"admin-form\">\r\n                    <div>\r\n                        <label htmlFor=\"login\">Lietotājvārds:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"login\"\r\n                            value={login}\r\n                            onChange={(e) => setLogin(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Parole:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <ReCAPTCHA\r\n                        sitekey={key}\r\n                        size=\"invisible\"\r\n                        ref={reRef}\r\n                    />\r\n                    <div>\r\n                        <label>{loginInfo}</label>\r\n                    </div>\r\n                    <button onClick={handleLogin}>Ienākt</button>\r\n\r\n                </div>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'additional' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('additional')}\r\n                            >\r\n                                Papildus\r\n                            </button>\r\n                            {selectedOption === 'additional' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    <label htmlFor=\"spreadsheetUrl\">Google Sheets URL:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"spreadsheetUrl\"\r\n                                        placeholder=\"Enter Google Sheets URL\"\r\n                                        value={spreadsheetUrl}\r\n                                        onChange={(e) => handleSpreadsheetUrlChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если ссылка валидна */}\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={(e) => handleCredentialFileChange(e.target.files[0])}\r\n                                    />\r\n                                    {/* Возможность загрузить файл credentials.json */}\r\n                                    <br />\r\n                                    <label htmlFor=\"columnNamesRange\">Stabiņu nosaukumu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"columnNamesRange\"\r\n                                        placeholder=\"Enter column names range (e.g., B2:I2)\"\r\n                                        value={columnNamesRange}\r\n                                        onChange={(e) => handleColumnNamesRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если диапазон названий столбцов валиден */}\r\n                                    <br />\r\n                                    <label htmlFor=\"dataRange\">Datu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"dataRange\"\r\n                                        placeholder=\"Enter data range (e.g., B3:I)\"\r\n                                        value={dataRange}\r\n                                        onChange={(e) => handleDataRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Кнопка для сохранения на сервере */}\r\n                                    <button className=\"apply-button\" onClick={handleSubmit}>Saglabāt</button>\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'tabula' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"headerFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru galvenes stiliem\"\r\n                                                value={headerStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={headerStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"headerFontFamily\"\r\n                                                value={headerStyles.fontFamily}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"headerFontWeight\"\r\n                                                value={headerStyles.fontWeight}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                        {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"cellFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru tabulas šūnām\"\r\n                                                value={cellStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={cellStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"cellFontFamily\"\r\n                                                value={cellStyles.fontFamily}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"cellFontWeight\"\r\n                                                value={cellStyles.fontWeight}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Tabulas krāsa:</h4>\r\n                                        <input\r\n                                            type=\"color\"\r\n                                            id=\"tableColor\"\r\n                                            value={tableColor}\r\n                                            onChange={(e) => {\r\n                                                const newColor = e.target.value;\r\n                                                handleTableColorChangeDebounced(newColor);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <button className=\"apply-button\" onClick={applyTableStyles}>Pielietot tabulas stilus</button>\r\n\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <button className=\"apply-button\" onClick={applySingleColor}>Pielietot vienu krāsu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <br />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}<br /><br />\r\n                                    <button className=\"apply-button\" onClick={applyGradient}>Pielietot gradientu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '0vh', left: '15vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead>\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            <div>\r\n                                <button onClick={handleAddFolder}>Pievienot mapi</button>\r\n                                {folders.map(folder => (\r\n                                    <div key={folder}>\r\n                                        <button onClick={() => handleFolderClick(folder)}>{getFolderName(folder)}</button>\r\n                                        <button onClick={() => handleDeleteFolder(folder)}>Dzēst</button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"previewWindow\">\r\n                                <h3>Atvērta mape: {selectedFolder === \"\" ? 'neviena' : getFolderName(selectedFolder)}</h3>\r\n                                <div>\r\n                                    <label htmlFor=\"fileType\">Choose file type(add):</label>\r\n                                    <select id=\"fileType\" onChange={handleFileTypeChange} value={fileType}>\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"foto\">Photo</option>\r\n                                        <option value=\"video\">Video</option>\r\n                                        <option value=\"URL(foto)\">URL Photo</option>\r\n                                        <option value=\"URL(video)\">URL Video</option>\r\n                                        <option value=\"text\">Text</option>\r\n                                    </select>\r\n\r\n                                    {fileInputVisible && (\r\n                                        <div>\r\n                                            {fileType.includes(\"URL\") ? (\r\n                                                <div>\r\n                                                    <label htmlFor=\"fileInput\">Enter {fileType}:</label>\r\n                                                    <input type=\"text\" id=\"fileInput\" value={fileInputValue} onChange={handleFileInputChange} />\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div>\r\n                                                    <label htmlFor=\"fileInput\">Upload your {fileType}:</label>\r\n                                                    <input type=\"file\" id=\"fileInput\" />\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                {sourcesList && sourcesList.length > 0 && sourcesList.map((source, index) => (\r\n                                    <div key={index} className=\"previewItem\">\r\n                                        {source.type === 'text' && (\r\n                                            // Показываем текстовый файл\r\n                                            <a href={`${url}getSource/${source.file}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"previewItemLink\">{source.file}</a>\r\n                                        )}\r\n\r\n                                        {source.type.startsWith('URL') && (\r\n                                            // Показываем ресурс на основе URL\r\n                                            // Ресурс может быть изображением или видео\r\n                                            source.type === 'URL(foto)' ? (\r\n                                                <img src={source.file} alt={`Attēls ${index}`} className=\"previewImage\" />\r\n                                            ) : source.type === 'URL(video)' ? (\r\n                                                    <ReactPlayer\r\n                                                        url={source.file}\r\n                                                        width=\"100%\"\r\n                                                        height=\"7.4vh\"\r\n                                                        playing\r\n                                                        controls\r\n                                                        muted\r\n                                                    />\r\n                                            ) : (\r\n                                                <div>Kļūda: Nepieņemta URL veida saite</div>\r\n                                            )\r\n                                        )}\r\n\r\n                                        {source.type === 'foto' && (\r\n                                            // Показываем изображение\r\n                                            <img src={url + `getSource/${source.file}`} alt={`Attēls ${index}`} className=\"previewImage\" />\r\n                                        )}\r\n\r\n                                        {source.type === 'video' && (\r\n                                            // Показываем видео\r\n                                            <video src={url + `getSource/${source.file}`} controls className=\"previewVideo\" autoPlay loop muted />\r\n                                        )}\r\n\r\n                                        {source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && (\r\n                                            <div>{url + `getSource/${source.file}`}</div>\r\n                                        )}\r\n                                        <div>\r\n                                            <span>{source.file}</span>\r\n                                            <button onClick={() => handleDeleteLink(source.type, source.file)}>Dzēst</button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <label htmlFor=\"timeZoneSelect\">Izvēlieties laika joslu:</label>\r\n                            <select id=\"timeZoneSelect\" value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n                                {sortedTimeZones.map(timeZone => {\r\n                                    const offsetMinutes = moment.tz(timeZone).utcOffset();\r\n                                    const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\r\n                                    const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\r\n                                    const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\r\n                                    const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\r\n                                    return (\r\n                                        <option key={timeZone} value={timeZone}>\r\n                                            (UTC {offsetString}) {region}, {city}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n\r\n                            <br />\r\n                            {/* Поля ввода для обновления пароля */}\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Vecais parole\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Jaunā parole\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Apstipriniet jauno paroli\"\r\n                                value={confirmNewPassword}\r\n                                onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handlePasswordChange}>Atjaunot paroli</button>\r\n                            <br />\r\n                            {/* Поля ввода для обновления логина */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Vecais lietotājvārds\"\r\n                                value={oldLogin}\r\n                                onChange={(e) => setOldLogin(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Jaunais lietotājvārds\"\r\n                                value={newLogin}\r\n                                onChange={(e) => setNewLogin(e.target.value)}\r\n                            />\r\n                            <button onClick={handleLoginChange}>Atjaunot lietotājvārdu</button>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}