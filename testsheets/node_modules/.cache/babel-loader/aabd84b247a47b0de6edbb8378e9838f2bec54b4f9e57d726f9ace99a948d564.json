{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport moment from 'moment-timezone';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedInData, setLoggedInData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState(null);\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableColor, setTableColor] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const units = ['px', '%', 'vw', 'vh'];\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [sourcesList, setSourcesList] = useState([]);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [oldLogin, setOldLogin] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\n  const timeZones = moment.tz.names();\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\n  const [credentialFile, setCredentialFile] = useState(null);\n  const [columnNamesRange, setColumnNamesRange] = useState('');\n  const [dataRange, setDataRange] = useState('');\n  const [isCaptchaDone, setisCaptchaDone] = useState(false);\n  const key = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\n  const handleColumnNamesRangeChange = range => {\n    if (isValidRange(range)) setColumnNamesRange(range);else console.log(\"Invalid\");\n  };\n  function onChange(value) {\n    setisCaptchaDone(true);\n    console.log(\"Captcha value:\", value);\n  }\n  const isValidCellCharacter = charCode => {\n    // Допустимыми символами являются заглавные латинские буквы\n    return charCode >= 65 && charCode <= 90; // A-Z\n  };\n  const isValidRange = range => {\n    const regex = /^([A-Z]+)\\s*(\\d+)\\s*:\\s*([A-Z]+)\\s*(\\d+)$/;\n    const match = range.match(regex);\n    if (match) {\n      const [, lettersBeforeColon, numbersBeforeColon, lettersAfterColon, numbersAfterColon] = match;\n\n      // Check if the first letters come before the second ones and if their lengths are equal or smaller\n      if (lettersBeforeColon.length === lettersAfterColon.length && numbersBeforeColon === numbersAfterColon) {\n        let prevCharCode = lettersAfterColon.charCodeAt(lettersAfterColon.length - 1) - 1;\n        for (let i = lettersAfterColon.length - 2; i >= 0; i--) {\n          if (prevCharCode < 'A'.charCodeAt(0)) {\n            prevCharCode = 'Z'.charCodeAt(0);\n          }\n          if (lettersAfterColon.charCodeAt(i) !== prevCharCode) {\n            console.log(\"Error: The difference between the letters is not correct.\");\n            return false;\n          }\n          prevCharCode--;\n        }\n        let currentLetters = lettersAfterColon;\n        let expectedLetters = lettersBeforeColon;\n\n        // Iterate until the current letters become equal to the expected letters\n        while (currentLetters !== expectedLetters) {\n          // Subtract 1 from each character of the current letters\n          currentLetters = currentLetters.split('').map(char => String.fromCharCode(char.charCodeAt(0) - 1)).join('');\n\n          // If any character in the current letters becomes less than 'A', set it to 'Z'\n          currentLetters = currentLetters.replace(/[<A]/g, 'Z');\n\n          // If current letters become equal to expected letters, break the loop\n          if (currentLetters === expectedLetters) {\n            break;\n          }\n\n          // If current letters become less than expected letters, it's an invalid range\n          if (currentLetters < expectedLetters) {\n            console.log(\"Error: The difference between the letters is not correct.\");\n            return false;\n          }\n        }\n        console.log(\"Letters before ':' :\", lettersBeforeColon);\n        console.log(\"Numbers before ':' :\", numbersBeforeColon);\n        console.log(\"Letters after ':' :\", lettersAfterColon);\n        console.log(\"Numbers after ':' :\", numbersAfterColon);\n        return true;\n      } else {\n        console.log(\"Error: First set of letters should come before the second set or numbers should be equal.\");\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n  const handleDataRangeChange = range => {\n    setDataRange(range);\n  };\n  const handleTimeZoneChange = async e => {\n    setSelectedTimeZone(e.target.value);\n    const updates = [{\n      key: 'TimeZone',\n      value: selectedTimeZone\n    }\n    // Другие обновления конфигурации, если есть\n    ];\n    try {\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      const data = await response.json();\n      console.log(data); // Вывод ответа от сервера\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n  useEffect(() => {\n    getAllFolders();\n  }, []);\n  const getAllFolders = async () => {\n    try {\n      const response = await fetch(url + 'getAllFiles');\n      const data = await response.json();\n      setFolders(data.files);\n    } catch (error) {\n      console.error('Error getting folders:', error);\n    }\n  };\n  const handleAddFolder = async () => {\n    let fileName = prompt('Enter folder name:');\n    if (fileName) {\n      // Добавляем .txt, если расширение не указано\n      if (!fileName.includes('.')) {\n        fileName += '.txt';\n      }\n      try {\n        await fetch(url + 'addSourceFile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            fileName\n          })\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    }\n  };\n  const handleDeleteFolder = async fileName => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await fetch(url + `deleteSourceFile/${fileName}`, {\n          method: 'DELETE'\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteLink = async (type, fileName) => {\n    try {\n      const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('File deleted successfully');\n        // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\n        setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\n      } else {\n        console.error('Error deleting file:', response.statusText);\n        // Обработка ошибок удаления файла\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      // Обработка ошибок сетевого запроса\n    }\n  };\n  const handleFolderClick = async fileName => {\n    setSelectedFolder(fileName);\n    console.log('Getting sources list:', fileName);\n    try {\n      const response = await fetch(url + `getSourcesList/${fileName}`);\n      const data = await response.json();\n      setSourcesList(data.sourcesList);\n      console.log('Getted sources list:', data);\n    } catch (error) {\n      console.error('Error getting sources list:', error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    try {\n      // Получаем токен ReCAPTCHA\n      const recaptchaToken = await fetchRecaptchaToken();\n      console.log(recaptchaToken);\n      // Отправляем данные на сервер для аутентификации\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: login,\n          password: password,\n          recaptchaToken: recaptchaToken\n        })\n      });\n\n      // Обрабатываем ответ сервера\n      if (response.ok) {\n        setIsLoggedIn(true);\n      } else {\n        // Обработка ошибки входа\n        console.error('Login failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Функция для получения токена ReCAPTCHA\n  const fetchRecaptchaToken = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/get-token-recaptcha', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // Здесь могут быть дополнительные параметры, если необходимо\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        return data.token; // Предполагается, что сервер возвращает токен в формате JSON\n      } else {\n        throw new Error('Failed to fetch ReCAPTCHA token');\n      }\n    } catch (error) {\n      console.error('Error fetching ReCAPTCHA token:', error);\n      throw error;\n    }\n  };\n  const handleLoginChange = () => {\n    // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\n    if (oldLogin === '' || newLogin === '' || password === '') {\n      alert('Old login, new login, and new password are required.');\n      return;\n    }\n\n    // Отправка запроса на сервер для изменения логина и пароля\n    fetch(url + 'changelogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldLogin,\n        newLogin,\n        password: password\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Обработка успешного обновления логина и пароля\n        alert('Login updated successfully.');\n      } else {\n        // Обработка ошибки при обновлении логина и пароля\n        alert('Failed to update login.');\n      }\n    }).catch(error => {\n      // Обработка ошибки сети\n      console.error('Error updating login:', error);\n      alert('Network error. Failed to update login.');\n    });\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const response = await fetch(url + 'runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', response.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const jsonData = await response.json();\n      if (!jsonData.data.trim()) {\n        console.error('Empty response data received from the server.');\n        return;\n      }\n      console.log('Raw server response data:', jsonData.data);\n      let dataArray;\n      try {\n        dataArray = JSON.parse(jsonData.data);\n      } catch (parseError) {\n        console.error('Error parsing JSON data:', parseError);\n        return;\n      }\n      if (!Array.isArray(dataArray)) {\n        console.error('Data is not an array:', dataArray);\n        return;\n      }\n      console.log('Parsed server response data:', dataArray);\n      const ws = XLSX.utils.json_to_sheet(dataArray);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data.xlsx');\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChange = (color, setColor) => {\n    // Обработчик изменения цвета\n    setColor(color);\n\n    // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\n    setTimeout(() => {\n      document.activeElement.blur();\n    }, 0);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const applySingleColor = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color1,\n          color2,\n          angle\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    try {\n      const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          defaultGradient\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async () => {\n    try {\n      const headerStylesToSend = {\n        fontSize: headerStyles.fontSize,\n        fontFamily: headerStyles.fontFamily,\n        fontWeight: headerStyles.fontWeight,\n        color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\n        // Другие свойства, если есть\n      };\n      const cellStylesToSend = {\n        fontSize: cellStyles.fontSize,\n        fontFamily: cellStyles.fontFamily,\n        fontWeight: cellStyles.fontWeight,\n        color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\n        // Другие свойства, если есть\n      };\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          headerStyles: headerStylesToSend,\n          cellStyles: cellStylesToSend\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n  const handleHeaderFontSizeChange = (value, type) => {\n    if (value !== '') setHeaderStyles({\n      ...headerStyles,\n      fontSize: value + type\n    });\n  };\n  const handleCellFontSizeChange = (value, type) => {\n    if (value !== '') setCellStyles({\n      ...cellStyles,\n      fontSize: value + type\n    });\n  };\n  const handlePasswordChange = async () => {\n    // Проверка на совпадение нового пароля и его подтверждения\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirm password must match');\n      return;\n    }\n    try {\n      const response = await fetch(url + 'encryptpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword,\n          oldPassword: oldPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      // Очистка полей после успешного обновления пароля\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n\n      // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\n      alert('Password updated successfully');\n    } catch (error) {\n      console.error('Error updating password:', error.message);\n      // Действия в случае ошибки, например, показать сообщение об ошибке\n      alert('Failed to update password. Please try again later.');\n    }\n  };\n  const sortedTimeZones = timeZones.sort((a, b) => {\n    const offsetA = moment.tz(a).utcOffset();\n    const offsetB = moment.tz(b).utcOffset();\n    return offsetA - offsetB;\n  });\n  const isValidGoogleSheetsUrl = url => {\n    // Регулярное выражение для проверки валидности URL Google Sheets\n    const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\n\n    // Проверка URL с помощью регулярного выражения\n    return googleSheetsUrlRegex.test(url);\n  };\n  const handleSpreadsheetUrlChange = url => {\n    setSpreadsheetUrl(url);\n\n    // Проверка валидности URL Google Sheets\n    if (isValidGoogleSheetsUrl(url)) {\n      // URL валиден для Google Sheets - выполнить нужные действия\n      console.log('Valid Google Sheets URL');\n    } else {\n      // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\n      console.log('Invalid Google Sheets URL');\n    }\n  };\n  const handleCredentialFileChange = file => {\n    setCredentialFile(file);\n\n    // Чтение содержимого файла\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Проверка валидности содержимого файла credentials.json\n      if (isValidCredentialsFile(fileContent)) {\n        // Файл credentials.json валиден - выполнить нужные действия\n        console.log('Valid credentials.json file');\n      } else {\n        // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\n        console.log('Invalid credentials.json file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const isValidCredentialsFile = fileContent => {\n    // Преобразование содержимого файла в объект\n    let credentials;\n    try {\n      credentials = JSON.parse(fileContent);\n    } catch (error) {\n      console.error(\"Error parsing credentials.json:\", error);\n      return false;\n    }\n\n    // Проверка наличия обязательных полей\n    const requiredFields = [\"type\", \"project_id\", \"private_key_id\", \"private_key\", \"client_email\", \"client_id\", \"auth_uri\", \"token_uri\", \"auth_provider_x509_cert_url\", \"client_x509_cert_url\"];\n    for (const field of requiredFields) {\n      if (!credentials.hasOwnProperty(field)) {\n        console.error(`Missing required field in credentials.json: ${field}`);\n        return false;\n      }\n    }\n\n    // Проверка типа\n    if (credentials.type !== \"service_account\") {\n      console.error(`Invalid type in credentials.json: ${credentials.type}`);\n      return false;\n    }\n\n    // Проверка формата приватного ключа\n    const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\n    if (!privateKeyFormatRegex.test(credentials.private_key)) {\n      console.error(\"Invalid format for private key in credentials.json\");\n      return false;\n    }\n\n    // Дополнительные проверки, если необходимо\n\n    return true;\n  };\n  const handleSubmit = () => {\n    // Проверка диапазонов названий столбцов и данных\n    // Если все данные корректны, отправка на сервер\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Login:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: key,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 25\n      }, this), isCaptchaDone && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 21\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'additional' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('additional'),\n          children: \"Additional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 29\n        }, this), selectedOption === 'additional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spreadsheetUrl\",\n            children: \"Google Sheets URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spreadsheetUrl\",\n            placeholder: \"Enter Google Sheets URL\",\n            value: spreadsheetUrl,\n            onChange: e => handleSpreadsheetUrlChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: e => handleCredentialFileChange(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"columnNamesRange\",\n            children: \"Column Names Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"columnNamesRange\",\n            placeholder: \"Enter column names range (e.g., B2:I2)\",\n            value: columnNamesRange,\n            onChange: e => handleColumnNamesRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataRange\",\n            children: \"Data Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dataRange\",\n            placeholder: \"Enter data range (e.g., B3:I)\",\n            value: dataRange,\n            onChange: e => handleDataRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 33\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Header Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"headerFontSize\",\n            placeholder: \"Enter font size for table header\",\n            value: headerStyles.fontSize.replace(/\\D/g, '') // Отображаем только цифры\n            ,\n            onChange: e => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: headerStyles.fontSize.replace(/\\d+/g, '') // Отображаем только единицы измерения\n            ,\n            onChange: e => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n            children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unit,\n              children: unit\n            }, unit, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontFamily\",\n            value: headerStyles.fontFamily,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontWeight\",\n            value: headerStyles.fontWeight,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cell Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cellFontSize\",\n            placeholder: \"Enter font size for table cells\",\n            value: cellStyles.fontSize.replace(/\\D/g, '') // Отображаем только цифры\n            ,\n            onChange: e => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: cellStyles.fontSize.replace(/\\d+/g, '') // Отображаем только единицы измерения\n            ,\n            onChange: e => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n            children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unit,\n              children: unit\n            }, unit, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontFamily\",\n            value: cellStyles.fontFamily,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontWeight\",\n            value: cellStyles.fontWeight,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tableColor\",\n            children: \"Table Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            id: \"tableColor\",\n            value: tableColor,\n            onChange: e => {\n              setHeaderStyles({\n                ...headerStyles,\n                color: e.target.value\n              });\n              setCellStyles({\n                ...cellStyles,\n                color: e.target.value\n              });\n              setTableColor(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyTableStyles,\n            children: \"Apply Table Styles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: e => handleColorChange(e.target.value, setColor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applySingleColor,\n            children: \"Apply Single Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: e => handleColorChange(e.target.value, setColor1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: e => handleColorChange(e.target.value, setColor2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyGradient,\n            children: \"Apply Gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Background Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '37vh',\n            left: '-10vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1081,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1082,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1083,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1084,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1089,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1090,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1092,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1093,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1094,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1088,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1100,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1102,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1105,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1108,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1110,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1069,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFolder,\n            children: \"Add Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 33\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFolderClick(folder),\n              children: folder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(folder),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 41\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewWindow\",\n          children: sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewItem\",\n            children: [source.type === 'text' &&\n            /*#__PURE__*/\n            // Отображаем содержимое текстового файла, если тип файла - text\n            _jsxDEV(\"pre\", {\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 45\n            }, this), source.type.startsWith('URL') && (\n            // Отображаем соответствующий контент на основе URL\n            // Вместо этого можно использовать плееры для видео или изображений, как в предыдущем примере\n            // Этот код предполагает, что source.file содержит ссылку на изображение или видео\n            source.type === 'URL(foto)' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Image ${index}`,\n              className: \"previewImage\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 49\n            }, this) : source.type === 'URL(video)' ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: source.file,\n              controls: true,\n              className: \"previewVideo\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Error: Unsupported URL type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 49\n            }, this)), source.type === 'foto' &&\n            /*#__PURE__*/\n            // Отображаем изображение, если тип файла - foto\n            _jsxDEV(\"img\", {\n              src: url + `getSource/${source.file}`,\n              alt: `Image ${index}`,\n              className: \"previewImage\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 45\n            }, this), source.type === 'video' &&\n            /*#__PURE__*/\n            // Отображаем видео, если тип файла - video\n            _jsxDEV(\"video\", {\n              src: url + `getSource/${source.file}`,\n              controls: true,\n              className: \"previewVideo\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 45\n            }, this), source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' &&\n            /*#__PURE__*/\n            // Отображаем название файла, если он не текст, не URL, не foto и не video\n            _jsxDEV(\"div\", {\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: source.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteLink(source.type, source.file),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeZoneSelect\",\n          children: \"Select Time Zone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeZoneSelect\",\n          value: selectedTimeZone,\n          onChange: handleTimeZoneChange,\n          children: sortedTimeZones.map(timeZone => {\n            const offsetMinutes = moment.tz(timeZone).utcOffset();\n            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\n            const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\n            const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\n            const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: timeZone,\n              children: [\"(UTC \", offsetString, \") \", region, \", \", city]\n            }, timeZone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Old Password\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Old Login\",\n          value: oldLogin,\n          onChange: e => setOldLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Login\",\n          value: newLogin,\n          onChange: e => setNewLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginChange,\n          children: \"Update Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 790,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"vcIFqre2alYFbZ6mX28yC7HKUdM=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useState","useEffect","ReCAPTCHA","moment","ReactAnglePicker","XLSX","jsxDEV","_jsxDEV","AdminConsole","_s","login","setLogin","password","setPassword","loggedInData","setLoggedInData","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableColor","setTableColor","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","units","folders","setFolders","selectedFolder","setSelectedFolder","sourcesList","setSourcesList","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","oldLogin","setOldLogin","newLogin","setNewLogin","selectedTimeZone","setSelectedTimeZone","timeZones","tz","names","spreadsheetUrl","setSpreadsheetUrl","credentialFile","setCredentialFile","columnNamesRange","setColumnNamesRange","dataRange","setDataRange","isCaptchaDone","setisCaptchaDone","key","handleColumnNamesRangeChange","range","isValidRange","console","log","onChange","value","isValidCellCharacter","charCode","regex","match","lettersBeforeColon","numbersBeforeColon","lettersAfterColon","numbersAfterColon","length","prevCharCode","charCodeAt","i","currentLetters","expectedLetters","split","map","char","String","fromCharCode","join","replace","handleDataRangeChange","handleTimeZoneChange","e","target","updates","response","fetch","method","headers","body","JSON","stringify","data","json","error","getAllFolders","files","handleAddFolder","fileName","prompt","includes","handleDeleteFolder","window","confirm","handleDeleteLink","type","ok","prevList","filter","item","statusText","handleFolderClick","handleTabClick","tab","handleLogin","recaptchaToken","fetchRecaptchaToken","token","Error","handleLoginChange","alert","then","catch","handleRunCSharpScript","status","jsonData","trim","dataArray","parse","parseError","Array","isArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","getConfig","getCSharpScriptConfig","handleOptionChange","option","handleColorChange","setTimeout","document","activeElement","blur","handleChange","applySingleColor","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","headerStylesToSend","cellStylesToSend","handleHeaderFontSizeChange","handleCellFontSizeChange","handlePasswordChange","message","sortedTimeZones","sort","a","b","offsetA","utcOffset","offsetB","isValidGoogleSheetsUrl","googleSheetsUrlRegex","test","handleSpreadsheetUrlChange","handleCredentialFileChange","file","reader","FileReader","onload","event","fileContent","result","isValidCredentialsFile","readAsText","credentials","requiredFields","field","hasOwnProperty","privateKeyFormatRegex","private_key","handleSubmit","handleLoadExcel","blob","workbook","read","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","formattedData","Object","keys","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","entries","updateResponses","forEach","updateResponse","success","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","children","className","htmlFor","_jsxFileName","lineNumber","columnNumber","id","sitekey","onClick","placeholder","accept","unit","font","index","onFinalChange","style","top","left","transform","background","border","folder","source","startsWith","src","alt","width","height","controls","timeZone","offsetMinutes","offsetHours","Math","floor","abs","offsetMinutesPart","offsetString","toString","padStart","region","city","part","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport moment from 'moment-timezone';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loggedInData, setLoggedInData] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState(null);\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n    const units = ['px', '%', 'vw', 'vh'];\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolder, setSelectedFolder] = useState('');\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [oldLogin, setOldLogin] = useState('');\r\n    const [newLogin, setNewLogin] = useState('');\r\n    const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\r\n    const timeZones = moment.tz.names();\r\n    const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\r\n    const [credentialFile, setCredentialFile] = useState(null);\r\n    const [columnNamesRange, setColumnNamesRange] = useState('');\r\n    const [dataRange, setDataRange] = useState('');\r\n    const [isCaptchaDone, setisCaptchaDone] = useState(false);\r\n    const key = \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\";\r\n\r\n    const handleColumnNamesRangeChange = (range) => {\r\n        if (isValidRange(range))\r\n            setColumnNamesRange(range);\r\n        else\r\n            console.log(\"Invalid\");\r\n    };\r\n\r\n    function onChange(value) {\r\n        setisCaptchaDone(true);\r\n        console.log(\"Captcha value:\", value);\r\n    }\r\n\r\n    const isValidCellCharacter = (charCode) => {\r\n        // Допустимыми символами являются заглавные латинские буквы\r\n        return (charCode >= 65 && charCode <= 90); // A-Z\r\n    };\r\n\r\n    const isValidRange = (range) => {\r\n        const regex = /^([A-Z]+)\\s*(\\d+)\\s*:\\s*([A-Z]+)\\s*(\\d+)$/;\r\n        const match = range.match(regex);\r\n        if (match) {\r\n            const [, lettersBeforeColon, numbersBeforeColon, lettersAfterColon, numbersAfterColon] = match;\r\n\r\n            // Check if the first letters come before the second ones and if their lengths are equal or smaller\r\n            if (lettersBeforeColon.length === lettersAfterColon.length && numbersBeforeColon === numbersAfterColon) {\r\n                let prevCharCode = lettersAfterColon.charCodeAt(lettersAfterColon.length - 1) - 1;\r\n                for (let i = lettersAfterColon.length - 2; i >= 0; i--) {\r\n                    if (prevCharCode < 'A'.charCodeAt(0)) {\r\n                        prevCharCode = 'Z'.charCodeAt(0);\r\n                    }\r\n                    if (lettersAfterColon.charCodeAt(i) !== prevCharCode) {\r\n                        console.log(\"Error: The difference between the letters is not correct.\");\r\n                        return false;\r\n                    }\r\n                    prevCharCode--;\r\n                }\r\n\r\n                let currentLetters = lettersAfterColon;\r\n                let expectedLetters = lettersBeforeColon;\r\n\r\n                // Iterate until the current letters become equal to the expected letters\r\n                while (currentLetters !== expectedLetters) {\r\n                    // Subtract 1 from each character of the current letters\r\n                    currentLetters = currentLetters.split('').map(char => String.fromCharCode(char.charCodeAt(0) - 1)).join('');\r\n\r\n                    // If any character in the current letters becomes less than 'A', set it to 'Z'\r\n                    currentLetters = currentLetters.replace(/[<A]/g, 'Z');\r\n\r\n                    // If current letters become equal to expected letters, break the loop\r\n                    if (currentLetters === expectedLetters) {\r\n                        break;\r\n                    }\r\n\r\n                    // If current letters become less than expected letters, it's an invalid range\r\n                    if (currentLetters < expectedLetters) {\r\n                        console.log(\"Error: The difference between the letters is not correct.\");\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                console.log(\"Letters before ':' :\", lettersBeforeColon);\r\n                console.log(\"Numbers before ':' :\", numbersBeforeColon);\r\n                console.log(\"Letters after ':' :\", lettersAfterColon);\r\n                console.log(\"Numbers after ':' :\", numbersAfterColon);\r\n                return true;\r\n            } else {\r\n                console.log(\"Error: First set of letters should come before the second set or numbers should be equal.\");\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleDataRangeChange = (range) => {\r\n        setDataRange(range);\r\n    };\r\n\r\n    const handleTimeZoneChange = async (e) => {\r\n        setSelectedTimeZone(e.target.value);\r\n        const updates = [\r\n            { key: 'TimeZone', value: selectedTimeZone },\r\n            // Другие обновления конфигурации, если есть\r\n        ];\r\n\r\n        try {\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updates)\r\n            });\r\n            const data = await response.json();\r\n            console.log(data); // Вывод ответа от сервера\r\n        } catch (error) {\r\n            console.error('Error updating config:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAllFolders();\r\n    }, []);\r\n\r\n    const getAllFolders = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getAllFiles');\r\n            const data = await response.json();\r\n            setFolders(data.files);\r\n        } catch (error) {\r\n            console.error('Error getting folders:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddFolder = async () => {\r\n        let fileName = prompt('Enter folder name:');\r\n        if (fileName) {\r\n            // Добавляем .txt, если расширение не указано\r\n            if (!fileName.includes('.')) {\r\n                fileName += '.txt';\r\n            }\r\n\r\n            try {\r\n                await fetch(url + 'addSourceFile', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ fileName }),\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error adding folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (fileName) => {\r\n        if (window.confirm('Are you sure you want to delete this folder?')) {\r\n            try {\r\n                await fetch(url + `deleteSourceFile/${fileName}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error deleting folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteLink = async (type, fileName) => {\r\n        try {\r\n            const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('File deleted successfully');\r\n                // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\r\n                setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\r\n            } else {\r\n                console.error('Error deleting file:', response.statusText);\r\n                // Обработка ошибок удаления файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            // Обработка ошибок сетевого запроса\r\n        }\r\n    };\r\n\r\n\r\n    const handleFolderClick = async (fileName) => {\r\n        setSelectedFolder(fileName);\r\n        console.log('Getting sources list:', fileName);\r\n        try {\r\n            const response = await fetch(url + `getSourcesList/${fileName}`);\r\n            const data = await response.json();\r\n            setSourcesList(data.sourcesList);\r\n            console.log('Getted sources list:', data);\r\n        } catch (error) {\r\n            console.error('Error getting sources list:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Получаем токен ReCAPTCHA\r\n            const recaptchaToken = await fetchRecaptchaToken();\r\n            console.log(recaptchaToken);\r\n            // Отправляем данные на сервер для аутентификации\r\n            const response = await fetch('http://localhost:3001/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    login: login,\r\n                    password: password,\r\n                    recaptchaToken: recaptchaToken\r\n                }),\r\n            });\r\n\r\n            // Обрабатываем ответ сервера\r\n            if (response.ok) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                // Обработка ошибки входа\r\n                console.error('Login failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    // Функция для получения токена ReCAPTCHA\r\n    const fetchRecaptchaToken = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3001/get-token-recaptcha', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    // Здесь могут быть дополнительные параметры, если необходимо\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data.token; // Предполагается, что сервер возвращает токен в формате JSON\r\n            } else {\r\n                throw new Error('Failed to fetch ReCAPTCHA token');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching ReCAPTCHA token:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const handleLoginChange = () => {\r\n        // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\r\n        if (oldLogin === '' || newLogin === '' || password === '') {\r\n            alert('Old login, new login, and new password are required.');\r\n            return;\r\n        }\r\n\r\n        // Отправка запроса на сервер для изменения логина и пароля\r\n        fetch(url + 'changelogin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ oldLogin, newLogin, password: password }),\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    // Обработка успешного обновления логина и пароля\r\n                    alert('Login updated successfully.');\r\n                } else {\r\n                    // Обработка ошибки при обновлении логина и пароля\r\n                    alert('Failed to update login.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки сети\r\n                console.error('Error updating login:', error);\r\n                alert('Network error. Failed to update login.');\r\n            });\r\n    };\r\n\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const response = await fetch(url + 'runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', response.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const jsonData = await response.json();\r\n\r\n            if (!jsonData.data.trim()) {\r\n                console.error('Empty response data received from the server.');\r\n                return;\r\n            }\r\n\r\n            console.log('Raw server response data:', jsonData.data);\r\n\r\n            let dataArray;\r\n\r\n            try {\r\n                dataArray = JSON.parse(jsonData.data);\r\n            } catch (parseError) {\r\n                console.error('Error parsing JSON data:', parseError);\r\n                return;\r\n            }\r\n\r\n            if (!Array.isArray(dataArray)) {\r\n                console.error('Data is not an array:', dataArray);\r\n                return;\r\n            }\r\n\r\n            console.log('Parsed server response data:', dataArray);\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArray);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChange = (color, setColor) => {\r\n        // Обработчик изменения цвета\r\n        setColor(color);\r\n\r\n        // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\r\n        setTimeout(() => {\r\n            document.activeElement.blur();\r\n        }, 0);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color1, color2, angle })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        try {\r\n            const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ defaultGradient })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async () => {\r\n        try {\r\n            const headerStylesToSend = {\r\n                fontSize: headerStyles.fontSize,\r\n                fontFamily: headerStyles.fontFamily,\r\n                fontWeight: headerStyles.fontWeight,\r\n                color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const cellStylesToSend = {\r\n                fontSize: cellStyles.fontSize,\r\n                fontFamily: cellStyles.fontFamily,\r\n                fontWeight: cellStyles.fontWeight,\r\n                color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ headerStyles: headerStylesToSend, cellStyles: cellStylesToSend })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleHeaderFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setHeaderStyles({ ...headerStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handleCellFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setCellStyles({ ...cellStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handlePasswordChange = async () => {\r\n        // Проверка на совпадение нового пароля и его подтверждения\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirm password must match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url + 'encryptpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: newPassword,\r\n                    oldPassword: oldPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update password');\r\n            }\r\n\r\n            // Очистка полей после успешного обновления пароля\r\n            setOldPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n\r\n            // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\r\n            alert('Password updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating password:', error.message);\r\n            // Действия в случае ошибки, например, показать сообщение об ошибке\r\n            alert('Failed to update password. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const sortedTimeZones = timeZones.sort((a, b) => {\r\n        const offsetA = moment.tz(a).utcOffset();\r\n        const offsetB = moment.tz(b).utcOffset();\r\n        return offsetA - offsetB;\r\n    });\r\n\r\n    const isValidGoogleSheetsUrl = (url) => {\r\n        // Регулярное выражение для проверки валидности URL Google Sheets\r\n        const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\r\n\r\n        // Проверка URL с помощью регулярного выражения\r\n        return googleSheetsUrlRegex.test(url);\r\n    };\r\n\r\n    const handleSpreadsheetUrlChange = (url) => {\r\n        setSpreadsheetUrl(url);\r\n\r\n        // Проверка валидности URL Google Sheets\r\n        if (isValidGoogleSheetsUrl(url)) {\r\n            // URL валиден для Google Sheets - выполнить нужные действия\r\n            console.log('Valid Google Sheets URL');\r\n        } else {\r\n            // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\r\n            console.log('Invalid Google Sheets URL');\r\n        }\r\n    };\r\n\r\n    const handleCredentialFileChange = (file) => {\r\n        setCredentialFile(file);\r\n\r\n        // Чтение содержимого файла\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const fileContent = event.target.result;\r\n\r\n            // Проверка валидности содержимого файла credentials.json\r\n            if (isValidCredentialsFile(fileContent)) {\r\n                // Файл credentials.json валиден - выполнить нужные действия\r\n                console.log('Valid credentials.json file');\r\n            } else {\r\n                // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\r\n                console.log('Invalid credentials.json file');\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const isValidCredentialsFile = (fileContent) => {\r\n        // Преобразование содержимого файла в объект\r\n        let credentials;\r\n        try {\r\n            credentials = JSON.parse(fileContent);\r\n        } catch (error) {\r\n            console.error(\"Error parsing credentials.json:\", error);\r\n            return false;\r\n        }\r\n\r\n        // Проверка наличия обязательных полей\r\n        const requiredFields = [\r\n            \"type\",\r\n            \"project_id\",\r\n            \"private_key_id\",\r\n            \"private_key\",\r\n            \"client_email\",\r\n            \"client_id\",\r\n            \"auth_uri\",\r\n            \"token_uri\",\r\n            \"auth_provider_x509_cert_url\",\r\n            \"client_x509_cert_url\"\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!credentials.hasOwnProperty(field)) {\r\n                console.error(`Missing required field in credentials.json: ${field}`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Проверка типа\r\n        if (credentials.type !== \"service_account\") {\r\n            console.error(`Invalid type in credentials.json: ${credentials.type}`);\r\n            return false;\r\n        }\r\n\r\n        // Проверка формата приватного ключа\r\n        const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\r\n        if (!privateKeyFormatRegex.test(credentials.private_key)) {\r\n            console.error(\"Invalid format for private key in credentials.json\");\r\n            return false;\r\n        }\r\n\r\n        // Дополнительные проверки, если необходимо\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Проверка диапазонов названий столбцов и данных\r\n        // Если все данные корректны, отправка на сервер\r\n    };\r\n\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                    <div className=\"admin-form\">\r\n                        <div>\r\n                            <label htmlFor=\"login\">Login:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"login\"\r\n                                value={login}\r\n                                onChange={(e) => setLogin(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                    </div>\r\n                        <ReCAPTCHA\r\n                            sitekey={key}\r\n                            onChange={onChange}\r\n                        />\r\n                    {isCaptchaDone && <button onClick={handleLogin}>Enter</button>}\r\n                    </div>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'additional' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('additional')}\r\n                            >\r\n                                Additional\r\n                            </button>\r\n                            {selectedOption === 'additional' && (\r\n                                <div>\r\n                                    <label htmlFor=\"spreadsheetUrl\">Google Sheets URL:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"spreadsheetUrl\"\r\n                                        placeholder=\"Enter Google Sheets URL\"\r\n                                        value={spreadsheetUrl}\r\n                                        onChange={(e) => handleSpreadsheetUrlChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если ссылка валидна */}\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={(e) => handleCredentialFileChange(e.target.files[0])}\r\n                                    />\r\n                                    {/* Возможность загрузить файл credentials.json */}\r\n                                    <br />\r\n                                    <label htmlFor=\"columnNamesRange\">Column Names Range:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"columnNamesRange\"\r\n                                        placeholder=\"Enter column names range (e.g., B2:I2)\"\r\n                                        value={columnNamesRange}\r\n                                        onChange={(e) => handleColumnNamesRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если диапазон названий столбцов валиден */}\r\n                                    <br />\r\n                                    <label htmlFor=\"dataRange\">Data Range:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"dataRange\"\r\n                                        placeholder=\"Enter data range (e.g., B3:I)\"\r\n                                        value={dataRange}\r\n                                        onChange={(e) => handleDataRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Кнопка для сохранения на сервере */}\r\n                                    <button onClick={handleSubmit}>Save</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'tabula' && (\r\n                                <div>\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <h4>Header Styles:</h4>\r\n                                    <label htmlFor=\"headerFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"headerFontSize\"\r\n                                        placeholder=\"Enter font size for table header\"\r\n                                        value={headerStyles.fontSize.replace(/\\D/g, '')} // Отображаем только цифры\r\n                                        onChange={(e) => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))}\r\n                                    />\r\n\r\n                                    <select\r\n                                        value={headerStyles.fontSize.replace(/\\d+/g, '')} // Отображаем только единицы измерения\r\n                                        onChange={(e) => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                    >\r\n                                        {units.map(unit => (\r\n                                            <option key={unit} value={unit}>{unit}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <br />\r\n                                    <label htmlFor=\"headerFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"headerFontFamily\"\r\n                                        value={headerStyles.fontFamily}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"headerFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"headerFontWeight\"\r\n                                        value={headerStyles.fontWeight}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для шапки таблицы здесь */}\r\n                                    </select>\r\n\r\n                                    {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n\r\n                                    <h4>Cell Styles:</h4>\r\n                                    <label htmlFor=\"cellFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"cellFontSize\"\r\n                                        placeholder=\"Enter font size for table cells\"\r\n                                        value={cellStyles.fontSize.replace(/\\D/g, '')} // Отображаем только цифры\r\n                                        onChange={(e) => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))}\r\n                                    />\r\n\r\n                                    <select\r\n                                        value={cellStyles.fontSize.replace(/\\d+/g, '')} // Отображаем только единицы измерения\r\n                                        onChange={(e) => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                    >\r\n                                        {units.map(unit => (\r\n                                            <option key={unit} value={unit}>{unit}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <br/>\r\n                                    <label htmlFor=\"cellFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"cellFontFamily\"\r\n                                        value={cellStyles.fontFamily}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"cellFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"cellFontWeight\"\r\n                                        value={cellStyles.fontWeight}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для ячеек таблицы здесь */}\r\n                                    </select>\r\n                                    <br /><br />\r\n                                    <label htmlFor=\"tableColor\">Table Color:</label>\r\n                                    <input\r\n                                        type=\"color\"\r\n                                        id=\"tableColor\"\r\n                                        value={tableColor}\r\n                                        onChange={(e) => {\r\n                                            setHeaderStyles({ ...headerStyles, color: e.target.value });\r\n                                            setCellStyles({ ...cellStyles, color: e.target.value });\r\n                                            setTableColor(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                    <br /><br/>\r\n                                    <button onClick={applyTableStyles}>Apply Table Styles</button>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                    \r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div>\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor)}\r\n                                    />\r\n                                    <button onClick={applySingleColor}>Apply Single Color</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div>\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor1)}\r\n                                    />\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor2)}\r\n                                    />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}\r\n                                    <button onClick={applyGradient}>Apply Gradient</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n                            <label>\r\n                                Background Type:\r\n                                <select\r\n                                    value={backgroundType}\r\n                                    onChange={(e) => setBackgroundType(e.target.value)}\r\n                                >\r\n                                    <option value=\"none\">None</option>\r\n                                    <option value=\"color\">Color</option>\r\n                                    <option value=\"gradient\">Gradient</option>\r\n                                </select>\r\n                            </label>\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '37vh', left: '-10vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead>\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            <div>\r\n                                <button onClick={handleAddFolder}>Add Folder</button>\r\n                                {folders.map(folder => (\r\n                                    <div key={folder}>\r\n                                        <button onClick={() => handleFolderClick(folder)}>{folder}</button>\r\n                                        <button onClick={() => handleDeleteFolder(folder)}>Delete</button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"previewWindow\">\r\n                                {sourcesList.map((source, index) => (\r\n                                    <div key={index} className=\"previewItem\">\r\n                                        {source.type === 'text' && (\r\n                                            // Отображаем содержимое текстового файла, если тип файла - text\r\n                                            <pre>{source.file}</pre>\r\n                                        )}\r\n\r\n                                        {source.type.startsWith('URL') && (\r\n                                            // Отображаем соответствующий контент на основе URL\r\n                                            // Вместо этого можно использовать плееры для видео или изображений, как в предыдущем примере\r\n                                            // Этот код предполагает, что source.file содержит ссылку на изображение или видео\r\n                                            source.type === 'URL(foto)' ? (\r\n                                                <img src={source.file} alt={`Image ${index}`} className=\"previewImage\" style={{ width: '200px', height: '150px' }} />\r\n                                            ) : source.type === 'URL(video)' ? (\r\n                                                    <video src={source.file} controls className=\"previewVideo\" style={{ width: '200px', height: '150px' }} />\r\n                                            ) : (\r\n                                                <div>Error: Unsupported URL type</div>\r\n                                            )\r\n                                        )}\r\n\r\n                                        {source.type === 'foto' && (\r\n                                            // Отображаем изображение, если тип файла - foto\r\n                                            <img src={url + `getSource/${source.file}`} alt={`Image ${index}`} className=\"previewImage\" style={{ width: '200px', height: '150px' }} />\r\n                                        )}\r\n\r\n                                        {source.type === 'video' && (\r\n                                            // Отображаем видео, если тип файла - video\r\n                                            <video src={url + `getSource/${source.file}`} controls className=\"previewVideo\" style={{ width: '200px', height: '150px' }} />\r\n                                        )}\r\n\r\n                                        {source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && (\r\n                                            // Отображаем название файла, если он не текст, не URL, не foto и не video\r\n                                            <div>{source.file}</div>\r\n                                        )}\r\n                                        <div>\r\n                                            <span>{source.file}</span>\r\n                                            <button onClick={() => handleDeleteLink(source.type, source.file)}>Delete</button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <label htmlFor=\"timeZoneSelect\">Select Time Zone:</label>\r\n                            <select id=\"timeZoneSelect\" value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n                                {sortedTimeZones.map(timeZone => {\r\n                                    const offsetMinutes = moment.tz(timeZone).utcOffset();\r\n                                    const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\r\n                                    const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\r\n                                    const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\r\n                                    const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\r\n                                    return (\r\n                                        <option key={timeZone} value={timeZone}>\r\n                                            (UTC {offsetString}) {region}, {city}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n\r\n                            <br />\r\n                            {/* Поля ввода для обновления пароля */}\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Old Password\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"New Password\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm New Password\"\r\n                                value={confirmNewPassword}\r\n                                onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handlePasswordChange}>Update Password</button>\r\n                            <br />\r\n                            {/* Поля ввода для обновления логина */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Old Login\"\r\n                                value={oldLogin}\r\n                                onChange={(e) => setOldLogin(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"New Login\"\r\n                                value={newLogin}\r\n                                onChange={(e) => setNewLogin(e.target.value)}\r\n                            />\r\n                            <button onClick={handleLoginChange}>Update Login</button>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}