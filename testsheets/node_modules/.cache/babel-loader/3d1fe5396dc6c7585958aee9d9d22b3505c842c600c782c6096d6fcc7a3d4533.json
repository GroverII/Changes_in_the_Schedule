{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [serverFiles, setServerFiles] = useState([{\n    id: '1',\n    name: 'File1.txt'\n  }, {\n    id: '2',\n    name: 'File2.txt'\n  }, {\n    id: '3',\n    name: 'File3.txt'\n  }]);\n  const [sourcesList, setSourcesList] = useState([{\n    id: '4',\n    name: 'Source1.js'\n  }, {\n    id: '5',\n    name: 'Source2.js'\n  }, {\n    id: '6',\n    name: 'Source3.js'\n  }]);\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const sourceList = result.source.droppableId === 'server-files' ? serverFiles : sourcesList;\n    const destinationList = result.destination.droppableId === 'server-files' ? serverFiles : sourcesList;\n    const items = Array.from(sourceList);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    if (result.source.droppableId === result.destination.droppableId) {\n      if (result.source.droppableId === 'server-files') {\n        setServerFiles(items);\n      } else {\n        setSourcesList(items);\n      }\n    } else {\n      setServerFiles(destinationList === serverFiles ? items : serverFiles);\n      setSourcesList(destinationList === sourcesList ? items : sourcesList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"server-files\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            width: '45%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Server Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: serverFiles.map((file, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: file.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 49\n                }, this)\n              }, file.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"sources-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          style: {\n            width: '45%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sources List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: source.id,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: source.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this)\n              }, source.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"XuP4CZXVK8UEeU+QnIvMzjd9r9k=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Test","_s","serverFiles","setServerFiles","id","name","sourcesList","setSourcesList","handleDragEnd","result","destination","sourceList","source","droppableId","destinationList","items","Array","from","reorderedItem","splice","index","onDragEnd","children","style","display","justifyContent","provided","ref","innerRef","droppableProps","width","fileName","_jsxFileName","lineNumber","columnNumber","map","file","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Test = () => {\r\n    const [serverFiles, setServerFiles] = useState([\r\n        { id: '1', name: 'File1.txt' },\r\n        { id: '2', name: 'File2.txt' },\r\n        { id: '3', name: 'File3.txt' }\r\n    ]);\r\n\r\n    const [sourcesList, setSourcesList] = useState([\r\n        { id: '4', name: 'Source1.js' },\r\n        { id: '5', name: 'Source2.js' },\r\n        { id: '6', name: 'Source3.js' }\r\n    ]);\r\n\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n\r\n        const sourceList = result.source.droppableId === 'server-files' ? serverFiles : sourcesList;\r\n        const destinationList = result.destination.droppableId === 'server-files' ? serverFiles : sourcesList;\r\n\r\n        const items = Array.from(sourceList);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        if (result.source.droppableId === result.destination.droppableId) {\r\n            if (result.source.droppableId === 'server-files') {\r\n                setServerFiles(items);\r\n            } else {\r\n                setSourcesList(items);\r\n            }\r\n        } else {\r\n            setServerFiles(destinationList === serverFiles ? items : serverFiles);\r\n            setSourcesList(destinationList === sourcesList ? items : sourcesList);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                <Droppable droppableId=\"server-files\">\r\n                    {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps} style={{ width: '45%' }}>\r\n                            <h2>Server Files</h2>\r\n                            <table style={{ width: '100%' }}>\r\n                                <tbody>\r\n                                    {serverFiles.map((file, index) => (\r\n                                        <Draggable key={file.id} draggableId={file.id} index={index}>\r\n                                            {(provided) => (\r\n                                                <tr\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                >\r\n                                                    <td>{file.name}</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n\r\n                <Droppable droppableId=\"sources-list\">\r\n                    {(provided) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps} style={{ width: '45%' }}>\r\n                            <h2>Sources List</h2>\r\n                            <table style={{ width: '100%' }}>\r\n                                <tbody>\r\n                                    {sourcesList.map((source, index) => (\r\n                                        <Draggable key={source.id} draggableId={source.id} index={index}>\r\n                                            {(provided) => (\r\n                                                <tr\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                >\r\n                                                    <td>{source.name}</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        </Draggable>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}