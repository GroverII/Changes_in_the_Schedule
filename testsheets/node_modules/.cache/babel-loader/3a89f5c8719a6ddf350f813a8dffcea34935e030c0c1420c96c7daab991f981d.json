{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getFileType, getSourcesList, url, getFileDisplay } from './adminToServer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [serverFiles, setServerFiles] = useState([]);\n  const [sourcesList, setSourcesList] = useState([]);\n  const [draggedItem, setDraggedItem] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url + 'getAllSources');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sources');\n        }\n        const data = await response.json();\n        const filesWithMetadata = data.files.map((file, index) => ({\n          id: index,\n          type: getFileType(file),\n          file\n        }));\n        setServerFiles(filesWithMetadata);\n        console.log(\"All files: \" + filesWithMetadata);\n      } catch (error) {\n        console.error('Error fetching sources:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchSourcesList = async () => {\n      try {\n        const response = await getSourcesList('links.txt');\n        const sources = response.sourcesList;\n        setSourcesList(sources);\n      } catch (error) {\n        console.error('Error fetching sources list:', error);\n      }\n    };\n    fetchSourcesList();\n  }, []);\n  const handleMoveToServer = item => {\n    setServerFiles([...serverFiles, item]);\n    setSourcesList(sourcesList.filter(source => source.id !== item.id));\n  };\n  const handleMoveToSources = item => {\n    setSourcesList([...sourcesList, item]);\n    setServerFiles(serverFiles.filter(file => file.id !== item.id));\n  };\n  const handleDragStart = (event, item) => {\n    setDraggedItem(item);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = (event, target) => {\n    event.preventDefault();\n    if (draggedItem) {\n      if (target === 'serverFiles') {\n        handleMoveToServer(draggedItem);\n      } else if (target === 'sourcesList') {\n        handleMoveToSources(draggedItem);\n      }\n      setDraggedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Server Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        onDragOver: event => handleDragOver(event),\n        onDrop: event => handleDrop(event, 'serverFiles'),\n        children: serverFiles.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          draggable: true,\n          onDragStart: event => handleDragStart(event, item),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getFileDisplay(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveToSources(item),\n              children: \"Move to Sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sources List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        onDragOver: event => handleDragOver(event),\n        onDrop: event => handleDrop(event, 'sourcesList'),\n        children: sourcesList.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          draggable: true,\n          onDragStart: event => handleDragStart(event, item),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getFileDisplay(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveToServer(item),\n              children: \"Move to Server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"68fAF09rjb8ehL60t8/0W3hgTBg=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","getFileType","getSourcesList","url","getFileDisplay","jsxDEV","_jsxDEV","Test","_s","serverFiles","setServerFiles","sourcesList","setSourcesList","draggedItem","setDraggedItem","fetchData","response","fetch","ok","Error","data","json","filesWithMetadata","files","map","file","index","id","type","console","log","error","fetchSourcesList","sources","handleMoveToServer","item","filter","source","handleMoveToSources","handleDragStart","event","handleDragOver","preventDefault","handleDrop","target","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","draggable","onDragStart","onClick","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getFileType, getSourcesList, url, getFileDisplay } from './adminToServer.js';\r\n\r\nconst Test = () => {\r\n    const [serverFiles, setServerFiles] = useState([]);\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [draggedItem, setDraggedItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url + 'getAllSources');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sources');\r\n                }\r\n                const data = await response.json();\r\n                const filesWithMetadata = data.files.map((file, index) => ({\r\n                    id: index,\r\n                    type: getFileType(file),\r\n                    file\r\n                }));\r\n                setServerFiles(filesWithMetadata);\r\n                console.log(\"All files: \" + filesWithMetadata);\r\n            } catch (error) {\r\n                console.error('Error fetching sources:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchSourcesList = async () => {\r\n            try {\r\n                const response = await getSourcesList('links.txt');\r\n                const sources = response.sourcesList;\r\n                setSourcesList(sources);\r\n            } catch (error) {\r\n                console.error('Error fetching sources list:', error);\r\n            }\r\n        };\r\n\r\n        fetchSourcesList();\r\n    }, []);\r\n\r\n    const handleMoveToServer = (item) => {\r\n        setServerFiles([...serverFiles, item]);\r\n        setSourcesList(sourcesList.filter(source => source.id !== item.id));\r\n    };\r\n\r\n    const handleMoveToSources = (item) => {\r\n        setSourcesList([...sourcesList, item]);\r\n        setServerFiles(serverFiles.filter(file => file.id !== item.id));\r\n    };\r\n\r\n    const handleDragStart = (event, item) => {\r\n        setDraggedItem(item);\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (event, target) => {\r\n        event.preventDefault();\r\n        if (draggedItem) {\r\n            if (target === 'serverFiles') {\r\n                handleMoveToServer(draggedItem);\r\n            } else if (target === 'sourcesList') {\r\n                handleMoveToSources(draggedItem);\r\n            }\r\n            setDraggedItem(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Server Files</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Type</th>\r\n                        <th>File</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody onDragOver={(event) => handleDragOver(event)} onDrop={(event) => handleDrop(event, 'serverFiles')}>\r\n                    {serverFiles.map(item => (\r\n                        <tr key={item.id} draggable onDragStart={(event) => handleDragStart(event, item)}>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.type}</td>\r\n                            <td>{getFileDisplay(item)}</td>\r\n                            <td>\r\n                                <button onClick={() => handleMoveToSources(item)}>Move to Sources</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h2>Sources List</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Type</th>\r\n                        <th>File</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody onDragOver={(event) => handleDragOver(event)} onDrop={(event) => handleDrop(event, 'sourcesList')}>\r\n                    {sourcesList.map(item => (\r\n                        <tr key={item.id} draggable onDragStart={(event) => handleDragStart(event, item)}>\r\n                            <td>{item.id}</td>\r\n                            <td>{item.type}</td>\r\n                            <td>{getFileDisplay(item)}</td>\r\n                            <td>\r\n                                <button onClick={() => handleMoveToServer(item)}>Move to Server</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}