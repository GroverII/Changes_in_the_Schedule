{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { getFileType } from './adminToServer.js';\nimport AdminConsole from './AdminConsole';\nimport Test from './Test';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport './styles.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sourceList, setSourceList] = useState([]);\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [currentDateLV, setCurrentDateLV] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [timeZone, setTimeZone] = useState(\"\");\n  const [spreadsheetData, setSpreadsheetData] = useState([]);\n  const [itemsPerPage] = useState(20);\n  const url = 'http://localhost:3001/';\n  const [renderedContent, setRenderedContent] = useState(null);\n  const [renderedButtons, setRenderedButtons] = useState(null);\n  const [cache, setCache] = useState({});\n  const [videoTimes, setVideoTimes] = useState({});\n  const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n  const interval = 500000;\n  const getFormattedTime = useCallback(() => {\n    if (timeZone) {\n      const currentDate = new Date(new Date().toLocaleString('en-US', {\n        timeZone: timeZone\n      }));\n      const hours = currentDate.getHours().toString().padStart(2, '0');\n      const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n      const seconds = currentDate.getSeconds().toString().padStart(2, '0');\n      return `${hours}:${minutes}:${seconds}`;\n    }\n    return \"\";\n  }, [timeZone]);\n  const getFormattedDate = useCallback(() => {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Note: January is 0\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}.`;\n  }, []);\n  const getFormattedSpecificDate = useCallback(() => {\n    if (timeZone) {\n      const currentDate = new Date();\n      const options = {\n        weekday: 'long',\n        day: 'numeric',\n        month: 'long'\n      };\n      const formattedDate = currentDate.toLocaleDateString('lv-LV', options); // 'lv-LV' - код локали для латышского языка\n      return formattedDate;\n    }\n    return \"\";\n  }, [timeZone]);\n  useEffect(() => {\n    const fetchTimeZone = async () => {\n      try {\n        // Получение конфигурации из сервера\n        const response = await fetch(url + 'getConfig');\n        if (!response.ok) {\n          throw new Error('Failed to fetch configuration');\n        }\n        const data = await response.json();\n        const {\n          config\n        } = data;\n        const {\n          TimeZone\n        } = config; // Извлекаем только TimeZone из объекта config\n        setTimeZone(TimeZone); // Устанавливаем значение временной зоны\n      } catch (error) {\n        console.error('Error fetching configuration:', error);\n      }\n    };\n\n    // Выполняем запрос на сервер для получения TimeZone при монтировании компонента\n    fetchTimeZone();\n\n    // Устанавливаем интервал для выполнения запроса TimeZone каждые 30 секунд\n    const intervalId = setInterval(fetchTimeZone, 30 * 1000);\n\n    // Очищаем интервал при размонтировании компонента\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    // Устанавливаем интервал для обновления остальных данных каждую секунду\n    const intervalId = setInterval(() => {\n      setCurrentTime(getFormattedTime());\n      setCurrentDate(getFormattedDate());\n      setCurrentDateLV(getFormattedSpecificDate());\n    }, 1000);\n\n    // Очищаем интервал при размонтировании компонента\n    return () => clearInterval(intervalId);\n  }, [getFormattedTime, getFormattedDate, getFormattedSpecificDate]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const totalElements = totalPages + sourceList.length;\n      const nextPage = currentPage + 1 > totalElements ? 1 : currentPage + 1;\n      setCurrentPage(nextPage);\n    }, interval); // Вызывать каждые interval/1000 секунд\n\n    return () => clearInterval(intervalId);\n  }, [currentPage, totalPages, sourceList]);\n  const handleVideoProgress = (file, progress) => {\n    setVideoTimes(prevTimes => ({\n      ...prevTimes,\n      [file]: progress.playedSeconds\n    }));\n  };\n  const renderContent = useCallback(async () => {\n    const sortData = (data, columns) => {\n      const sortedData = [...data];\n      sortedData.sort((a, b) => {\n        for (let i = 0; i < columns.length; i++) {\n          const column = columns[i];\n          const valueA = a[column] || '';\n          const valueB = b[column] || '';\n          if (column === 'class') {\n            const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n            const matchA = valueA.match(regex);\n            const matchB = valueB.match(regex);\n            if (matchA && matchB) {\n              const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n              if (numComparison !== 0) {\n                return numComparison;\n              }\n              const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n              if (romanComparison !== 0) {\n                return romanComparison;\n              }\n              return matchA[2].localeCompare(matchB[2], 'en', {\n                sensitivity: 'base'\n              });\n            } else {\n              return 0;\n            }\n          } else {\n            const comparison = valueA.localeCompare(valueB, 'en', {\n              sensitivity: 'base'\n            });\n            if (comparison !== 0) {\n              return comparison;\n            }\n          }\n        }\n        return 0;\n      });\n      return sortedData;\n    };\n    const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n    if (currentPage > totalPages) {\n      const sourceIndex = currentPage - totalPages - 1;\n      const source = sourceList[sourceIndex];\n      if (!source) {\n        console.log(`No source`);\n        return null;\n      }\n      const request = url + \"getSource/\" + source.file;\n      if (source.type.startsWith(\"url\")) {\n        const urlType = getFileType(source.file);\n        switch (urlType) {\n          case 'foto':\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Page ${currentPage}`,\n              className: \"photoImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this);\n          case 'video':\n          case 'youtube':\n            if (videoTimes[source.file] == null) {\n              videoTimes[source.file] = 0;\n            }\n            console.log(videoTimes);\n            return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: source.file,\n              width: \"99vw\",\n              height: \"99.5vh\",\n              playing: true,\n              controls: true,\n              muted: true,\n              onProgress: progress => handleVideoProgress(source.file, progress),\n              config: {\n                youtube: {\n                  playerVars: {\n                    start: videoTimes[source.file]\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this);\n          case 'text':\n            const txtFileRequest = await fetch(source.file);\n            if (txtFileRequest.ok) {\n              const txtContent = await txtFileRequest.text();\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: txtContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this);\n            } else {\n              // Обработка ошибки получения файла .txt\n              console.error('Error fetching .txt file:', txtFileRequest.status);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching URL(text)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 36\n              }, this);\n            }\n          default:\n            console.error(`Unsupported URL type: ${urlType}`);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Unsupported URL type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this);\n        }\n      } else {\n        switch (source.type) {\n          // В вашем компоненте с отображением контента\n          case \"text\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  const textContent = await response.text();\n                  setCache(prevCache => ({\n                    ...prevCache,\n                    [source.file]: textContent\n                  }));\n                } else {\n                  // Обработка ошибок\n                  console.error('Error fetching text:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 44\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: cache[source.file]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 36\n              }, this);\n            } catch (error) {\n              console.error('Error fetching text:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 36\n              }, this);\n            }\n          case \"foto\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  if (source.type.startsWith(\"foto\")) {\n                    const blobData = await response.blob();\n                    const imageUrl = URL.createObjectURL(blobData);\n                    setCache(prevCache => ({\n                      ...prevCache,\n                      [source.file]: imageUrl\n                    }));\n                  } else {\n                    // Добавьте обработку других типов файлов, если необходимо\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error fetching image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 49\n                    }, this);\n                  }\n                } else {\n                  // обработка ошибок\n                  console.error('Error fetching image:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cache[source.file],\n                alt: `Sheet ${currentPage}`,\n                className: \"photoImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this);\n            } catch (error) {\n              console.error('Error fetching image:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this);\n            }\n          case \"video\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  const videoBlob = await response.blob();\n                  const videoUrl = URL.createObjectURL(videoBlob);\n                  setCache(prevCache => ({\n                    ...prevCache,\n                    [source.file]: videoUrl\n                  }));\n                } else {\n                  // Обработка ошибок\n                  console.error('Error fetching video:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching video\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 44\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"videoPlayer\",\n                autoPlay: true,\n                loop: true,\n                muted: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: cache[source.file],\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: cache[source.file],\n                  type: \"video/ogg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this), \"Your browser does not support the video tag.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this);\n            } catch (error) {\n              console.error('Error fetching video:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 36\n              }, this);\n            }\n          default:\n            console.error(`Unsupported type: ${source.type}`);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Error fetching video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this);\n        }\n      }\n    } else {\n      console.log('Table data');\n      // код для отображения таблицы данных\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AIZVIETO\\u0160ANAS LAPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentDateLV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"dataBody\",\n              children: sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => /*#__PURE__*/_jsxDEV(DataTable, {\n                data: data,\n                currentDate: currentDate\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this);\n    }\n  }, [cache, currentDate, currentDateLV, currentPage, currentTime, itemsPerPage, sourceList, spreadsheetData, totalPages, videoTimes]);\n  const renderPageNumbersAsync = useCallback(async () => {\n    const paginate = pageNumber => {\n      setCurrentPage(pageNumber);\n      if (pageNumber > totalPages) console.log(`Clicked on photo page ${pageNumber}`);\n    };\n    const renderPageNumbers = async () => {\n      const pageNumbers = [];\n      let totalElements = sourceList.length;\n      for (let i = 1; i <= totalPages + totalElements; i++) {\n        pageNumbers.push( /*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: () => paginate(i),\n          isActive: i === currentPage\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this));\n      }\n      return pageNumbers;\n    };\n    const pageNumbers = await renderPageNumbers();\n    setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n  }, [currentPage, sourceList.length, totalPages]);\n  useEffect(() => {\n    const renderAsyncContent = async () => {\n      const content = await renderContent();\n      setRenderedContent(content);\n    };\n    if (window.location.pathname !== \"/admin\") {\n      console.log(`Rendering...`);\n      renderAsyncContent();\n      renderPageNumbersAsync();\n    } else {\n      const styleLink = document.createElement(\"link\");\n      styleLink.rel = \"stylesheet\";\n      styleLink.href = \"./style_adm.css\"; // Замените на путь к вашему файлу стилей\n      document.head.appendChild(styleLink);\n\n      // Добавляем идентификатор для body\n      document.body.id = \"admin-body\";\n    }\n  }, [currentPage, sourceList, spreadsheetData, currentTime, renderPageNumbersAsync, renderContent]);\n  useEffect(() => {\n    const fetchSourcesList = async () => {\n      try {\n        const response = await fetch(url + 'getAllSourcesDir');\n        if (!response.ok) {\n          console.error('Failed to fetch sources list. HTTP status:', response.status);\n          throw new Error('Failed to fetch sources list');\n        }\n        const {\n          files\n        } = await response.json();\n        console.log('files - ', files);\n        setSourceList(files);\n      } catch (error) {\n        console.error('Error fetching sources list:', error);\n      }\n    };\n\n    // Запускаем функцию для получения списка источников данных\n    fetchSourcesList();\n  }, []);\n  const PageButton = ({\n    onClick,\n    isActive\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    className: `button-81 ${isActive ? 'active' : ''}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 9\n  }, this);\n  const romanToNumber = roman => {\n    const romanNumeralMap = {\n      I: 1,\n      II: 2,\n      III: 3\n    };\n    return romanNumeralMap[roman] || 0;\n  };\n  useEffect(() => {\n    const runCSharpScript = async () => {\n      try {\n        console.log('Sending a POST request to run C# script...');\n        const response = await fetch(url + 'runCSharpScript', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Server response received:', response);\n        if (!response.ok) {\n          console.error('Failed to run C# script on the server. HTTP status:', response.status);\n          throw new Error('Failed to run C# script on the server');\n        }\n        const JsonData = await response.text(); // Get the raw text response\n\n        const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n        let dataArray = JSON.parse(jsonData.data);\n        console.log('Server response data received:', dataArray);\n\n        // Заполняем пропуски в свойстве \"date\"\n        for (let i = 0; i < dataArray.length; i++) {\n          if (dataArray[i].date === null || dataArray[i].date === \"\") {\n            dataArray[i].date = dataArray[i - 1].date;\n          }\n        }\n\n        // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n        dataArray = dataArray.filter(item => {\n          if (item.subst_person === \"\" || item.subst_person === \"nav stundas\") return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n          return true;\n        });\n        const filteredData = filterDataByCurrentDate(dataArray);\n        console.log('C# script executed successfully. Data from the server:', filteredData);\n        setSpreadsheetData(filteredData);\n      } catch (error) {\n        console.error('Error running C# script:', error);\n      }\n    };\n    const filterDataByCurrentDate = data => {\n      return data.filter(item => {\n        const itemDate = item.date;\n        console.log(itemDate + \" - \" + currentDate);\n        return itemDate === currentDate;\n      });\n    };\n\n    // Вызываем функцию для отправки POST-запроса\n    runCSharpScript();\n  }, [currentDate, setSpreadsheetData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [renderedContent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paginationContainer\",\n            children: renderedButtons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminConsole, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/test\",\n        element: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"4Ts0hF29XOeM88QcKlrdY9YNNgQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Routes","Route","getFileType","AdminConsole","Test","ReactPlayer","DataTable","jsxDEV","_jsxDEV","App","_s","sourceList","setSourceList","currentTime","setCurrentTime","currentDateLV","setCurrentDateLV","currentDate","setCurrentDate","currentPage","setCurrentPage","timeZone","setTimeZone","spreadsheetData","setSpreadsheetData","itemsPerPage","url","renderedContent","setRenderedContent","renderedButtons","setRenderedButtons","cache","setCache","videoTimes","setVideoTimes","totalPages","Math","ceil","length","interval","getFormattedTime","Date","toLocaleString","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","getFormattedDate","date","day","getDate","month","getMonth","year","getFullYear","getFormattedSpecificDate","options","weekday","formattedDate","toLocaleDateString","fetchTimeZone","response","fetch","ok","Error","data","json","config","TimeZone","error","console","intervalId","setInterval","clearInterval","totalElements","nextPage","handleVideoProgress","file","progress","prevTimes","playedSeconds","renderContent","sortData","columns","sortedData","sort","a","b","i","column","valueA","valueB","regex","matchA","match","matchB","numComparison","parseInt","romanComparison","romanToNumber","localeCompare","sensitivity","comparison","sortedFilteredData","sourceIndex","source","log","request","type","startsWith","urlType","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","playing","controls","muted","onProgress","youtube","playerVars","start","txtFileRequest","txtContent","text","children","status","textContent","prevCache","blobData","blob","imageUrl","URL","createObjectURL","videoBlob","videoUrl","autoPlay","loop","slice","map","index","renderPageNumbersAsync","paginate","pageNumber","renderPageNumbers","pageNumbers","push","PageButton","onClick","isActive","renderAsyncContent","content","window","location","pathname","styleLink","document","createElement","rel","href","head","appendChild","body","id","fetchSourcesList","files","roman","romanNumeralMap","I","II","III","runCSharpScript","method","headers","JsonData","jsonData","JSON","parse","dataArray","filter","item","subst_person","filteredData","filterDataByCurrentDate","itemDate","path","element","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Routes, Route } from 'react-router-dom';\r\nimport { getFileType } from './adminToServer.js';\r\nimport AdminConsole from './AdminConsole';\nimport Test from './Test';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport './styles.css';\nimport './App.css';\n\nfunction App() {\n    const [sourceList, setSourceList] = useState([]);\n    const [currentTime, setCurrentTime] = useState(\"\");\r\n    const [currentDateLV, setCurrentDateLV] = useState(\"\");\r\n    const [currentDate, setCurrentDate] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [timeZone, setTimeZone] = useState(\"\");\n    const [spreadsheetData, setSpreadsheetData] = useState([]);\n    const [itemsPerPage] = useState(20);\n    const url = 'http://localhost:3001/';\n    const [renderedContent, setRenderedContent] = useState(null);\n    const [renderedButtons, setRenderedButtons] = useState(null);\n    const [cache, setCache] = useState({});\n    const [videoTimes, setVideoTimes] = useState({});\n    const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n    const interval = 500000;\n\n    const getFormattedTime = useCallback(() => {\r\n        if (timeZone) {\r\n            const currentDate = new Date(new Date().toLocaleString('en-US', { timeZone: timeZone }));\r\n            const hours = currentDate.getHours().toString().padStart(2, '0');\r\n            const minutes = currentDate.getMinutes().toString().padStart(2, '0');\r\n            const seconds = currentDate.getSeconds().toString().padStart(2, '0');\r\n            return `${hours}:${minutes}:${seconds}`;\r\n        }\r\n        return \"\";\r\n    }, [timeZone]);\r\n\r\n    const getFormattedDate = useCallback(() => {\r\n        const date = new Date();\r\n        const day = date.getDate();\r\n        const month = date.getMonth() + 1; // Note: January is 0\r\n        const year = date.getFullYear();\r\n\r\n        return `${day < 10 ? '0' + day : day}.${month < 10 ? '0' + month : month}.${year}.`;\r\n    }, []);\r\n\r\n    const getFormattedSpecificDate = useCallback(() => {\r\n        if (timeZone) {\r\n            const currentDate = new Date();\r\n            const options = {\r\n                weekday: 'long',\r\n                day: 'numeric',\r\n                month: 'long'\r\n            };\r\n            const formattedDate = currentDate.toLocaleDateString('lv-LV', options); // 'lv-LV' - код локали для латышского языка\r\n            return formattedDate;\r\n        }\r\n        return \"\";\r\n    }, [timeZone]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTimeZone = async () => {\r\n            try {\r\n                // Получение конфигурации из сервера\r\n                const response = await fetch(url + 'getConfig');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch configuration');\r\n                }\r\n                const data = await response.json();\r\n                const { config } = data;\r\n                const { TimeZone } = config; // Извлекаем только TimeZone из объекта config\r\n                setTimeZone(TimeZone); // Устанавливаем значение временной зоны\r\n            } catch (error) {\r\n                console.error('Error fetching configuration:', error);\r\n            }\r\n        };\r\n\r\n        // Выполняем запрос на сервер для получения TimeZone при монтировании компонента\r\n        fetchTimeZone();\r\n\r\n        // Устанавливаем интервал для выполнения запроса TimeZone каждые 30 секунд\r\n        const intervalId = setInterval(fetchTimeZone, 30 * 1000);\r\n\r\n        // Очищаем интервал при размонтировании компонента\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Устанавливаем интервал для обновления остальных данных каждую секунду\r\n        const intervalId = setInterval(() => {\r\n            setCurrentTime(getFormattedTime());\r\n            setCurrentDate(getFormattedDate());\r\n            setCurrentDateLV(getFormattedSpecificDate());\r\n        }, 1000);\r\n\r\n        // Очищаем интервал при размонтировании компонента\r\n        return () => clearInterval(intervalId);\r\n    }, [getFormattedTime, getFormattedDate, getFormattedSpecificDate]);\r\n\n    \n\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            const totalElements = totalPages + sourceList.length;\r\n            const nextPage = currentPage + 1 > totalElements ? 1 : currentPage + 1;\r\n            setCurrentPage(nextPage);\r\n        }, interval); // Вызывать каждые interval/1000 секунд\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [currentPage, totalPages, sourceList]);\r\n\r\n    const handleVideoProgress = (file, progress) => {\r\n        setVideoTimes(prevTimes => ({\r\n            ...prevTimes,\r\n            [file]: progress.playedSeconds\r\n        }));\r\n    };\r\n\r\n\n    const renderContent = useCallback(async () => {\n        const sortData = (data, columns) => {\n            const sortedData = [...data];\n\n            sortedData.sort((a, b) => {\n                for (let i = 0; i < columns.length; i++) {\n                    const column = columns[i];\n                    const valueA = a[column] || '';\n                    const valueB = b[column] || '';\n\n                    if (column === 'class') {\n                        const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n                        const matchA = valueA.match(regex);\n                        const matchB = valueB.match(regex);\n\n                        if (matchA && matchB) {\n                            const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n\n                            if (numComparison !== 0) {\n                                return numComparison;\n                            }\n\n                            const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n\n                            if (romanComparison !== 0) {\n                                return romanComparison;\n                            }\n\n                            return matchA[2].localeCompare(matchB[2], 'en', { sensitivity: 'base' });\n                        } else {\n                            return 0;\n                        }\n                    } else {\n                        const comparison = valueA.localeCompare(valueB, 'en', { sensitivity: 'base' });\n\n                        if (comparison !== 0) {\n                            return comparison;\n                        }\n                    }\n                }\n                return 0;\n            });\n\n            return sortedData;\n        };\n\n        const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n        if (currentPage > totalPages) {\n            const sourceIndex = currentPage - totalPages - 1;\n            const source = sourceList[sourceIndex];\n            \n            if (!source) { \n                console.log(`No source`);\n                return null;\r\n            }\n\n            const request = url + \"getSource/\" + source.file;\n\n            if (source.type.startsWith(\"url\")) {\n                const urlType = getFileType(source.file);\n\n                switch (urlType) {\n                    case 'foto':\r\n                        return (\r\n                            <img\r\n                                src={source.file}\r\n                                alt={`Page ${currentPage}`}\r\n                                className=\"photoImage\"\r\n                            />\r\n                        );\n                    case 'video':\n                    case'youtube':\n                        if (videoTimes[source.file] == null) {\n                            videoTimes[source.file] = 0;\n                        }\n                        console.log(videoTimes);\n                        return (\n                            <ReactPlayer\n                                url={source.file}\n                                width=\"99vw\"\n                                height=\"99.5vh\"\n                                playing\n                                controls\n                                muted\n                                onProgress={(progress) => handleVideoProgress(source.file, progress)}\r\n                                config={{\r\n                                    youtube: {\r\n                                        playerVars: {\r\n                                            start: videoTimes[source.file]\r\n                                        }\r\n                                    }\r\n                                }}\n                            />\n                        );\n                    case 'text':\n                        const txtFileRequest = await fetch(source.file);\n\n                        if (txtFileRequest.ok) {\n                            const txtContent = await txtFileRequest.text();\n\n                            return (\n                                <h1>{txtContent}</h1>\n                            );\n                        } else {\n                            // Обработка ошибки получения файла .txt\n                            console.error('Error fetching .txt file:', txtFileRequest.status);\n                            return <div>Error fetching URL(text)</div>;\n                        }\n                    default:\n                        console.error(`Unsupported URL type: ${urlType}`);\n                        return (<div>Unsupported URL type</div>);\n                }\n            }\n            else{\n                switch (source.type) {\n                    // В вашем компоненте с отображением контента\n                    case \"text\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    const textContent = await response.text();\r\n\r\n                                    setCache(prevCache => ({\r\n                                        ...prevCache,\r\n                                        [source.file]: textContent\r\n                                    }));\r\n                                } else {\r\n                                    // Обработка ошибок\r\n                                    console.error('Error fetching text:', response.status);\r\n                                    return <div>Error fetching text</div>;\r\n                                }\r\n                            }\r\n                            return <pre>{cache[source.file]}</pre>;\r\n                        } catch (error) {\r\n                            console.error('Error fetching text:', error);\r\n                            return <div>Error fetching text</div>;\r\n                        }\r\n\n                    case \"foto\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    if (source.type.startsWith(\"foto\")) {\r\n                                        const blobData = await response.blob();\r\n                                        const imageUrl = URL.createObjectURL(blobData);\r\n\r\n                                        setCache(prevCache => ({\r\n                                            ...prevCache,\r\n                                            [source.file]: imageUrl\r\n                                        }));\r\n                                    } else {\r\n                                        // Добавьте обработку других типов файлов, если необходимо\r\n                                        return (<div>Error fetching image</div>);\r\n                                    }\r\n                                } else {\r\n                                    // обработка ошибок\r\n                                    console.error('Error fetching image:', response.status);\r\n                                    return (<div>Error fetching image</div>);\r\n                                }\r\n                            }\r\n                            return (\r\n                                <img\r\n                                    src={cache[source.file]}\r\n                                    alt={`Sheet ${currentPage}`}\r\n                                    className=\"photoImage\"\r\n                                />\r\n                            );\r\n                        } catch (error) {\r\n                            console.error('Error fetching image:', error);\r\n                            return (<div>Error fetching image</div>);\r\n                        }\n                    case \"video\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    const videoBlob = await response.blob();\r\n                                    const videoUrl = URL.createObjectURL(videoBlob);\r\n\r\n                                    setCache(prevCache => ({\r\n                                        ...prevCache,\r\n                                        [source.file]: videoUrl\r\n                                    }));\r\n                                } else {\r\n                                    // Обработка ошибок\r\n                                    console.error('Error fetching video:', response.status);\r\n                                    return <div>Error fetching video</div>;\r\n                                }\r\n                            }\r\n                            return (\r\n                                <video className=\"videoPlayer\" autoPlay loop muted>\r\n                                    <source src={cache[source.file]} type=\"video/mp4\" />\r\n                                    <source src={cache[source.file]} type=\"video/ogg\" />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            );\r\n                        } catch (error) {\r\n                            console.error('Error fetching video:', error);\r\n                            return <div>Error fetching video</div>;\r\n                        }\r\n\n                    default:\n                        console.error(`Unsupported type: ${source.type}`);\n                        return (<div>Error fetching video</div>);\n                }\n            }\n        } else {\n            console.log('Table data');\n            // код для отображения таблицы данных\n            return (\n                <div>\n                    <h1>{currentTime}</h1>\n                    <h2>AIZVIETOŠANAS LAPA</h2>\n                    <h3>{currentDateLV}</h3>\n                    <div className=\"table-wrapper\">\n                        <table className=\"fl-table\">\n                            <thead>\n                                <tr>\n                                    <th>Aizvietotājs</th>\n                                    <th>Stunda</th>\n                                    <th>Klase</th>\n                                    <th>Kab.</th>\n                                    <th>Promešosais skolotājs</th>\n                                    <th>Piezīmes</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"dataBody\">\n                                {sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => (\n                                    <DataTable\n                                        key={index}\n                                        data={data}\n                                        currentDate={currentDate}\n                                    />\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            );\n        }\n    }, [cache, currentDate, currentDateLV, currentPage, currentTime, itemsPerPage, sourceList, spreadsheetData, totalPages, videoTimes]);\n\n    const renderPageNumbersAsync = useCallback(async () => {\n        const paginate = (pageNumber) => {\n            setCurrentPage(pageNumber);\n            if (pageNumber > totalPages)\n                console.log(`Clicked on photo page ${pageNumber}`);\n        };\n\n        const renderPageNumbers = async () => {\n            const pageNumbers = [];\n            let totalElements = sourceList.length;\n\n            for (let i = 1; i <= totalPages + totalElements; i++) {\n                pageNumbers.push(\n                    <PageButton\n                        key={i}\n                        onClick={() => paginate(i)}\n                        isActive={i === currentPage}\n                    />\n                );\n            }\n\n            return pageNumbers;\n        };\n        const pageNumbers = await renderPageNumbers();\n        setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n    }, [currentPage, sourceList.length, totalPages]);\n\n    useEffect(() => {\r\n        const renderAsyncContent = async () => {\n            const content = await renderContent();\n            setRenderedContent(content);\n        };\r\n\r\n        if (window.location.pathname !== \"/admin\") {\r\n            console.log(`Rendering...`);\r\n            renderAsyncContent();\r\n            renderPageNumbersAsync();\r\n        } else {\r\n            const styleLink = document.createElement(\"link\");\r\n            styleLink.rel = \"stylesheet\";\r\n            styleLink.href = \"./style_adm.css\"; // Замените на путь к вашему файлу стилей\r\n            document.head.appendChild(styleLink);\r\n\r\n            // Добавляем идентификатор для body\r\n            document.body.id = \"admin-body\";\r\n        }\r\n\r\n        \r\n    }, [currentPage, sourceList, spreadsheetData, currentTime, renderPageNumbersAsync, renderContent]);\r\n\r\n\n    useEffect(() => {\r\n        const fetchSourcesList = async () => {\r\n            try {\r\n                const response = await fetch(url + 'getAllSourcesDir');\r\n                if (!response.ok) {\r\n                    console.error('Failed to fetch sources list. HTTP status:', response.status);\r\n                    throw new Error('Failed to fetch sources list');\r\n                }\r\n                const { files } = await response.json();\r\n                console.log('files - ', files);\r\n                setSourceList(files);\r\n            } catch (error) {\r\n                console.error('Error fetching sources list:', error);\r\n            }\r\n        };\r\n\r\n        // Запускаем функцию для получения списка источников данных\r\n        fetchSourcesList();\r\n    }, []);\n\n    const PageButton = ({ onClick, isActive }) => (\n        <button onClick={onClick} className={`button-81 ${isActive ? 'active' : ''}`}>\n        </button>\n    );\n\n    const romanToNumber = (roman) => {\n        const romanNumeralMap = {\n            I: 1,\n            II: 2,\n            III: 3\n        };\n\n        return romanNumeralMap[roman] || 0;\n    };\n\n    useEffect(() => {\n        const runCSharpScript = async () => {\n            try {\n                console.log('Sending a POST request to run C# script...');\n\n                const response = await fetch(url + 'runCSharpScript', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n\n                console.log('Server response received:', response);\n\n                if (!response.ok) {\n                    console.error('Failed to run C# script on the server. HTTP status:', response.status);\n                    throw new Error('Failed to run C# script on the server');\n                }\n\n                const JsonData = await response.text(); // Get the raw text response\n\n                const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n                let dataArray = JSON.parse(jsonData.data);\n\n                console.log('Server response data received:', dataArray);\n\n                // Заполняем пропуски в свойстве \"date\"\n                for (let i = 0; i < dataArray.length; i++) {\n                    if (dataArray[i].date === null || dataArray[i].date === \"\") {\n                        dataArray[i].date = dataArray[i - 1].date;\n                    }\n                }\n\n                // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n                dataArray = dataArray.filter(item => {\n                    if (item.subst_person === \"\" || item.subst_person === \"nav stundas\")\n                        return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n                    return true;\n                });\n\n                const filteredData = filterDataByCurrentDate(dataArray);\n\n                console.log('C# script executed successfully. Data from the server:', filteredData);\n                setSpreadsheetData(filteredData);\n            } catch (error) {\n                console.error('Error running C# script:', error);\n            }\n        };\n\n        const filterDataByCurrentDate = (data) => {\n            return data.filter(item => {\n                const itemDate = item.date;\n                console.log(itemDate + \" - \" + currentDate)\n                return itemDate === currentDate;\n            });\n        };\n\n\n        // Вызываем функцию для отправки POST-запроса\n        runCSharpScript();\n\n    }, [currentDate, setSpreadsheetData]);\n\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path=\"/\" element={\r\n                    <div>\r\n                        {renderedContent}\r\n                        {/*\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"itemsPerPage\"\r\n                            onChange={handleItemsPerPageChange}\r\n                            placeholder=\"Items per page...\"\r\n                            min=\"1\"\r\n                            className=\"itemsPerPageInput\"\r\n                        />\r\n                        */}\r\n                        <div className=\"paginationContainer\">\r\n                            {renderedButtons}\r\n                        </div>\r\n                    </div>\r\n                } />\r\n                {/* Добавляем маршрут к AdminConsole */}\r\n                <Route path=\"/admin\" element={<AdminConsole />} />\r\n                <Route path=\"/test\" element={<Test />} />\r\n                {/* Другие маршруты, если необходимо */}\r\n            </Routes>\r\n        </div>\r\n    );\r\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}