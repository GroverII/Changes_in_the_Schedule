{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { writeFile, utils } from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [spreadsheetData, setSpreadsheetData] = useState(null);\n  const handleLogin = async () => {\n    // ���������� ������ �� ������ ��� �������� ������ � ������\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      if (!response.ok) {\n        console.error('Authentication failed. HTTP status:', response.status);\n        // ��������� ������ ��������������\n        return;\n      }\n      const data = await response.json();\n      setIsLoggedIn(true);\n\n      // ����������� ������ � �������\n      const spreadsheetResponse = await fetch('http://localhost:3001/runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!spreadsheetResponse.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', spreadsheetResponse.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const JsonData = await spreadsheetResponse.text();\n      const jsonData = JSON.parse(JsonData);\n      const dataArray = JSON.parse(jsonData.data);\n      setSpreadsheetData(dataArray);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleDownloadExcel = () => {\n    if (spreadsheetData) {\n      const worksheet = utils.json_to_sheet(spreadsheetData);\n      const workbook = utils.book_new();\n      utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n      writeFile(workbook, 'data.xlsx');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Login:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isLoggedIn && spreadsheetData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        children: \"Download Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"+cjNidR//zUGnIkzLi0Q/w2dbSw=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useState","writeFile","utils","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminConsole","_s","login","setLogin","password","setPassword","isLoggedIn","setIsLoggedIn","spreadsheetData","setSpreadsheetData","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","data","json","spreadsheetResponse","Error","JsonData","text","jsonData","parse","dataArray","handleDownloadExcel","worksheet","json_to_sheet","workbook","book_new","book_append_sheet","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { writeFile, utils } from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [spreadsheetData, setSpreadsheetData] = useState(null);\r\n\r\n    const handleLogin = async () => {\r\n        // ���������� ������ �� ������ ��� �������� ������ � ������\r\n        try {\r\n            const response = await fetch('http://localhost:3001/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ login, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Authentication failed. HTTP status:', response.status);\r\n                // ��������� ������ ��������������\r\n                return;\r\n            }\r\n\r\n            const data = await response.json();\r\n            setIsLoggedIn(true);\r\n\r\n            // ����������� ������ � �������\r\n            const spreadsheetResponse = await fetch('http://localhost:3001/runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!spreadsheetResponse.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', spreadsheetResponse.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const JsonData = await spreadsheetResponse.text();\r\n            const jsonData = JSON.parse(JsonData);\r\n            const dataArray = JSON.parse(jsonData.data);\r\n\r\n            setSpreadsheetData(dataArray);\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    };\r\n\r\n    const handleDownloadExcel = () => {\r\n        if (spreadsheetData) {\r\n            const worksheet = utils.json_to_sheet(spreadsheetData);\r\n            const workbook = utils.book_new();\r\n            utils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n            writeFile(workbook, 'data.xlsx');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <>\r\n                    <div>\r\n                        <label htmlFor=\"login\">Login:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"login\"\r\n                            value={login}\r\n                            onChange={(e) => setLogin(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button onClick={handleLogin}>Enter</button>\r\n                </>\r\n            )}\r\n\r\n            {isLoggedIn && spreadsheetData && (\r\n                <div>\r\n                    <button onClick={handleDownloadExcel}>Download Excel</button>\r\n                    <h1>ss</h1>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}