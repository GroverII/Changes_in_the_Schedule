{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport AdminConsole from './AdminConsole';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport moment from 'moment-timezone';\nimport './styles.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sourceList, setSourceList] = useState([]);\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [currentDateLV, setCurrentDateLV] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [timeZone, setTimeZone] = useState(\"\");\n  const [spreadsheetData, setSpreadsheetData] = useState([]);\n  const [itemsPerPage] = useState(20);\n  const url = 'http://localhost:3001/';\n  const [renderedContent, setRenderedContent] = useState(null);\n  const [renderedButtons, setRenderedButtons] = useState(null);\n  const [cache, setCache] = useState({});\n  const [videoTimes, setVideoTimes] = useState({});\n  const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n  const interval = 500000;\n  const getFormattedTime = useCallback(() => {\n    if (timeZone) {\n      const currentDate = new Date(new Date().toLocaleString('en-US', {\n        timeZone: timeZone\n      }));\n      const hours = currentDate.getHours().toString().padStart(2, '0');\n      const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n      const seconds = currentDate.getSeconds().toString().padStart(2, '0');\n      return `${hours}:${minutes}:${seconds}`;\n    }\n    return \"\";\n  }, [timeZone]);\n  const getFormattedDate = useCallback(() => {\n    if (moment) {\n      const currentDate = new Date();\n      return moment.tz(currentDate, timeZone).format(\"DD.MM.YYYY.\");\n    }\n    return \"\";\n  });\n  const getFormattedLatvianDate = useCallback(() => {\n    if (moment) {\n      const currentDate = new Date();\n      return moment.tz(currentDate, timeZone).format(\"DD.MM.YYYY. hh:mm A z\");\n    }\n    return \"\";\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Получение конфигурации из сервера\n        const response = await fetch(url + 'getConfig');\n        if (!response.ok) {\n          throw new Error('Failed to fetch configuration');\n        }\n        const data = await response.json();\n        const {\n          config\n        } = data;\n        const {\n          TimeZone\n        } = config; // Извлекаем только TimeZone из объекта config\n        setTimeZone(TimeZone); // Устанавливаем значение временной зоны\n        setCurrentTime(getFormattedTime());\n        setCurrentDate(getFormattedDate());\n        setCurrentDateLV(getFormattedLatvianDate());\n        // Остальные операции, если нужно\n      } catch (error) {\n        console.error('Error fetching configuration:', error);\n      }\n    };\n\n    // Выполняем запрос на сервер при монтировании компонента\n    fetchData();\n\n    // Устанавливаем интервал для выполнения запроса каждые 2 минуты\n    const intervalId = setInterval(fetchData, 30 * 1000);\n\n    // Очищаем интервал при размонтировании компонента\n    return () => clearInterval(intervalId);\n  }, [timeZone]); // Убран\n\n  const updateCurrentTime = useCallback(() => {\n    setCurrentTime(getFormattedTime());\n  }, []);\n  const updateCurrentDate = useCallback(() => {\n    setCurrentDate(getFormattedDate());\n  }, []);\n  const updateCurrentDateLV = useCallback(() => {\n    setCurrentDateLV(getFormattedLatvianDate());\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateCurrentTime();\n      updateCurrentDateLV();\n      updateCurrentDate();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime]);\n  const renderAsyncContent = async () => {\n    const content = await renderContent();\n    setRenderedContent(content);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const totalElements = totalPages + sourceList.length;\n      const nextPage = currentPage + 1 > totalElements ? 1 : currentPage + 1;\n      setCurrentPage(nextPage);\n    }, interval); // Вызывать каждые interval/1000 секунд\n\n    return () => clearInterval(intervalId);\n  }, [currentPage, totalPages, sourceList]);\n  const handleVideoProgress = (file, progress) => {\n    setVideoTimes(prevTimes => ({\n      ...prevTimes,\n      [file]: progress.playedSeconds\n    }));\n  };\n  const renderContent = async () => {\n    if (currentPage > totalPages) {\n      const sourceIndex = currentPage - totalPages - 1;\n      const source = sourceList[sourceIndex];\n      if (!source) {\n        console.log(`No source`);\n        return null;\n      }\n      const request = url + \"getSource/\" + source.file;\n      if (source.type.startsWith(\"URL\")) {\n        const urlParts = source.type.split('(');\n        const urlType = urlParts[1] ? urlParts[1].slice(0, -1) : ''; // Извлекаем тип (foto), (video), (text)\n\n        switch (urlType) {\n          case 'foto':\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Image ${currentPage}`,\n              className: \"photoImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this);\n          case 'video':\n            if (videoTimes[source.file] == null) {\n              videoTimes[source.file] = 0;\n            }\n            console.log(videoTimes);\n            return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: source.file,\n              width: \"100vw\",\n              height: \"100vh\",\n              playing: true,\n              controls: true,\n              muted: true,\n              onProgress: progress => handleVideoProgress(source.file, progress),\n              config: {\n                youtube: {\n                  playerVars: {\n                    start: videoTimes[source.file]\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this);\n          case 'text':\n            const txtFileRequest = await fetch(source.file);\n            if (txtFileRequest.ok) {\n              const txtContent = await txtFileRequest.text();\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: txtContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this);\n            } else {\n              // Обработка ошибки получения файла .txt\n              console.error('Error fetching .txt file:', txtFileRequest.status);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching URL(text)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 36\n              }, this);\n            }\n          default:\n            console.error(`Unsupported URL type: ${urlType}`);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Unsupported URL type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this);\n        }\n      } else {\n        switch (source.type) {\n          // В вашем компоненте с отображением контента\n          case \"text\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  const textContent = await response.text();\n                  setCache(prevCache => ({\n                    ...prevCache,\n                    [source.file]: textContent\n                  }));\n                } else {\n                  // Обработка ошибок\n                  console.error('Error fetching text:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 44\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: cache[source.file]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 36\n              }, this);\n            } catch (error) {\n              console.error('Error fetching text:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 36\n              }, this);\n            }\n          case \"foto\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  if (source.type.startsWith(\"foto\")) {\n                    const blobData = await response.blob();\n                    const imageUrl = URL.createObjectURL(blobData);\n                    setCache(prevCache => ({\n                      ...prevCache,\n                      [source.file]: imageUrl\n                    }));\n                  } else {\n                    // Добавьте обработку других типов файлов, если необходимо\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Error fetching image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 49\n                    }, this);\n                  }\n                } else {\n                  // обработка ошибок\n                  console.error('Error fetching image:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cache[source.file],\n                alt: `Sheet ${currentPage}`,\n                className: \"photoImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this);\n            } catch (error) {\n              console.error('Error fetching image:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this);\n            }\n          case \"video\":\n            try {\n              if (cache[source.file] == null) {\n                const response = await fetch(request);\n                console.log('HTTP status:', response.status, cache);\n                if (response.ok) {\n                  const videoBlob = await response.blob();\n                  const videoUrl = URL.createObjectURL(videoBlob);\n                  setCache(prevCache => ({\n                    ...prevCache,\n                    [source.file]: videoUrl\n                  }));\n                } else {\n                  // Обработка ошибок\n                  console.error('Error fetching video:', response.status);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"Error fetching video\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 44\n                  }, this);\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"video\", {\n                className: \"videoPlayer\",\n                autoPlay: true,\n                loop: true,\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: cache[source.file],\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: cache[source.file],\n                  type: \"video/ogg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 37\n                }, this), \"Your browser does not support the video tag.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this);\n            } catch (error) {\n              console.error('Error fetching video:', error);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Error fetching video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 36\n              }, this);\n            }\n          default:\n            console.error(`Unsupported type: ${source.type}`);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Error fetching video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this);\n        }\n      }\n    } else {\n      console.log('Table data');\n      // код для отображения таблицы данных\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AIZVIETO\\u0160ANAS LAPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentDateLV\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"dataBody\",\n              children: sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => /*#__PURE__*/_jsxDEV(DataTable, {\n                data: data,\n                currentDate: currentDate\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  useEffect(() => {\n    if (window.location.pathname !== \"/admin\") {\n      console.log(`Rendering...`);\n      renderAsyncContent();\n      renderPageNumbersAsync();\n    } else {\n      const styleLink = document.createElement(\"link\");\n      styleLink.rel = \"stylesheet\";\n      styleLink.href = \"./style_adm.css\"; // Замените на путь к вашему файлу стилей\n      document.head.appendChild(styleLink);\n\n      // Добавляем идентификатор для body\n      document.body.id = \"admin-body\";\n    }\n  }, [currentPage, sourceList, spreadsheetData, currentTime]);\n  useEffect(() => {\n    const fetchSourcesList = async () => {\n      try {\n        const response = await fetch(url + 'getSourcesList');\n        if (!response.ok) {\n          console.error('Failed to fetch sources list. HTTP status:', response.status);\n          throw new Error('Failed to fetch sources list');\n        }\n        const {\n          sourcesList\n        } = await response.json();\n        console.log(sourcesList);\n        setSourceList(sourcesList);\n        renderAsyncContent(); // Вызываем renderAsyncContent после установки sourceList\n        renderPageNumbersAsync(); // Вызываем renderPageNumbersAsync после установки sourceList\n      } catch (error) {\n        console.error('Error fetching sources list:', error);\n      }\n    };\n\n    // Запускаем функцию для получения списка источников данных\n    fetchSourcesList();\n  }, []);\n  const PageButton = ({\n    onClick,\n    isActive\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    className: `button-81 ${isActive ? 'active' : ''}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 9\n  }, this);\n  const romanToNumber = roman => {\n    const romanNumeralMap = {\n      I: 1,\n      II: 2,\n      III: 3\n    };\n    return romanNumeralMap[roman] || 0;\n  };\n  const sortData = (data, columns) => {\n    const sortedData = [...data];\n    sortedData.sort((a, b) => {\n      for (let i = 0; i < columns.length; i++) {\n        const column = columns[i];\n        const valueA = a[column] || '';\n        const valueB = b[column] || '';\n        if (column === 'class') {\n          const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n          const matchA = valueA.match(regex);\n          const matchB = valueB.match(regex);\n          if (matchA && matchB) {\n            const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n            if (numComparison !== 0) {\n              return numComparison;\n            }\n            const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n            if (romanComparison !== 0) {\n              return romanComparison;\n            }\n            return matchA[2].localeCompare(matchB[2], 'en', {\n              sensitivity: 'base'\n            });\n          } else {\n            return 0;\n          }\n        } else {\n          const comparison = valueA.localeCompare(valueB, 'en', {\n            sensitivity: 'base'\n          });\n          if (comparison !== 0) {\n            return comparison;\n          }\n        }\n      }\n      return 0;\n    });\n    return sortedData;\n  };\n  useEffect(() => {\n    const runCSharpScript = async () => {\n      try {\n        console.log('Sending a POST request to run C# script...');\n        const response = await fetch(url + 'runCSharpScript', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Server response received:', response);\n        if (!response.ok) {\n          console.error('Failed to run C# script on the server. HTTP status:', response.status);\n          throw new Error('Failed to run C# script on the server');\n        }\n        const JsonData = await response.text(); // Get the raw text response\n\n        const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n        let dataArray = JSON.parse(jsonData.data);\n        console.log('Server response data received:', dataArray);\n\n        // Заполняем пропуски в свойстве \"date\"\n        for (let i = 0; i < dataArray.length; i++) {\n          if (dataArray[i].date === null || dataArray[i].date === \"\") {\n            dataArray[i].date = dataArray[i - 1].date;\n          }\n        }\n\n        // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n        dataArray = dataArray.filter(item => {\n          if (item.subst_person === \"\" || item.subst_person === \"nav stundas\") return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n          return true;\n        });\n        const filteredData = filterDataByCurrentDate(dataArray);\n        console.log('C# script executed successfully. Data from the server:', filteredData);\n        setSpreadsheetData(filteredData);\n      } catch (error) {\n        console.error('Error running C# script:', error);\n      }\n    };\n\n    // Вызываем функцию для отправки POST-запроса\n    runCSharpScript();\n  }, [setSpreadsheetData]);\n  const renderPageNumbers = async () => {\n    const pageNumbers = [];\n    let totalElements = sourceList.length;\n    for (let i = 1; i <= totalPages + totalElements; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(PageButton, {\n        onClick: () => paginate(i),\n        isActive: i === currentPage\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }, this));\n    }\n    return pageNumbers;\n  };\n  const renderPageNumbersAsync = async () => {\n    const pageNumbers = await renderPageNumbers();\n    setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n  };\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    if (pageNumber > totalPages) console.log(`Clicked on photo page ${pageNumber}`);\n  };\n  const filterDataByCurrentDate = data => {\n    return data.filter(item => {\n      const itemDate = item.date;\n      return itemDate === \"27.03.2024.\";\n    });\n  };\n  const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [renderedContent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paginationContainer\",\n            children: renderedButtons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminConsole, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"evjvBRk0YRBOjrDnauzg8u56Cvg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Routes","Route","AdminConsole","ReactPlayer","DataTable","moment","jsxDEV","_jsxDEV","App","_s","sourceList","setSourceList","currentTime","setCurrentTime","currentDateLV","setCurrentDateLV","currentDate","setCurrentDate","currentPage","setCurrentPage","timeZone","setTimeZone","spreadsheetData","setSpreadsheetData","itemsPerPage","url","renderedContent","setRenderedContent","renderedButtons","setRenderedButtons","cache","setCache","videoTimes","setVideoTimes","totalPages","Math","ceil","length","interval","getFormattedTime","Date","toLocaleString","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","getFormattedDate","tz","format","getFormattedLatvianDate","fetchData","response","fetch","ok","Error","data","json","config","TimeZone","error","console","intervalId","setInterval","clearInterval","updateCurrentTime","updateCurrentDate","updateCurrentDateLV","renderAsyncContent","content","renderContent","totalElements","nextPage","handleVideoProgress","file","progress","prevTimes","playedSeconds","sourceIndex","source","log","request","type","startsWith","urlParts","split","urlType","slice","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","playing","controls","muted","onProgress","youtube","playerVars","start","txtFileRequest","txtContent","text","children","status","textContent","prevCache","blobData","blob","imageUrl","URL","createObjectURL","videoBlob","videoUrl","autoPlay","loop","sortedFilteredData","map","index","window","location","pathname","renderPageNumbersAsync","styleLink","document","createElement","rel","href","head","appendChild","body","id","fetchSourcesList","sourcesList","PageButton","onClick","isActive","romanToNumber","roman","romanNumeralMap","I","II","III","sortData","columns","sortedData","sort","a","b","i","column","valueA","valueB","regex","matchA","match","matchB","numComparison","parseInt","romanComparison","localeCompare","sensitivity","comparison","runCSharpScript","method","headers","JsonData","jsonData","JSON","parse","dataArray","date","filter","item","subst_person","filteredData","filterDataByCurrentDate","renderPageNumbers","pageNumbers","push","paginate","pageNumber","itemDate","path","element","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Routes, Route } from 'react-router-dom';\r\nimport AdminConsole from './AdminConsole';\nimport ReactPlayer from 'react-player';\nimport DataTable from './Data_table';\nimport moment from 'moment-timezone';\nimport './styles.css';\nimport './App.css';\n\nfunction App() {\n    const [sourceList, setSourceList] = useState([]);\n    const [currentTime, setCurrentTime] = useState(\"\");\r\n    const [currentDateLV, setCurrentDateLV] = useState(\"\");\r\n    const [currentDate, setCurrentDate] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [timeZone, setTimeZone] = useState(\"\");\n    const [spreadsheetData, setSpreadsheetData] = useState([]);\n    const [itemsPerPage] = useState(20);\n    const url = 'http://localhost:3001/';\n    const [renderedContent, setRenderedContent] = useState(null);\n    const [renderedButtons, setRenderedButtons] = useState(null);\n    const [cache, setCache] = useState({});\n    const [videoTimes, setVideoTimes] = useState({});\n    const totalPages = Math.ceil(spreadsheetData.length / itemsPerPage);\n    const interval = 500000;\n\n    const getFormattedTime = useCallback(() => {\r\n        if (timeZone) {\r\n            const currentDate = new Date(new Date().toLocaleString('en-US', { timeZone: timeZone }));\r\n            const hours = currentDate.getHours().toString().padStart(2, '0');\r\n            const minutes = currentDate.getMinutes().toString().padStart(2, '0');\r\n            const seconds = currentDate.getSeconds().toString().padStart(2, '0');\r\n            return `${hours}:${minutes}:${seconds}`;\r\n        }\r\n        return \"\";\r\n    }, [timeZone]);\r\n\r\n    const getFormattedDate = useCallback(() => {\r\n        if (moment) {\r\n            const currentDate = new Date();\r\n            return moment.tz(currentDate, timeZone).format(\"DD.MM.YYYY.\");\r\n        }\r\n        return \"\";\r\n    });\r\n\r\n    const getFormattedLatvianDate = useCallback(() => {\r\n        if (moment) {\r\n            const currentDate = new Date();\r\n            return moment.tz(currentDate, timeZone).format(\"DD.MM.YYYY. hh:mm A z\");\r\n        }\r\n        return \"\";\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Получение конфигурации из сервера\r\n                const response = await fetch(url + 'getConfig');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch configuration');\r\n                }\r\n                const data = await response.json();\r\n                const { config } = data;\r\n                const { TimeZone } = config; // Извлекаем только TimeZone из объекта config\r\n                setTimeZone(TimeZone); // Устанавливаем значение временной зоны\r\n                setCurrentTime(getFormattedTime());\r\n                setCurrentDate(getFormattedDate());\r\n                setCurrentDateLV(getFormattedLatvianDate());\r\n                // Остальные операции, если нужно\r\n            } catch (error) {\r\n                console.error('Error fetching configuration:', error);\r\n            }\r\n        };\r\n\r\n        // Выполняем запрос на сервер при монтировании компонента\r\n        fetchData();\r\n\r\n        // Устанавливаем интервал для выполнения запроса каждые 2 минуты\r\n        const intervalId = setInterval(fetchData, 30 * 1000);\r\n\r\n        // Очищаем интервал при размонтировании компонента\r\n        return () => clearInterval(intervalId);\r\n    }, [timeZone]); // Убран\r\n\r\n    const updateCurrentTime = useCallback(() => {\n        setCurrentTime(getFormattedTime());\n    }, []);\n\n    const updateCurrentDate = useCallback(() => {\n        setCurrentDate(getFormattedDate());\n    }, []);\n\n    const updateCurrentDateLV = useCallback(() => {\n        setCurrentDateLV(getFormattedLatvianDate());\n    }, []);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            updateCurrentTime();\n            updateCurrentDateLV();\n            updateCurrentDate();\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, [updateCurrentDate, updateCurrentDateLV, updateCurrentTime]);\r\n\n    const renderAsyncContent = async () => {\n        const content = await renderContent();\n        setRenderedContent(content);\n    };\n\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            const totalElements = totalPages + sourceList.length;\r\n            const nextPage = currentPage + 1 > totalElements ? 1 : currentPage + 1;\r\n            setCurrentPage(nextPage);\r\n        }, interval); // Вызывать каждые interval/1000 секунд\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [currentPage, totalPages, sourceList]);\r\n\r\n    const handleVideoProgress = (file, progress) => {\r\n        setVideoTimes(prevTimes => ({\r\n            ...prevTimes,\r\n            [file]: progress.playedSeconds\r\n        }));\r\n    };\r\n\r\n\n    const renderContent = async () => {\n        if (currentPage > totalPages) {\n            const sourceIndex = currentPage - totalPages - 1;\n            const source = sourceList[sourceIndex];\n            \n            if (!source) { \n                console.log(`No source`);\n                return null;\r\n            }\n\n            const request = url + \"getSource/\" + source.file;\n\n            if (source.type.startsWith(\"URL\")) {\n                const urlParts = source.type.split('(');\n                const urlType = urlParts[1] ? urlParts[1].slice(0, -1) : ''; // Извлекаем тип (foto), (video), (text)\n\n                switch (urlType) {\n                    case 'foto':\n                        return (\n                            <img\n                                src={source.file}\n                                alt={`Image ${currentPage}`}\n                                className=\"photoImage\"\n                            />\n                        );\n                    case 'video':\n                        if (videoTimes[source.file] == null) {\n                            videoTimes[source.file] = 0;\n                        }\n                        console.log(videoTimes);\n                        return (\n                            <ReactPlayer\n                                url={source.file}\n                                width=\"100vw\"\n                                height=\"100vh\"\n                                playing\n                                controls\n                                muted\n                                onProgress={(progress) => handleVideoProgress(source.file, progress)}\r\n                                config={{\r\n                                    youtube: {\r\n                                        playerVars: {\r\n                                            start: videoTimes[source.file]\r\n                                        }\r\n                                    }\r\n                                }}\n                            />\n                        );\n                    case 'text':\n                        const txtFileRequest = await fetch(source.file);\n\n                        if (txtFileRequest.ok) {\n                            const txtContent = await txtFileRequest.text();\n\n                            return (\n                                <h1>{txtContent}</h1>\n                            );\n                        } else {\n                            // Обработка ошибки получения файла .txt\n                            console.error('Error fetching .txt file:', txtFileRequest.status);\n                            return <div>Error fetching URL(text)</div>;\n                        }\n                    default:\n                        console.error(`Unsupported URL type: ${urlType}`);\n                        return (<div>Unsupported URL type</div>);\n                }\n            }\n            else{\n                switch (source.type) {\n                    // В вашем компоненте с отображением контента\n                    case \"text\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    const textContent = await response.text();\r\n\r\n                                    setCache(prevCache => ({\r\n                                        ...prevCache,\r\n                                        [source.file]: textContent\r\n                                    }));\r\n                                } else {\r\n                                    // Обработка ошибок\r\n                                    console.error('Error fetching text:', response.status);\r\n                                    return <div>Error fetching text</div>;\r\n                                }\r\n                            }\r\n                            return <pre>{cache[source.file]}</pre>;\r\n                        } catch (error) {\r\n                            console.error('Error fetching text:', error);\r\n                            return <div>Error fetching text</div>;\r\n                        }\r\n\n                    case \"foto\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    if (source.type.startsWith(\"foto\")) {\r\n                                        const blobData = await response.blob();\r\n                                        const imageUrl = URL.createObjectURL(blobData);\r\n\r\n                                        setCache(prevCache => ({\r\n                                            ...prevCache,\r\n                                            [source.file]: imageUrl\r\n                                        }));\r\n                                    } else {\r\n                                        // Добавьте обработку других типов файлов, если необходимо\r\n                                        return (<div>Error fetching image</div>);\r\n                                    }\r\n                                } else {\r\n                                    // обработка ошибок\r\n                                    console.error('Error fetching image:', response.status);\r\n                                    return (<div>Error fetching image</div>);\r\n                                }\r\n                            }\r\n                            return (\r\n                                <img\r\n                                    src={cache[source.file]}\r\n                                    alt={`Sheet ${currentPage}`}\r\n                                    className=\"photoImage\"\r\n                                />\r\n                            );\r\n                        } catch (error) {\r\n                            console.error('Error fetching image:', error);\r\n                            return (<div>Error fetching image</div>);\r\n                        }\n                    case \"video\":\r\n                        try {\r\n                            if (cache[source.file] == null) {\r\n                                const response = await fetch(request);\r\n                                console.log('HTTP status:', response.status, cache);\r\n                                if (response.ok) {\r\n                                    const videoBlob = await response.blob();\r\n                                    const videoUrl = URL.createObjectURL(videoBlob);\r\n\r\n                                    setCache(prevCache => ({\r\n                                        ...prevCache,\r\n                                        [source.file]: videoUrl\r\n                                    }));\r\n                                } else {\r\n                                    // Обработка ошибок\r\n                                    console.error('Error fetching video:', response.status);\r\n                                    return <div>Error fetching video</div>;\r\n                                }\r\n                            }\r\n                            return (\r\n                                <video className=\"videoPlayer\" autoPlay loop>\r\n                                    <source src={cache[source.file]} type=\"video/mp4\" />\r\n                                    <source src={cache[source.file]} type=\"video/ogg\" />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            );\r\n                        } catch (error) {\r\n                            console.error('Error fetching video:', error);\r\n                            return <div>Error fetching video</div>;\r\n                        }\r\n\n                    default:\n                        console.error(`Unsupported type: ${source.type}`);\n                        return (<div>Error fetching video</div>);\n                }\n            }\n        } else {\n            console.log('Table data');\n            // код для отображения таблицы данных\n            return (\n                <div>\n                    <h1>{currentTime}</h1>\n                    <h2>AIZVIETOŠANAS LAPA</h2>\n                    <h3>{currentDateLV}</h3>\n                    <div className=\"table-wrapper\">\n                        <table className=\"fl-table\">\n                            <thead>\n                                <tr>\n                                    <th>Aizvietotājs</th>\n                                    <th>Stunda</th>\n                                    <th>Klase</th>\n                                    <th>Kab.</th>\n                                    <th>Promešosais skolotājs</th>\n                                    <th>Piezīmes</th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"dataBody\">\n                                {sortedFilteredData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((data, index) => (\n                                    <DataTable\n                                        key={index}\n                                        data={data}\n                                        currentDate={currentDate}\n                                    />\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n\n    useEffect(() => {\r\n        if (window.location.pathname !== \"/admin\") {\r\n            console.log(`Rendering...`);\r\n            renderAsyncContent();\r\n            renderPageNumbersAsync();\r\n        } else {\r\n            const styleLink = document.createElement(\"link\");\r\n            styleLink.rel = \"stylesheet\";\r\n            styleLink.href = \"./style_adm.css\"; // Замените на путь к вашему файлу стилей\r\n            document.head.appendChild(styleLink);\r\n\r\n            // Добавляем идентификатор для body\r\n            document.body.id = \"admin-body\";\r\n        }\r\n    }, [currentPage, sourceList, spreadsheetData, currentTime]);\r\n\n    useEffect(() => {\n        const fetchSourcesList = async () => {\n            try {\n                const response = await fetch(url + 'getSourcesList');\n                if (!response.ok) {\n                    console.error('Failed to fetch sources list. HTTP status:', response.status);\n                    throw new Error('Failed to fetch sources list');\n                }\n                const { sourcesList } = await response.json();\n                console.log(sourcesList);\n                setSourceList(sourcesList);\n                renderAsyncContent(); // Вызываем renderAsyncContent после установки sourceList\n                renderPageNumbersAsync(); // Вызываем renderPageNumbersAsync после установки sourceList\n            } catch (error) {\n                console.error('Error fetching sources list:', error);\n            }\n        };\n\n        // Запускаем функцию для получения списка источников данных\n        fetchSourcesList();\n    }, []);\n\n    const PageButton = ({ onClick, isActive }) => (\n        <button onClick={onClick} className={`button-81 ${isActive ? 'active' : ''}`}>\n        </button>\n    );\n\n    const romanToNumber = (roman) => {\n        const romanNumeralMap = {\n            I: 1,\n            II: 2,\n            III: 3\n        };\n\n        return romanNumeralMap[roman] || 0;\n    };\n\n    const sortData = (data, columns) => {\n        const sortedData = [...data];\n\n        sortedData.sort((a, b) => {\n            for (let i = 0; i < columns.length; i++) {\n                const column = columns[i];\n                const valueA = a[column] || '';\n                const valueB = b[column] || '';\n\n                if (column === 'class') {\n                    const regex = /^(\\d+)([^\\d]+)(?: \\(([^)]+)\\))?$/;\n                    const matchA = valueA.match(regex);\n                    const matchB = valueB.match(regex);\n\n                    if (matchA && matchB) {\n                        const numComparison = parseInt(matchA[1], 10) - parseInt(matchB[1], 10);\n\n                        if (numComparison !== 0) {\n                            return numComparison;\n                        }\n\n                        const romanComparison = romanToNumber(matchA[3]) - romanToNumber(matchB[3]);\n\n                        if (romanComparison !== 0) {\n                            return romanComparison;\n                        }\n\n                        return matchA[2].localeCompare(matchB[2], 'en', { sensitivity: 'base' });\n                    } else {\n                        return 0;\n                    }\n                } else {\n                    const comparison = valueA.localeCompare(valueB, 'en', { sensitivity: 'base' });\n\n                    if (comparison !== 0) {\n                        return comparison;\n                    }\n                }\n            }\n            return 0;\n        });\n\n        return sortedData;\n    };\n\n\n\n    useEffect(() => {\n        const runCSharpScript = async () => {\n            try {\n                console.log('Sending a POST request to run C# script...');\n\n                const response = await fetch(url + 'runCSharpScript', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n\n                console.log('Server response received:', response);\n\n                if (!response.ok) {\n                    console.error('Failed to run C# script on the server. HTTP status:', response.status);\n                    throw new Error('Failed to run C# script on the server');\n                }\n\n                const JsonData = await response.text(); // Get the raw text response\n\n                const jsonData = JSON.parse(JsonData); // Parse the cleaned JSON string\n\n                let dataArray = JSON.parse(jsonData.data);\n\n                console.log('Server response data received:', dataArray);\n\n                // Заполняем пропуски в свойстве \"date\"\n                for (let i = 0; i < dataArray.length; i++) {\n                    if (dataArray[i].date === null || dataArray[i].date === \"\") {\n                        dataArray[i].date = dataArray[i - 1].date;\n                    }\n                }\n\n                // Удаляем элементы, у которых все свойства (кроме \"date\") пусты\n                dataArray = dataArray.filter(item => {\n                    if (item.subst_person === \"\" || item.subst_person === \"nav stundas\")\n                        return false; // Все свойства (кроме \"date\") пусты, удаляем элемент\n                    return true;\n                });\n\n                const filteredData = filterDataByCurrentDate(dataArray);\n\n                console.log('C# script executed successfully. Data from the server:', filteredData);\n                setSpreadsheetData(filteredData);\n            } catch (error) {\n                console.error('Error running C# script:', error);\n            }\n        };\n\n\n        // Вызываем функцию для отправки POST-запроса\n        runCSharpScript();\n\n    }, [setSpreadsheetData]);\n\n    const renderPageNumbers = async () => {\n        const pageNumbers = [];\n        let totalElements = sourceList.length;\n\n        for (let i = 1; i <= totalPages + totalElements; i++) {\n                pageNumbers.push(\n                    <PageButton\n                        key={i}\n                        onClick={() => paginate(i)}\n                        isActive={i === currentPage}\n                    />\n                );\n        }\n\n        return pageNumbers;\n    };\n\n    const renderPageNumbersAsync = async () => {\n        const pageNumbers = await renderPageNumbers();\n        setRenderedButtons(pageNumbers); // Оборачиваем массив элементов в фрагмент для корректного отображения\n    };\n\n    const paginate = (pageNumber) => {\n        setCurrentPage(pageNumber);\n        if (pageNumber > totalPages)\n            console.log(`Clicked on photo page ${pageNumber}`);\n    };\n\n    const filterDataByCurrentDate = (data) => {\n        return data.filter(item => {\n            const itemDate = item.date;\n            return itemDate === \"27.03.2024.\";\n        });\n    };\n\n    const sortedFilteredData = sortData(spreadsheetData, ['subst_person', 'lesson', 'class', 'lesson_room', 'graduated_teacher', 'notes']);\n\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path=\"/\" element={\r\n                    <div>\r\n                        {renderedContent}\r\n                        {/*\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"itemsPerPage\"\r\n                            onChange={handleItemsPerPageChange}\r\n                            placeholder=\"Items per page...\"\r\n                            min=\"1\"\r\n                            className=\"itemsPerPageInput\"\r\n                        />\r\n                        */}\r\n                        <div className=\"paginationContainer\">\r\n                            {renderedButtons}\r\n                        </div>\r\n                    </div>\r\n                } />\r\n                {/* Добавляем маршрут к AdminConsole */}\r\n                <Route path=\"/admin\" element={<AdminConsole />} />\r\n                {/* Другие маршруты, если необходимо */}\r\n            </Routes>\r\n        </div>\r\n    );\r\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}