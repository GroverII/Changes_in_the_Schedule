{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { getFileType, getSourcesList, url, getFileDisplay } from './adminToServer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [serverFiles, setServerFiles] = useState([]);\n  const [sourcesList, setSourcesList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url + 'getAllSources');\n        if (!response.ok) {\n          throw new Error('Failed to fetch sources');\n        }\n        const data = await response.json();\n        const filesWithMetadata = data.files.map((file, index) => ({\n          id: index,\n          type: getFileType(file),\n          file\n        }));\n        setServerFiles(filesWithMetadata);\n      } catch (error) {\n        console.error('Error fetching sources:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchSourcesList = async () => {\n      try {\n        const response = await getSourcesList('links.txt');\n        const sources = response.sourcesList;\n        setSourcesList(sources);\n      } catch (error) {\n        console.error('Error fetching sources list:', error);\n      }\n    };\n    fetchSourcesList();\n  }, []);\n  const handleDragEnd = result => {\n    if (!result.destination) return; // ���� �������������� ��������� ��� ������\n\n    const items = Array.from(serverFiles); // ������� ����� ������� serverFiles\n    const [reorderedItem] = items.splice(result.source.index, 1); // ������� ������������ ������� �� ��������� ������\n    items.splice(result.destination.index, 0, reorderedItem); // ��������� ������������ ������� � ����� �������\n    setServerFiles(items); // ��������� ��������� serverFiles � ����� �������� ���������\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Server Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"server-files\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"table\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: serverFiles.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"tr\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sources List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"sources-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"table\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sourcesList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"tr\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Test, \"NXEFk0nUZn3nmYrdzY/WA+B+hok=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","getFileType","getSourcesList","url","getFileDisplay","jsxDEV","_jsxDEV","Test","_s","serverFiles","setServerFiles","sourcesList","setSourcesList","fetchData","response","fetch","ok","Error","data","json","filesWithMetadata","files","map","file","index","id","type","error","console","fetchSourcesList","sources","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","onDragEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","droppableProps","ref","innerRef","item","draggableId","toString","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { getFileType, getSourcesList, url, getFileDisplay } from './adminToServer.js';\r\n\r\nconst Test = () => {\r\n    const [serverFiles, setServerFiles] = useState([]);\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(url + 'getAllSources');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch sources');\r\n                }\r\n                const data = await response.json();\r\n                const filesWithMetadata = data.files.map((file, index) => ({\r\n                    id: index,\r\n                    type: getFileType(file),\r\n                    file\r\n                }));\r\n                setServerFiles(filesWithMetadata);\r\n            } catch (error) {\r\n                console.error('Error fetching sources:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchSourcesList = async () => {\r\n            try {\r\n                const response = await getSourcesList('links.txt');\r\n                const sources = response.sourcesList;\r\n                setSourcesList(sources);\r\n            } catch (error) {\r\n                console.error('Error fetching sources list:', error);\r\n            }\r\n        };\r\n\r\n        fetchSourcesList();\r\n    }, []);\r\n\r\n\r\n    const handleDragEnd = (result) => {\r\n        if (!result.destination) return; // ���� �������������� ��������� ��� ������\r\n\r\n        const items = Array.from(serverFiles); // ������� ����� ������� serverFiles\r\n        const [reorderedItem] = items.splice(result.source.index, 1); // ������� ������������ ������� �� ��������� ������\r\n        items.splice(result.destination.index, 0, reorderedItem); // ��������� ������������ ������� � ����� �������\r\n        setServerFiles(items); // ��������� ��������� serverFiles � ����� �������� ���������\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <div>\r\n                <h2>Server Files</h2>\r\n                <Droppable droppableId=\"server-files\">\r\n                    {(provided) => (\r\n                        <table {...provided.droppableProps} ref={provided.innerRef}>\r\n                            <thead>\r\n                                {/* ��������� ������� ����� */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {serverFiles.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\r\n                                        {(provided) => (\r\n                                            <tr\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                {/* ���������� ������ ������� ����� */}\r\n                                            </tr>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </Droppable>\r\n\r\n                <h2>Sources List</h2>\r\n                <Droppable droppableId=\"sources-list\">\r\n                    {(provided) => (\r\n                        <table {...provided.droppableProps} ref={provided.innerRef}>\r\n                            <thead>\r\n                                {/* ��������� ������� ����� */}\r\n                            </thead>\r\n                            <tbody>\r\n                                {sourcesList.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\r\n                                        {(provided) => (\r\n                                            <tr\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                {/* ���������� ������ ������� ����� */}\r\n                                            </tr>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}