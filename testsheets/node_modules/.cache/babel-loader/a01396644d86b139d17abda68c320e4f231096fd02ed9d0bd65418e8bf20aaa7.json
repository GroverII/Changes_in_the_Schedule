{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getSourcesList, url, getFileType } from './adminToServer.js'; // ���������� ������� getSourcesList\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grid = 10;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? \"#77e2e0\" : \"#33c9c7\",\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"#a1ffc5\" : \"#daffff\",\n  padding: grid,\n  width: 250\n});\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourcesList: [],\n      serverFiles: []\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n  async componentDidMount() {\n    try {\n      const sourcesList = await getSourcesList('links.txt'); // ���������� ������� getSourcesList\n      const response = await fetch(url + 'getAllSources');\n      if (!response.ok) {\n        throw new Error('Failed to fetch sources');\n      }\n      const data = await response.json();\n      const filesWithIds = data.files.map((file, index) => ({\n        id: 'item-' + index,\n        type: getFileType(file),\n        file: file\n      }));\n      const sourcesWithIds = sourcesList.sourcesList.map((source, index) => ({\n        id: 'item-' + index,\n        type: source.type,\n        // ��������������, ��� ��� ��� ���� � ������� ��������� ������\n        file: source.file // ��������������, ��� ���� ��� ���� � ������� ��������� ������\n      }));\n      this.setState({\n        sourcesList: sourcesWithIds,\n        // ��������� ��������� ����������\n        serverFiles: filesWithIds\n      });\n      console.log(sourcesList.sourcesList, filesWithIds);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  onDragEnd(result) {\n    // ������ ����������� ���������...\n  }\n  render() {\n    const {\n      sourcesList,\n      serverFiles\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable1\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [sourcesList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable2\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [serverFiles.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: (item.id || '').toString(),\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this)\n            }, item.id !== undefined ? item.id.toString() : index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Test;","map":{"version":3,"names":["React","Component","DragDropContext","Droppable","Draggable","getSourcesList","url","getFileType","jsxDEV","_jsxDEV","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","Test","constructor","props","state","sourcesList","serverFiles","onDragEnd","bind","componentDidMount","response","fetch","ok","Error","data","json","filesWithIds","files","map","file","index","id","type","sourcesWithIds","source","setState","console","log","error","result","render","children","style","display","droppableId","provided","snapshot","ref","innerRef","item","draggableId","draggableProps","dragHandleProps","content","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","toString","undefined"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { getSourcesList, url, getFileType } from './adminToServer.js'; // ���������� ������� getSourcesList\r\n\r\nconst grid = 10;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    background: isDragging ? \"#77e2e0\" : \"#33c9c7\",\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? \"#a1ffc5\" : \"#daffff\",\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sourcesList: [],\r\n            serverFiles: []\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const sourcesList = await getSourcesList('links.txt'); // ���������� ������� getSourcesList\r\n            const response = await fetch(url + 'getAllSources');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch sources');\r\n            }\r\n            const data = await response.json();\r\n            const filesWithIds = data.files.map((file, index) => ({\r\n                id: 'item-' + index,\r\n                type: getFileType(file),\r\n                file: file\r\n            }));\r\n\r\n            const sourcesWithIds = sourcesList.sourcesList.map((source, index) => ({\r\n                id: 'item-' + index,\r\n                type: source.type, // ��������������, ��� ��� ��� ���� � ������� ��������� ������\r\n                file: source.file // ��������������, ��� ���� ��� ���� � ������� ��������� ������\r\n            }));\r\n\r\n\r\n            this.setState({\r\n                sourcesList: sourcesWithIds, // ��������� ��������� ����������\r\n                serverFiles: filesWithIds\r\n            });\r\n            console.log(sourcesList.sourcesList, filesWithIds);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        // ������ ����������� ���������...\r\n    }\r\n\r\n    render() {\r\n        const { sourcesList, serverFiles } = this.state;\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Droppable droppableId=\"droppable1\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {sourcesList.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    <Droppable droppableId=\"droppable2\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {serverFiles.map((item, index) => (\r\n                                    <Draggable key={item.id !== undefined ? item.id.toString() : index} draggableId={(item.id || '').toString()} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}