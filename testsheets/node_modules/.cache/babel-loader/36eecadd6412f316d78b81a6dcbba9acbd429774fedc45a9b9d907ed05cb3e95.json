{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// Create data for list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getItems = count => Array.from({\n  length: count\n}, (v, k) => k).map(k => ({\n  id: `task-${k}`,\n  content: `Task ${k}`\n}));\n\n// Reorder the list items\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\nconst grid = 10;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  background: isDragging ? \"#77e2e0\" : \"#33c9c7\",\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"#a1ffc5\" : \"#daffff\",\n  padding: grid,\n  width: 250\n});\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items1: getItems(5),\n      items2: []\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n  onDragEnd(result) {\n    // if item dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const {\n      source,\n      destination\n    } = result;\n    const sourceList = source.droppableId === 'droppable1' ? 'items1' : 'items2';\n    const destinationList = destination.droppableId === 'droppable1' ? 'items1' : 'items2';\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(this.state[sourceList], source.index, destination.index);\n      this.setState({\n        [sourceList]: items\n      });\n    } else {\n      const sourceItems = [...this.state[sourceList]];\n      const destinationItems = [...this.state[destinationList]];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destinationItems.splice(destination.index, 0, removed);\n      this.setState({\n        [sourceList]: sourceItems,\n        [destinationList]: destinationItems\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable1\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [this.state.items1.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable2\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [this.state.items2.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Test;","map":{"version":3,"names":["React","Component","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","getItems","count","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","removed","splice","grid","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","background","getListStyle","isDraggingOver","width","Test","constructor","props","state","items1","items2","onDragEnd","bind","destination","source","sourceList","droppableId","destinationList","items","index","setState","sourceItems","destinationItems","render","children","style","display","provided","snapshot","ref","innerRef","item","draggableId","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","placeholder"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// Create data for list\r\nconst getItems = count =>\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n        id: `task-${k}`,\r\n        content: `Task ${k}`\r\n    }));\r\n\r\n// Reorder the list items\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 10;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    background: isDragging ? \"#77e2e0\" : \"#33c9c7\",\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? \"#a1ffc5\" : \"#daffff\",\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items1: getItems(5),\r\n            items2: []\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    onDragEnd(result) {\r\n        // if item dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const { source, destination } = result;\r\n        const sourceList = source.droppableId === 'droppable1' ? 'items1' : 'items2';\r\n        const destinationList = destination.droppableId === 'droppable1' ? 'items1' : 'items2';\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                this.state[sourceList],\r\n                source.index,\r\n                destination.index\r\n            );\r\n\r\n            this.setState({\r\n                [sourceList]: items\r\n            });\r\n        } else {\r\n            const sourceItems = [...this.state[sourceList]];\r\n            const destinationItems = [...this.state[destinationList]];\r\n\r\n            const [removed] = sourceItems.splice(source.index, 1);\r\n            destinationItems.splice(destination.index, 0, removed);\r\n\r\n            this.setState({\r\n                [sourceList]: sourceItems,\r\n                [destinationList]: destinationItems\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Droppable droppableId=\"droppable1\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {this.state.items1.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    <Droppable droppableId=\"droppable2\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {this.state.items2.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAClBC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAEH;AAAM,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAACC,GAAG,CAACD,CAAC,KAAK;EACjDE,EAAE,EAAG,QAAOF,CAAE,EAAC;EACfG,OAAO,EAAG,QAAOH,CAAE;AACvB,CAAC,CAAC,CAAC;;AAEP;AACA,MAAMI,OAAO,GAAGA,CAACC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EAC5C,MAAMC,MAAM,GAAGZ,KAAK,CAACC,IAAI,CAACQ,IAAI,CAAC;EAC/B,MAAM,CAACI,OAAO,CAAC,GAAGD,MAAM,CAACE,MAAM,CAACJ,UAAU,EAAE,CAAC,CAAC;EAC9CE,MAAM,CAACE,MAAM,CAACH,QAAQ,EAAE,CAAC,EAAEE,OAAO,CAAC;EAEnC,OAAOD,MAAM;AACjB,CAAC;AAED,MAAMG,IAAI,GAAG,EAAE;AAEf,MAAMC,YAAY,GAAGA,CAACC,UAAU,EAAEC,cAAc,MAAM;EAClDC,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAEL,IAAI,GAAG,CAAC;EACjBM,MAAM,EAAG,OAAMN,IAAK,MAAK;EACzBO,UAAU,EAAEL,UAAU,GAAG,SAAS,GAAG,SAAS;EAC9C,GAAGC;AACP,CAAC,CAAC;AAEF,MAAMK,YAAY,GAAGC,cAAc,KAAK;EACpCF,UAAU,EAAEE,cAAc,GAAG,SAAS,GAAG,SAAS;EAClDJ,OAAO,EAAEL,IAAI;EACbU,KAAK,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,IAAI,SAASlC,SAAS,CAAC;EACzBmC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAEhC,QAAQ,CAAC,CAAC,CAAC;MACnBiC,MAAM,EAAE;IACZ,CAAC;IACD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9C;EAEAD,SAASA,CAACpB,MAAM,EAAE;IACd;IACA,IAAI,CAACA,MAAM,CAACsB,WAAW,EAAE;MACrB;IACJ;IAEA,MAAM;MAAEC,MAAM;MAAED;IAAY,CAAC,GAAGtB,MAAM;IACtC,MAAMwB,UAAU,GAAGD,MAAM,CAACE,WAAW,KAAK,YAAY,GAAG,QAAQ,GAAG,QAAQ;IAC5E,MAAMC,eAAe,GAAGJ,WAAW,CAACG,WAAW,KAAK,YAAY,GAAG,QAAQ,GAAG,QAAQ;IAEtF,IAAIF,MAAM,CAACE,WAAW,KAAKH,WAAW,CAACG,WAAW,EAAE;MAChD,MAAME,KAAK,GAAG/B,OAAO,CACjB,IAAI,CAACqB,KAAK,CAACO,UAAU,CAAC,EACtBD,MAAM,CAACK,KAAK,EACZN,WAAW,CAACM,KAChB,CAAC;MAED,IAAI,CAACC,QAAQ,CAAC;QACV,CAACL,UAAU,GAAGG;MAClB,CAAC,CAAC;IACN,CAAC,MAAM;MACH,MAAMG,WAAW,GAAG,CAAC,GAAG,IAAI,CAACb,KAAK,CAACO,UAAU,CAAC,CAAC;MAC/C,MAAMO,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAACd,KAAK,CAACS,eAAe,CAAC,CAAC;MAEzD,MAAM,CAACzB,OAAO,CAAC,GAAG6B,WAAW,CAAC5B,MAAM,CAACqB,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;MACrDG,gBAAgB,CAAC7B,MAAM,CAACoB,WAAW,CAACM,KAAK,EAAE,CAAC,EAAE3B,OAAO,CAAC;MAEtD,IAAI,CAAC4B,QAAQ,CAAC;QACV,CAACL,UAAU,GAAGM,WAAW;QACzB,CAACJ,eAAe,GAAGK;MACvB,CAAC,CAAC;IACN;EACJ;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACI/C,OAAA,CAACJ,eAAe;MAACuC,SAAS,EAAE,IAAI,CAACA,SAAU;MAAAa,QAAA,eACvChD,OAAA;QAAKiD,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAF,QAAA,gBAC5BhD,OAAA,CAACH,SAAS;UAAC2C,WAAW,EAAC,YAAY;UAAAQ,QAAA,EAC9BA,CAACG,QAAQ,EAAEC,QAAQ,kBAChBpD,OAAA;YACIqD,GAAG,EAAEF,QAAQ,CAACG,QAAS;YACvBL,KAAK,EAAEvB,YAAY,CAAC0B,QAAQ,CAACzB,cAAc,CAAE;YAAAqB,QAAA,GAE5C,IAAI,CAAChB,KAAK,CAACC,MAAM,CAACzB,GAAG,CAAC,CAAC+C,IAAI,EAAEZ,KAAK,kBAC/B3C,OAAA,CAACF,SAAS;cAAe0D,WAAW,EAAED,IAAI,CAAC9C,EAAG;cAACkC,KAAK,EAAEA,KAAM;cAAAK,QAAA,EACvDA,CAACG,QAAQ,EAAEC,QAAQ,kBAChBpD,OAAA;gBACIqD,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACM,cAAc;gBAAA,GACvBN,QAAQ,CAACO,eAAe;gBAC5BT,KAAK,EAAE9B,YAAY,CACfiC,QAAQ,CAAChC,UAAU,EACnB+B,QAAQ,CAACM,cAAc,CAACR,KAC5B,CAAE;gBAAAD,QAAA,EAEDO,IAAI,CAAC7C;cAAO;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YACR,GAbWP,IAAI,CAAC9C,EAAE;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcZ,CACd,CAAC,EACDX,QAAQ,CAACY,WAAW;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACZ9D,OAAA,CAACH,SAAS;UAAC2C,WAAW,EAAC,YAAY;UAAAQ,QAAA,EAC9BA,CAACG,QAAQ,EAAEC,QAAQ,kBAChBpD,OAAA;YACIqD,GAAG,EAAEF,QAAQ,CAACG,QAAS;YACvBL,KAAK,EAAEvB,YAAY,CAAC0B,QAAQ,CAACzB,cAAc,CAAE;YAAAqB,QAAA,GAE5C,IAAI,CAAChB,KAAK,CAACE,MAAM,CAAC1B,GAAG,CAAC,CAAC+C,IAAI,EAAEZ,KAAK,kBAC/B3C,OAAA,CAACF,SAAS;cAAe0D,WAAW,EAAED,IAAI,CAAC9C,EAAG;cAACkC,KAAK,EAAEA,KAAM;cAAAK,QAAA,EACvDA,CAACG,QAAQ,EAAEC,QAAQ,kBAChBpD,OAAA;gBACIqD,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACM,cAAc;gBAAA,GACvBN,QAAQ,CAACO,eAAe;gBAC5BT,KAAK,EAAE9B,YAAY,CACfiC,QAAQ,CAAChC,UAAU,EACnB+B,QAAQ,CAACM,cAAc,CAACR,KAC5B,CAAE;gBAAAD,QAAA,EAEDO,IAAI,CAAC7C;cAAO;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YACR,GAbWP,IAAI,CAAC9C,EAAE;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcZ,CACd,CAAC,EACDX,QAAQ,CAACY,WAAW;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAE1B;AACJ;AAEA,eAAejC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}