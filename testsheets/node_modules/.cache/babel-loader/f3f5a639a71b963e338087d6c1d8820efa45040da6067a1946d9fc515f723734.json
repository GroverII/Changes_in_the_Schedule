{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport ReactPlayer from 'react-player';\nimport moment from 'moment-timezone';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginInfo, setLoginInfo] = useState('');\n  const [loggedInData, setLoggedInData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState('aizvietosanas');\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableColor, setTableColor] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const units = ['px', '%', 'vw', 'vh'];\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [sourcesList, setSourcesList] = useState([]);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [oldLogin, setOldLogin] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\n  const timeZones = moment.tz.names();\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\n  const [credentialFile, setCredentialFile] = useState(null);\n  const [columnNamesRange, setColumnNamesRange] = useState('');\n  const [dataRange, setDataRange] = useState('');\n  const reRef = useRef();\n  const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\n  const handleColumnNamesRangeChange = range => {\n    if (isValidRange(range)) setColumnNamesRange(range);else console.log(\"Invalid\");\n  };\n  const isValidCellCharacter = charCode => {\n    // Допустимыми символами являются заглавные латинские буквы\n    return charCode >= 65 && charCode <= 90; // A-Z\n  };\n  const isValidRange = range => {\n    // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\n    const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\n    if (!excelRangeRegex.test(range)) {\n      return false; // Неверный формат ренджа\n    }\n\n    // Разделить рендж на две ячейки: начальную и конечную\n    const [startCell, endCell] = range.split(':');\n\n    // Проверка корректности номеров столбцов\n    const columnRegex = /^[A-Za-z]+$/;\n    if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\n      return false; // Некорректное обозначение столбцов\n    }\n\n    // Проверка корректности номеров строк\n    const rowRegex = /^\\d+$/;\n    if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\n      return false; // Некорректное обозначение строк\n    }\n    return true; // Рендж соответствует формату Excel\n  };\n  const handleDataRangeChange = range => {\n    setDataRange(range);\n  };\n  const handleTimeZoneChange = async e => {\n    setSelectedTimeZone(e.target.value);\n    const updates = [{\n      key: 'TimeZone',\n      value: selectedTimeZone\n    }\n    // Другие обновления конфигурации, если есть\n    ];\n    try {\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      const data = await response.json();\n      console.log(data); // Вывод ответа от сервера\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n  useEffect(() => {\n    getAllFolders();\n  }, []);\n  const getAllFolders = async () => {\n    try {\n      const response = await fetch(url + 'getAllFiles');\n      const data = await response.json();\n      setFolders(data.files);\n    } catch (error) {\n      console.error('Error getting folders:', error);\n    }\n  };\n  const handleAddFolder = async () => {\n    let fileName = prompt('Enter folder name:');\n    if (fileName) {\n      // Добавляем .txt, если расширение не указано\n      if (!fileName.includes('.')) {\n        fileName += '.txt';\n      }\n      try {\n        await fetch(url + 'addSourceFile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            fileName\n          })\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    }\n  };\n  const handleDeleteFolder = async fileName => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await fetch(url + `deleteSourceFile/${fileName}`, {\n          method: 'DELETE'\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteLink = async (type, fileName) => {\n    try {\n      const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('File deleted successfully');\n        // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\n        setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\n      } else {\n        console.error('Error deleting file:', response.statusText);\n        // Обработка ошибок удаления файла\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      // Обработка ошибок сетевого запроса\n    }\n  };\n  const handleFolderClick = async fileName => {\n    setSelectedFolder(fileName);\n    console.log('Getting sources list:', fileName);\n    try {\n      const response = await fetch(url + `getSourcesList/${fileName}`);\n      const data = await response.json();\n      setSourcesList(data.sourcesList);\n      console.log('Getted sources list:', data);\n    } catch (error) {\n      console.error('Error getting sources list:', error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    try {\n      // Получаем токен ReCAPTCHA\n      const token = await reRef.current.executeAsync();\n      reRef.current.reset();\n      // Отправляем данные на сервер для аутентификации\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: login,\n          password: password,\n          recaptchaToken: token\n        })\n      });\n\n      // Обрабатываем ответ сервера\n      if (response.ok) {\n        setIsLoggedIn(true);\n      } else {\n        // Обработка ошибки входа\n        console.error('Login failed');\n        setLoginInfo(response.statusText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginInfo(error);\n    }\n  };\n  const handleLoginChange = () => {\n    // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\n    if (oldLogin === '' || newLogin === '' || password === '') {\n      alert('Old login, new login, and new password are required.');\n      return;\n    }\n\n    // Отправка запроса на сервер для изменения логина и пароля\n    fetch(url + 'changelogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldLogin,\n        newLogin,\n        password: password\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Обработка успешного обновления логина и пароля\n        alert('Login updated successfully.');\n      } else {\n        // Обработка ошибки при обновлении логина и пароля\n        alert('Failed to update login.');\n      }\n    }).catch(error => {\n      // Обработка ошибки сети\n      console.error('Error updating login:', error);\n      alert('Network error. Failed to update login.');\n    });\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const response = await fetch(url + 'runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', response.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const jsonData = await response.json();\n      if (!jsonData.data.trim()) {\n        console.error('Empty response data received from the server.');\n        return;\n      }\n      console.log('Raw server response data:', jsonData.data);\n      let dataArray;\n      try {\n        dataArray = JSON.parse(jsonData.data);\n      } catch (parseError) {\n        console.error('Error parsing JSON data:', parseError);\n        return;\n      }\n      if (!Array.isArray(dataArray)) {\n        console.error('Data is not an array:', dataArray);\n        return;\n      }\n      console.log('Parsed server response data:', dataArray);\n      const ws = XLSX.utils.json_to_sheet(dataArray);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data.xlsx');\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChangeDebounced = debounce(newColor => {\n    setColor(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета\n  const handleColorChange = e => {\n    const newColor = e.target.value;\n    handleColorChangeDebounced(newColor);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const handleColorChange1Debounced = debounce(newColor => {\n    setColor1(newColor);\n  }, 300);\n\n  // Обработчик изменения цвета 2 с задержкой\n  const handleColorChange2Debounced = debounce(newColor => {\n    setColor2(newColor);\n  }, 300);\n\n  // Вспомогательная функция debounce\n  function debounce(func, timeout) {\n    let timer;\n    return function (...args) {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(this, args), timeout);\n    };\n  }\n\n  // Обработчик изменения цвета 1\n  const handleColorChange1 = e => {\n    const newColor = e.target.value;\n    handleColorChange1Debounced(newColor);\n  };\n\n  // Обработчик изменения цвета 2\n  const handleColorChange2 = e => {\n    const newColor = e.target.value;\n    handleColorChange2Debounced(newColor);\n  };\n  const applySingleColor = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color1,\n          color2,\n          angle\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    try {\n      const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          defaultGradient\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async () => {\n    try {\n      const headerStylesToSend = {\n        fontSize: headerStyles.fontSize,\n        fontFamily: headerStyles.fontFamily,\n        fontWeight: headerStyles.fontWeight,\n        color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\n        // Другие свойства, если есть\n      };\n      const cellStylesToSend = {\n        fontSize: cellStyles.fontSize,\n        fontFamily: cellStyles.fontFamily,\n        fontWeight: cellStyles.fontWeight,\n        color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\n        // Другие свойства, если есть\n      };\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          headerStyles: headerStylesToSend,\n          cellStyles: cellStylesToSend\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n  const handleHeaderFontSizeChange = (value, type) => {\n    if (value !== '') setHeaderStyles({\n      ...headerStyles,\n      fontSize: value + type\n    });\n  };\n  const handleCellFontSizeChange = (value, type) => {\n    if (value !== '') setCellStyles({\n      ...cellStyles,\n      fontSize: value + type\n    });\n  };\n  const handlePasswordChange = async () => {\n    // Проверка на совпадение нового пароля и его подтверждения\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirm password must match');\n      return;\n    }\n    try {\n      const response = await fetch(url + 'encryptpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword,\n          oldPassword: oldPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      // Очистка полей после успешного обновления пароля\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n\n      // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\n      alert('Password updated successfully');\n    } catch (error) {\n      console.error('Error updating password:', error.message);\n      // Действия в случае ошибки, например, показать сообщение об ошибке\n      alert('Failed to update password. Please try again later.');\n    }\n  };\n  const sortedTimeZones = timeZones.sort((a, b) => {\n    const offsetA = moment.tz(a).utcOffset();\n    const offsetB = moment.tz(b).utcOffset();\n    return offsetA - offsetB;\n  });\n  const isValidGoogleSheetsUrl = url => {\n    // Регулярное выражение для проверки валидности URL Google Sheets\n    const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\n\n    // Проверка URL с помощью регулярного выражения\n    return googleSheetsUrlRegex.test(url);\n  };\n  const handleSpreadsheetUrlChange = url => {\n    setSpreadsheetUrl(url);\n\n    // Проверка валидности URL Google Sheets\n    if (isValidGoogleSheetsUrl(url)) {\n      // URL валиден для Google Sheets - выполнить нужные действия\n      console.log('Valid Google Sheets URL');\n    } else {\n      // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\n      console.log('Invalid Google Sheets URL');\n    }\n  };\n  const handleCredentialFileChange = file => {\n    setCredentialFile(file);\n\n    // Чтение содержимого файла\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Проверка валидности содержимого файла credentials.json\n      if (isValidCredentialsFile(fileContent)) {\n        // Файл credentials.json валиден - выполнить нужные действия\n        console.log('Valid credentials.json file');\n      } else {\n        // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\n        console.log('Invalid credentials.json file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const isValidCredentialsFile = fileContent => {\n    // Преобразование содержимого файла в объект\n    let credentials;\n    try {\n      credentials = JSON.parse(fileContent);\n    } catch (error) {\n      console.error(\"Error parsing credentials.json:\", error);\n      return false;\n    }\n\n    // Проверка наличия обязательных полей\n    const requiredFields = [\"type\", \"project_id\", \"private_key_id\", \"private_key\", \"client_email\", \"client_id\", \"auth_uri\", \"token_uri\", \"auth_provider_x509_cert_url\", \"client_x509_cert_url\"];\n    for (const field of requiredFields) {\n      if (!credentials.hasOwnProperty(field)) {\n        console.error(`Missing required field in credentials.json: ${field}`);\n        return false;\n      }\n    }\n\n    // Проверка типа\n    if (credentials.type !== \"service_account\") {\n      console.error(`Invalid type in credentials.json: ${credentials.type}`);\n      return false;\n    }\n\n    // Проверка формата приватного ключа\n    const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\n    if (!privateKeyFormatRegex.test(credentials.private_key)) {\n      console.error(\"Invalid format for private key in credentials.json\");\n      return false;\n    }\n\n    // Дополнительные проверки, если необходимо\n\n    return true;\n  };\n  const handleSubmit = () => {\n    // Проверка диапазонов названий столбцов и данных\n    // Если все данные корректны, отправка на сервер\n  };\n  const getFolderName = folder => {\n    // Разделяем имя файла по точке\n    const parts = folder.split('.');\n    // Удаляем последнюю часть (расширение файла)\n    parts.pop();\n    // Соединяем оставшиеся части снова в строку\n    return parts.join('.');\n  };\n  const handleAddResource = () => {\n    const resourceType = prompt(\"Введите тип ресурса (foto, video, text, URL(foto), URL(video)): \");\n    const resourceName = prompt(\"Введите имя файла или URL: \");\n\n    // Вы можете здесь вызвать соответствующий API-эндпоинт для добавления ресурса на сервере,\n    // передавая тип ресурса и имя файла или URL.\n    // Например, с помощью fetch или axios.\n\n    // После успешного добавления ресурса, обновите состояние sourcesList,\n    // чтобы отобразить новый ресурс на странице.\n  };\n  const AddResourceForm = ({\n    handleAddResource\n  }) => {\n    _s();\n    const [resourceType, setResourceType] = useState(''); // Uzglabā izvēlēto resursa veidu\n\n    const handleTypeChange = event => {\n      setResourceType(event.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"resourceType\",\n        children: \"Izv\\u0113lieties resursa veidu:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"resourceType\",\n        value: resourceType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Izv\\u0113lieties veidu...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"foto\",\n          children: \"Foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"video\",\n          children: \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Teksts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"URL(foto)\",\n          children: \"URL Foto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"URL(video)\",\n          children: \"URL Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this), resourceType && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resourceName\",\n          children: \"Ievadiet faila nosaukumu vai URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"resourceName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddResource(resourceType),\n          children: \"Pievienot resursu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this);\n  };\n\n  //unused\n  _s(AddResourceForm, \"yxhYJPpwtICCxdi3vI5YxO1uSxw=\");\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Lietot\\u0101jv\\u0101rds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Parole:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: key,\n        size: \"invisible\",\n        ref: reRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: loginInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Ien\\u0101kt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 17\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'additional' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('additional'),\n          children: \"Papildus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 29\n        }, this), selectedOption === 'additional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spreadsheetUrl\",\n            children: \"Google Sheets URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spreadsheetUrl\",\n            placeholder: \"Enter Google Sheets URL\",\n            value: spreadsheetUrl,\n            onChange: e => handleSpreadsheetUrlChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: e => handleCredentialFileChange(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"columnNamesRange\",\n            children: \"Stabi\\u0146u nosaukumu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"columnNamesRange\",\n            placeholder: \"Enter column names range (e.g., B2:I2)\",\n            value: columnNamesRange,\n            onChange: e => handleColumnNamesRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataRange\",\n            children: \"Datu diapazons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dataRange\",\n            placeholder: \"Enter data range (e.g., B3:I)\",\n            value: dataRange,\n            onChange: e => handleDataRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: handleSubmit,\n            children: \"Saglab\\u0101t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 33\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"headerFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru galvenes stiliem\",\n                value: headerStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: headerStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontFamily\",\n                value: headerStyles.fontFamily,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"headerFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"headerFontWeight\",\n                value: headerStyles.fontWeight,\n                onChange: e => setHeaderStyles({\n                  ...headerStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1002,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Galvenes stili:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontSize\",\n                children: \"Fonta izm\\u0113rs:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cellFontSize\",\n                placeholder: \"Ievadi fonta izm\\u0113ru tabulas \\u0161\\u016Bn\\u0101m\",\n                value: cellStyles.fontSize.replace(/\\D/g, '') // Parāda tikai ciparus\n                ,\n                onChange: e => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: cellStyles.fontSize.replace(/\\d+/g, '') // Parāda tikai mērvienības\n                ,\n                onChange: e => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n                children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: unit,\n                  children: unit\n                }, unit, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontFamily\",\n                children: \"Fonta \\u0123imene:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontFamily\",\n                value: cellStyles.fontFamily,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontFamily: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta \\u0123imeni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 49\n                }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: font,\n                  children: font\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cellFontWeight\",\n                children: \"Fonta svars:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cellFontWeight\",\n                value: cellStyles.fontWeight,\n                onChange: e => setCellStyles({\n                  ...cellStyles,\n                  fontWeight: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Izv\\u0113lies fonta svaru\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1050,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"normal\",\n                  children: \"Norm\\u0101ls\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bold\",\n                  children: \"Trekns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tabulas kr\\u0101sa:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              id: \"tableColor\",\n              value: tableColor,\n              onChange: e => {\n                setHeaderStyles({\n                  ...headerStyles,\n                  color: e.target.value\n                });\n                setCellStyles({\n                  ...cellStyles,\n                  color: e.target.value\n                });\n                setTableColor(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyTableStyles,\n            children: \"Pielietot tabulas stilus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color,\n            onChange: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applySingleColor,\n            children: \"Pielietot vienu kr\\u0101su\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-settings-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color1,\n            onChange: handleColorChange1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"custom-color-input\",\n            value: color2,\n            onChange: handleColorChange2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: applyGradient,\n            children: \"Pielietot gradientu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-button\",\n            onClick: resetToDefaultGradient,\n            children: \"Atiestat\\u012Bt uz noklus\\u0113jumu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backgroundType\",\n            children: \"Fona veids:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"backgroundType\",\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '37vh',\n            left: '-10vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1181,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1182,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1183,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1185,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1186,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1191,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1192,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1193,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1194,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1195,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1199,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1200,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1204,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1210,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1211,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFolder,\n            children: \"Pievienot mapi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 33\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFolderClick(folder),\n              children: getFolderName(folder)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(folder),\n              children: \"Dz\\u0113st\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 41\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewWindow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Atv\\u0113rta mape: \", selectedFolder === \"\" ? 'neviena' : getFolderName(selectedFolder)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AddResourceForm, {\n            handleAddResource: handleAddResource\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 33\n          }, this), sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewItem\",\n            children: [source.type === 'text' &&\n            /*#__PURE__*/\n            // Показываем текстовый файл\n            _jsxDEV(\"a\", {\n              href: `${url}getSource/${source.file}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"previewItemLink\",\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 45\n            }, this), source.type.startsWith('URL') && (\n            // Показываем ресурс на основе URL\n            // Ресурс может быть изображением или видео\n            source.type === 'URL(foto)' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Attēls ${index}`,\n              className: \"previewImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 49\n            }, this) : source.type === 'URL(video)' ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: source.file,\n              width: \"100%\",\n              height: \"7.4vh\",\n              playing: true,\n              controls: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1246,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"K\\u013C\\u016Bda: Nepie\\u0146emta URL veida saite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 49\n            }, this)), source.type === 'foto' &&\n            /*#__PURE__*/\n            // Показываем изображение\n            _jsxDEV(\"img\", {\n              src: url + `getSource/${source.file}`,\n              alt: `Attēls ${index}`,\n              className: \"previewImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 45\n            }, this), source.type === 'video' &&\n            /*#__PURE__*/\n            // Показываем видео\n            _jsxDEV(\"video\", {\n              src: url + `getSource/${source.file}`,\n              controls: true,\n              className: \"previewVideo\",\n              autoPlay: true,\n              loop: true,\n              muted: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 45\n            }, this), source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: url + `getSource/${source.file}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: source.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteLink(source.type, source.file),\n                children: \"Dz\\u0113st\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1274,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeZoneSelect\",\n          children: \"Izv\\u0113lieties laika joslu:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeZoneSelect\",\n          value: selectedTimeZone,\n          onChange: handleTimeZoneChange,\n          children: sortedTimeZones.map(timeZone => {\n            const offsetMinutes = moment.tz(timeZone).utcOffset();\n            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\n            const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\n            const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\n            const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: timeZone,\n              children: [\"(UTC \", offsetString, \") \", region, \", \", city]\n            }, timeZone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Vecais parole\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1303,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Jaun\\u0101 parole\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Apstipriniet jauno paroli\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Atjaunot paroli\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Vecais lietot\\u0101jv\\u0101rds\",\n          value: oldLogin,\n          onChange: e => setOldLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1324,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Jaunais lietot\\u0101jv\\u0101rds\",\n          value: newLogin,\n          onChange: e => setNewLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginChange,\n          children: \"Atjaunot lietot\\u0101jv\\u0101rdu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1336,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 821,\n    columnNumber: 9\n  }, this);\n};\n_s2(AdminConsole, \"WoFaKK8TG8EAhSVNtID1ExhMzN0=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ReCAPTCHA","ReactPlayer","moment","ReactAnglePicker","XLSX","jsxDEV","_jsxDEV","AdminConsole","_s2","_s","$RefreshSig$","login","setLogin","password","setPassword","loginInfo","setLoginInfo","loggedInData","setLoggedInData","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableColor","setTableColor","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","units","folders","setFolders","selectedFolder","setSelectedFolder","sourcesList","setSourcesList","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","oldLogin","setOldLogin","newLogin","setNewLogin","selectedTimeZone","setSelectedTimeZone","timeZones","tz","names","spreadsheetUrl","setSpreadsheetUrl","credentialFile","setCredentialFile","columnNamesRange","setColumnNamesRange","dataRange","setDataRange","reRef","key","handleColumnNamesRangeChange","range","isValidRange","console","log","isValidCellCharacter","charCode","excelRangeRegex","test","startCell","endCell","split","columnRegex","match","rowRegex","handleDataRangeChange","handleTimeZoneChange","e","target","value","updates","response","fetch","method","headers","body","JSON","stringify","data","json","error","getAllFolders","files","handleAddFolder","fileName","prompt","includes","handleDeleteFolder","window","confirm","handleDeleteLink","type","ok","prevList","filter","item","statusText","handleFolderClick","handleTabClick","tab","handleLogin","token","current","executeAsync","reset","recaptchaToken","handleLoginChange","alert","then","catch","handleRunCSharpScript","status","Error","jsonData","trim","dataArray","parse","parseError","Array","isArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","getConfig","getCSharpScriptConfig","handleOptionChange","option","handleColorChangeDebounced","debounce","newColor","func","timeout","timer","args","clearTimeout","setTimeout","apply","handleColorChange","handleChange","handleColorChange1Debounced","handleColorChange2Debounced","handleColorChange1","handleColorChange2","applySingleColor","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","headerStylesToSend","cellStylesToSend","handleHeaderFontSizeChange","handleCellFontSizeChange","handlePasswordChange","message","sortedTimeZones","sort","a","b","offsetA","utcOffset","offsetB","isValidGoogleSheetsUrl","googleSheetsUrlRegex","handleSpreadsheetUrlChange","handleCredentialFileChange","file","reader","FileReader","onload","event","fileContent","result","isValidCredentialsFile","readAsText","credentials","requiredFields","field","hasOwnProperty","privateKeyFormatRegex","private_key","handleSubmit","getFolderName","folder","parts","pop","join","handleAddResource","resourceType","resourceName","AddResourceForm","setResourceType","handleTypeChange","children","htmlFor","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","handleLoadExcel","blob","workbook","read","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","length","formattedData","Object","keys","map","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","entries","updateResponses","forEach","updateResponse","success","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","className","sitekey","size","ref","placeholder","accept","replace","unit","font","index","onFinalChange","style","top","left","transform","background","border","source","href","rel","startsWith","src","alt","width","height","playing","controls","muted","autoPlay","loop","timeZone","offsetMinutes","offsetHours","Math","floor","abs","offsetMinutesPart","offsetString","toString","padStart","region","city","part","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ReactPlayer from 'react-player';\r\nimport moment from 'moment-timezone';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginInfo,setLoginInfo] = useState('');\r\n    const [loggedInData, setLoggedInData] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState('aizvietosanas');\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n    const units = ['px', '%', 'vw', 'vh'];\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolder, setSelectedFolder] = useState('');\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [oldLogin, setOldLogin] = useState('');\r\n    const [newLogin, setNewLogin] = useState('');\r\n    const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\r\n    const timeZones = moment.tz.names();\r\n    const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\r\n    const [credentialFile, setCredentialFile] = useState(null);\r\n    const [columnNamesRange, setColumnNamesRange] = useState('');\r\n    const [dataRange, setDataRange] = useState('');\r\n    const reRef = useRef();\r\n    const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\r\n\r\n    const handleColumnNamesRangeChange = (range) => {\r\n        if (isValidRange(range))\r\n            setColumnNamesRange(range);\r\n        else\r\n            console.log(\"Invalid\");\r\n    };\r\n\r\n    const isValidCellCharacter = (charCode) => {\r\n        // Допустимыми символами являются заглавные латинские буквы\r\n        return (charCode >= 65 && charCode <= 90); // A-Z\r\n    };\r\n\r\n    const isValidRange = (range) => {\r\n        // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\r\n        const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\r\n        if (!excelRangeRegex.test(range)) {\r\n            return false; // Неверный формат ренджа\r\n        }\r\n\r\n        // Разделить рендж на две ячейки: начальную и конечную\r\n        const [startCell, endCell] = range.split(':');\r\n\r\n        // Проверка корректности номеров столбцов\r\n        const columnRegex = /^[A-Za-z]+$/;\r\n        if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\r\n            return false; // Некорректное обозначение столбцов\r\n        }\r\n\r\n        // Проверка корректности номеров строк\r\n        const rowRegex = /^\\d+$/;\r\n        if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\r\n            return false; // Некорректное обозначение строк\r\n        }\r\n\r\n        return true; // Рендж соответствует формату Excel\r\n    };\r\n\r\n    const handleDataRangeChange = (range) => {\r\n        setDataRange(range);\r\n    };\r\n\r\n    const handleTimeZoneChange = async (e) => {\r\n        setSelectedTimeZone(e.target.value);\r\n        const updates = [\r\n            { key: 'TimeZone', value: selectedTimeZone },\r\n            // Другие обновления конфигурации, если есть\r\n        ];\r\n\r\n        try {\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updates)\r\n            });\r\n            const data = await response.json();\r\n            console.log(data); // Вывод ответа от сервера\r\n        } catch (error) {\r\n            console.error('Error updating config:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAllFolders();\r\n    }, []);\r\n\r\n    const getAllFolders = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getAllFiles');\r\n            const data = await response.json();\r\n            setFolders(data.files);\r\n        } catch (error) {\r\n            console.error('Error getting folders:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddFolder = async () => {\r\n        let fileName = prompt('Enter folder name:');\r\n        if (fileName) {\r\n            // Добавляем .txt, если расширение не указано\r\n            if (!fileName.includes('.')) {\r\n                fileName += '.txt';\r\n            }\r\n\r\n            try {\r\n                await fetch(url + 'addSourceFile', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ fileName }),\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error adding folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (fileName) => {\r\n        if (window.confirm('Are you sure you want to delete this folder?')) {\r\n            try {\r\n                await fetch(url + `deleteSourceFile/${fileName}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error deleting folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteLink = async (type, fileName) => {\r\n        try {\r\n            const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('File deleted successfully');\r\n                // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\r\n                setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\r\n            } else {\r\n                console.error('Error deleting file:', response.statusText);\r\n                // Обработка ошибок удаления файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            // Обработка ошибок сетевого запроса\r\n        }\r\n    };\r\n\r\n\r\n    const handleFolderClick = async (fileName) => {\r\n        setSelectedFolder(fileName);\r\n        console.log('Getting sources list:', fileName);\r\n        try {\r\n            const response = await fetch(url + `getSourcesList/${fileName}`);\r\n            const data = await response.json();\r\n            setSourcesList(data.sourcesList);\r\n            console.log('Getted sources list:', data);\r\n        } catch (error) {\r\n            console.error('Error getting sources list:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Получаем токен ReCAPTCHA\r\n            const token = await reRef.current.executeAsync();\r\n            reRef.current.reset();\r\n            // Отправляем данные на сервер для аутентификации\r\n            const response = await fetch('http://localhost:3001/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    login: login,\r\n                    password: password,\r\n                    recaptchaToken: token\r\n                }),\r\n            });\r\n\r\n            // Обрабатываем ответ сервера\r\n            if (response.ok) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                // Обработка ошибки входа\r\n                console.error('Login failed');\r\n                setLoginInfo(response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setLoginInfo(error);\r\n        }\r\n    };\r\n\r\n    const handleLoginChange = () => {\r\n        // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\r\n        if (oldLogin === '' || newLogin === '' || password === '') {\r\n            alert('Old login, new login, and new password are required.');\r\n            return;\r\n        }\r\n\r\n        // Отправка запроса на сервер для изменения логина и пароля\r\n        fetch(url + 'changelogin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ oldLogin, newLogin, password: password }),\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    // Обработка успешного обновления логина и пароля\r\n                    alert('Login updated successfully.');\r\n                } else {\r\n                    // Обработка ошибки при обновлении логина и пароля\r\n                    alert('Failed to update login.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки сети\r\n                console.error('Error updating login:', error);\r\n                alert('Network error. Failed to update login.');\r\n            });\r\n    };\r\n\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const response = await fetch(url + 'runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', response.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const jsonData = await response.json();\r\n\r\n            if (!jsonData.data.trim()) {\r\n                console.error('Empty response data received from the server.');\r\n                return;\r\n            }\r\n\r\n            console.log('Raw server response data:', jsonData.data);\r\n\r\n            let dataArray;\r\n\r\n            try {\r\n                dataArray = JSON.parse(jsonData.data);\r\n            } catch (parseError) {\r\n                console.error('Error parsing JSON data:', parseError);\r\n                return;\r\n            }\r\n\r\n            if (!Array.isArray(dataArray)) {\r\n                console.error('Data is not an array:', dataArray);\r\n                return;\r\n            }\r\n\r\n            console.log('Parsed server response data:', dataArray);\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArray);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChangeDebounced = debounce((newColor) => {\r\n        setColor(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета\r\n    const handleColorChange = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChangeDebounced(newColor);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const handleColorChange1Debounced = debounce((newColor) => {\r\n        setColor1(newColor);\r\n    }, 300);\r\n\r\n    // Обработчик изменения цвета 2 с задержкой\r\n    const handleColorChange2Debounced = debounce((newColor) => {\r\n        setColor2(newColor);\r\n    }, 300);\r\n\r\n    // Вспомогательная функция debounce\r\n    function debounce(func, timeout) {\r\n        let timer;\r\n        return function (...args) {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => func.apply(this, args), timeout);\r\n        };\r\n    }\r\n\r\n    // Обработчик изменения цвета 1\r\n    const handleColorChange1 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange1Debounced(newColor);\r\n    };\r\n\r\n    // Обработчик изменения цвета 2\r\n    const handleColorChange2 = (e) => {\r\n        const newColor = e.target.value;\r\n        handleColorChange2Debounced(newColor);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color1, color2, angle })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        try {\r\n            const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ defaultGradient })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async () => {\r\n        try {\r\n            const headerStylesToSend = {\r\n                fontSize: headerStyles.fontSize,\r\n                fontFamily: headerStyles.fontFamily,\r\n                fontWeight: headerStyles.fontWeight,\r\n                color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const cellStylesToSend = {\r\n                fontSize: cellStyles.fontSize,\r\n                fontFamily: cellStyles.fontFamily,\r\n                fontWeight: cellStyles.fontWeight,\r\n                color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ headerStyles: headerStylesToSend, cellStyles: cellStylesToSend })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleHeaderFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setHeaderStyles({ ...headerStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handleCellFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setCellStyles({ ...cellStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handlePasswordChange = async () => {\r\n        // Проверка на совпадение нового пароля и его подтверждения\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirm password must match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url + 'encryptpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: newPassword,\r\n                    oldPassword: oldPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update password');\r\n            }\r\n\r\n            // Очистка полей после успешного обновления пароля\r\n            setOldPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n\r\n            // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\r\n            alert('Password updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating password:', error.message);\r\n            // Действия в случае ошибки, например, показать сообщение об ошибке\r\n            alert('Failed to update password. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const sortedTimeZones = timeZones.sort((a, b) => {\r\n        const offsetA = moment.tz(a).utcOffset();\r\n        const offsetB = moment.tz(b).utcOffset();\r\n        return offsetA - offsetB;\r\n    });\r\n\r\n    const isValidGoogleSheetsUrl = (url) => {\r\n        // Регулярное выражение для проверки валидности URL Google Sheets\r\n        const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\r\n\r\n        // Проверка URL с помощью регулярного выражения\r\n        return googleSheetsUrlRegex.test(url);\r\n    };\r\n\r\n    const handleSpreadsheetUrlChange = (url) => {\r\n        setSpreadsheetUrl(url);\r\n\r\n        // Проверка валидности URL Google Sheets\r\n        if (isValidGoogleSheetsUrl(url)) {\r\n            // URL валиден для Google Sheets - выполнить нужные действия\r\n            console.log('Valid Google Sheets URL');\r\n        } else {\r\n            // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\r\n            console.log('Invalid Google Sheets URL');\r\n        }\r\n    };\r\n\r\n    const handleCredentialFileChange = (file) => {\r\n        setCredentialFile(file);\r\n\r\n        // Чтение содержимого файла\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const fileContent = event.target.result;\r\n\r\n            // Проверка валидности содержимого файла credentials.json\r\n            if (isValidCredentialsFile(fileContent)) {\r\n                // Файл credentials.json валиден - выполнить нужные действия\r\n                console.log('Valid credentials.json file');\r\n            } else {\r\n                // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\r\n                console.log('Invalid credentials.json file');\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const isValidCredentialsFile = (fileContent) => {\r\n        // Преобразование содержимого файла в объект\r\n        let credentials;\r\n        try {\r\n            credentials = JSON.parse(fileContent);\r\n        } catch (error) {\r\n            console.error(\"Error parsing credentials.json:\", error);\r\n            return false;\r\n        }\r\n\r\n        // Проверка наличия обязательных полей\r\n        const requiredFields = [\r\n            \"type\",\r\n            \"project_id\",\r\n            \"private_key_id\",\r\n            \"private_key\",\r\n            \"client_email\",\r\n            \"client_id\",\r\n            \"auth_uri\",\r\n            \"token_uri\",\r\n            \"auth_provider_x509_cert_url\",\r\n            \"client_x509_cert_url\"\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!credentials.hasOwnProperty(field)) {\r\n                console.error(`Missing required field in credentials.json: ${field}`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Проверка типа\r\n        if (credentials.type !== \"service_account\") {\r\n            console.error(`Invalid type in credentials.json: ${credentials.type}`);\r\n            return false;\r\n        }\r\n\r\n        // Проверка формата приватного ключа\r\n        const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\r\n        if (!privateKeyFormatRegex.test(credentials.private_key)) {\r\n            console.error(\"Invalid format for private key in credentials.json\");\r\n            return false;\r\n        }\r\n\r\n        // Дополнительные проверки, если необходимо\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Проверка диапазонов названий столбцов и данных\r\n        // Если все данные корректны, отправка на сервер\r\n    };\r\n\r\n    const getFolderName = (folder) => {\r\n        // Разделяем имя файла по точке\r\n        const parts = folder.split('.');\r\n        // Удаляем последнюю часть (расширение файла)\r\n        parts.pop();\r\n        // Соединяем оставшиеся части снова в строку\r\n        return parts.join('.');\r\n    };\r\n\r\n    const handleAddResource = () => {\r\n        const resourceType = prompt(\"Введите тип ресурса (foto, video, text, URL(foto), URL(video)): \");\r\n        const resourceName = prompt(\"Введите имя файла или URL: \");\r\n\r\n        // Вы можете здесь вызвать соответствующий API-эндпоинт для добавления ресурса на сервере,\r\n        // передавая тип ресурса и имя файла или URL.\r\n        // Например, с помощью fetch или axios.\r\n\r\n        // После успешного добавления ресурса, обновите состояние sourcesList,\r\n        // чтобы отобразить новый ресурс на странице.\r\n    };\r\n\r\n    const AddResourceForm = ({ handleAddResource }) => {\r\n        const [resourceType, setResourceType] = useState(''); // Uzglabā izvēlēto resursa veidu\r\n\r\n        const handleTypeChange = (event) => {\r\n            setResourceType(event.target.value);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"resourceType\">Izvēlieties resursa veidu:</label>\r\n                <select id=\"resourceType\" value={resourceType} onChange={handleTypeChange}>\r\n                    <option value=\"\">Izvēlieties veidu...</option>\r\n                    <option value=\"foto\">Foto</option>\r\n                    <option value=\"video\">Video</option>\r\n                    <option value=\"text\">Teksts</option>\r\n                    <option value=\"URL(foto)\">URL Foto</option>\r\n                    <option value=\"URL(video)\">URL Video</option>\r\n                </select>\r\n                {resourceType && (\r\n                    <div>\r\n                        <label htmlFor=\"resourceName\">Ievadiet faila nosaukumu vai URL:</label>\r\n                        <input type=\"text\" id=\"resourceName\" />\r\n                        <button onClick={() => handleAddResource(resourceType)}>Pievienot resursu</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <div className=\"admin-form\">\r\n                    <div>\r\n                        <label htmlFor=\"login\">Lietotājvārds:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"login\"\r\n                            value={login}\r\n                            onChange={(e) => setLogin(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Parole:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <ReCAPTCHA\r\n                        sitekey={key}\r\n                        size=\"invisible\"\r\n                        ref={reRef}\r\n                    />\r\n                    <div>\r\n                        <label>{loginInfo}</label>\r\n                    </div>\r\n                    <button onClick={handleLogin}>Ienākt</button>\r\n\r\n                </div>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'additional' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('additional')}\r\n                            >\r\n                                Papildus\r\n                            </button>\r\n                            {selectedOption === 'additional' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    <label htmlFor=\"spreadsheetUrl\">Google Sheets URL:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"spreadsheetUrl\"\r\n                                        placeholder=\"Enter Google Sheets URL\"\r\n                                        value={spreadsheetUrl}\r\n                                        onChange={(e) => handleSpreadsheetUrlChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если ссылка валидна */}\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={(e) => handleCredentialFileChange(e.target.files[0])}\r\n                                    />\r\n                                    {/* Возможность загрузить файл credentials.json */}\r\n                                    <br />\r\n                                    <label htmlFor=\"columnNamesRange\">Stabiņu nosaukumu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"columnNamesRange\"\r\n                                        placeholder=\"Enter column names range (e.g., B2:I2)\"\r\n                                        value={columnNamesRange}\r\n                                        onChange={(e) => handleColumnNamesRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если диапазон названий столбцов валиден */}\r\n                                    <br />\r\n                                    <label htmlFor=\"dataRange\">Datu diapazons:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"dataRange\"\r\n                                        placeholder=\"Enter data range (e.g., B3:I)\"\r\n                                        value={dataRange}\r\n                                        onChange={(e) => handleDataRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Кнопка для сохранения на сервере */}\r\n                                    <button className=\"apply-button\" onClick={handleSubmit}>Saglabāt</button>\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'tabula' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"headerFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru galvenes stiliem\"\r\n                                                value={headerStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={headerStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"headerFontFamily\"\r\n                                                value={headerStyles.fontFamily}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"headerFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"headerFontWeight\"\r\n                                                value={headerStyles.fontWeight}\r\n                                                onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                        {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Galvenes stili:</h4>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontSize\">Fonta izmērs:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"cellFontSize\"\r\n                                                placeholder=\"Ievadi fonta izmēru tabulas šūnām\"\r\n                                                value={cellStyles.fontSize.replace(/\\D/g, '')} // Parāda tikai ciparus\r\n                                                onChange={(e) => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))}\r\n                                            />\r\n                                            <select\r\n                                                value={cellStyles.fontSize.replace(/\\d+/g, '')} // Parāda tikai mērvienības\r\n                                                onChange={(e) => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                            >\r\n                                                {units.map(unit => (\r\n                                                    <option key={unit} value={unit}>{unit}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontFamily\">Fonta ģimene:</label>\r\n                                            <select\r\n                                                id=\"cellFontFamily\"\r\n                                                value={cellStyles.fontFamily}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta ģimeni</option>\r\n                                                {fontFamilies.map((font, index) => (\r\n                                                    <option key={index} value={font}>{font}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"setting\">\r\n                                            <label htmlFor=\"cellFontWeight\">Fonta svars:</label>\r\n                                            <select\r\n                                                id=\"cellFontWeight\"\r\n                                                value={cellStyles.fontWeight}\r\n                                                onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\">Izvēlies fonta svaru</option>\r\n                                                <option value=\"normal\">Normāls</option>\r\n                                                <option value=\"bold\">Trekns</option>\r\n                                                {/* Pievieno citas fonta svara opcijas šeit */}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"settings-group\">\r\n                                        <h4>Tabulas krāsa:</h4>\r\n                                        <input\r\n                                            type=\"color\"\r\n                                            id=\"tableColor\"\r\n                                            value={tableColor}\r\n                                            onChange={(e) => {\r\n                                                setHeaderStyles({ ...headerStyles, color: e.target.value });\r\n                                                setCellStyles({ ...cellStyles, color: e.target.value });\r\n                                                setTableColor(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <button className=\"apply-button\" onClick={applyTableStyles}>Pielietot tabulas stilus</button>\r\n\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color}\r\n                                        onChange={handleColorChange}\r\n                                    />\r\n                                    <button className=\"apply-button\" onClick={applySingleColor}>Pielietot vienu krāsu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div className=\"table-settings-container\">\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color1}\r\n                                        onChange={handleColorChange1}\r\n                                    />\r\n                                    <input\r\n                                        className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"custom-color-input\"\r\n                                        value={color2}\r\n                                        onChange={handleColorChange2}\r\n                                    />\r\n                                    <br />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}<br /><br />\r\n                                    <button className=\"apply-button\" onClick={applyGradient}>Pielietot gradientu</button>\r\n                                    <button className=\"apply-button\" onClick={resetToDefaultGradient}>Atiestatīt uz noklusējumu</button>\r\n                                    <br />\r\n                                    <label htmlFor=\"backgroundType\">Fona veids:</label>\r\n                                    <select\r\n                                        id=\"backgroundType\"\r\n                                        value={backgroundType}\r\n                                        onChange={(e) => setBackgroundType(e.target.value)}\r\n                                        className=\"custom-select\"\r\n                                    >\r\n                                        <option value=\"none\">None</option>\r\n                                        <option value=\"color\">Color</option>\r\n                                        <option value=\"gradient\">Gradient</option>\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '37vh', left: '-10vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead>\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            <div>\r\n                                <button onClick={handleAddFolder}>Pievienot mapi</button>\r\n                                {folders.map(folder => (\r\n                                    <div key={folder}>\r\n                                        <button onClick={() => handleFolderClick(folder)}>{getFolderName(folder)}</button>\r\n                                        <button onClick={() => handleDeleteFolder(folder)}>Dzēst</button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"previewWindow\">\r\n                                <h3>Atvērta mape: {selectedFolder === \"\" ? 'neviena' : getFolderName(selectedFolder)}</h3>\r\n                                <AddResourceForm handleAddResource={handleAddResource} />\r\n                                {sourcesList.map((source, index) => (\r\n                                    <div key={index} className=\"previewItem\">\r\n                                        {source.type === 'text' && (\r\n                                            // Показываем текстовый файл\r\n                                            <a href={`${url}getSource/${source.file}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"previewItemLink\">{source.file}</a>\r\n                                        )}\r\n\r\n                                        {source.type.startsWith('URL') && (\r\n                                            // Показываем ресурс на основе URL\r\n                                            // Ресурс может быть изображением или видео\r\n                                            source.type === 'URL(foto)' ? (\r\n                                                <img src={source.file} alt={`Attēls ${index}`} className=\"previewImage\" />\r\n                                            ) : source.type === 'URL(video)' ? (\r\n                                                    <ReactPlayer\r\n                                                        url={source.file}\r\n                                                        width=\"100%\"\r\n                                                        height=\"7.4vh\"\r\n                                                        playing\r\n                                                        controls\r\n                                                        muted\r\n                                                    />\r\n                                            ) : (\r\n                                                <div>Kļūda: Nepieņemta URL veida saite</div>\r\n                                            )\r\n                                        )}\r\n\r\n                                        {source.type === 'foto' && (\r\n                                            // Показываем изображение\r\n                                            <img src={url + `getSource/${source.file}`} alt={`Attēls ${index}`} className=\"previewImage\" />\r\n                                        )}\r\n\r\n                                        {source.type === 'video' && (\r\n                                            // Показываем видео\r\n                                            <video src={url + `getSource/${source.file}`} controls className=\"previewVideo\" autoPlay loop muted />\r\n                                        )}\r\n\r\n                                        {source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && (\r\n                                            <div>{url + `getSource/${source.file}`}</div>\r\n                                        )}\r\n                                        <div>\r\n                                            <span>{source.file}</span>\r\n                                            <button onClick={() => handleDeleteLink(source.type, source.file)}>Dzēst</button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <label htmlFor=\"timeZoneSelect\">Izvēlieties laika joslu:</label>\r\n                            <select id=\"timeZoneSelect\" value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n                                {sortedTimeZones.map(timeZone => {\r\n                                    const offsetMinutes = moment.tz(timeZone).utcOffset();\r\n                                    const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\r\n                                    const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\r\n                                    const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\r\n                                    const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\r\n                                    return (\r\n                                        <option key={timeZone} value={timeZone}>\r\n                                            (UTC {offsetString}) {region}, {city}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n\r\n                            <br />\r\n                            {/* Поля ввода для обновления пароля */}\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Vecais parole\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Jaunā parole\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Apstipriniet jauno paroli\"\r\n                                value={confirmNewPassword}\r\n                                onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handlePasswordChange}>Atjaunot paroli</button>\r\n                            <br />\r\n                            {/* Поля ввода для обновления логина */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Vecais lietotājvārds\"\r\n                                value={oldLogin}\r\n                                onChange={(e) => setOldLogin(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Jaunais lietotājvārds\"\r\n                                value={newLogin}\r\n                                onChange={(e) => setNewLogin(e.target.value)}\r\n                            />\r\n                            <button onClick={handleLoginChange}>Atjaunot lietotājvārdu</button>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}