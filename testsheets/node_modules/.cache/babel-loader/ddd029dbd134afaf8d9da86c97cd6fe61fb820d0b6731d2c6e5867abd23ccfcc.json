{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport { getFilesInThisFolder, getAllFileFolders, renameFolder, addSourceFolder } from './adminToServer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFolderClick = async folderName => {\n      try {\n        const sourcesList = await getFilesInThisFolder(folderName);\n        this.setState({\n          sourcesList: sourcesList,\n          currentFolder: folderName\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    this.handleRenameFolder = async () => {\n      const {\n        currentFolder,\n        newFolderName\n      } = this.state;\n      try {\n        await renameFolder(currentFolder, newFolderName);\n        await this.loadData(); // ������������� ������ ����� �������������� �����\n        this.setState({\n          newFolderName: ''\n        }); // �������� ���� ������ �������� �����\n      } catch (error) {\n        console.error('Error renaming folder:', error);\n      }\n    };\n    this.handleAddFolder = async () => {\n      const {\n        newFolderName\n      } = this.state;\n      try {\n        await addSourceFolder(newFolderName);\n        await this.loadData(); // ������������� ������ ����� ���������� �����\n        this.setState({\n          newFolderName: ''\n        }); // �������� ���� ������ �������� �����\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    };\n    this.handleInputChange = event => {\n      this.setState({\n        newFolderName: event.target.value\n      });\n    };\n    this.state = {\n      sourcesList: [],\n      currentFolder: 'links',\n      // ���������� �������� ����� 'links'\n      folders: [],\n      newFolderName: ''\n    };\n  }\n  async componentDidMount() {\n    await this.loadData();\n  }\n  async loadData() {\n    try {\n      const sourcesList = await getFilesInThisFolder(this.state.currentFolder);\n      const folders = await getAllFileFolders();\n      this.setState({\n        sourcesList: sourcesList,\n        folders: folders\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  render() {\n    const {\n      sourcesList,\n      folders,\n      newFolderName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sources List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sourcesList && sourcesList.files && sourcesList.files.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.file\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Folder: \", this.state.currentFolder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"All Folders:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: folders && folders.map((folder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleFolderClick(folder),\n            children: folder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Rename Current Folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleRenameFolder,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Folder:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleAddFolder,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Test;","map":{"version":3,"names":["React","Component","getFilesInThisFolder","getAllFileFolders","renameFolder","addSourceFolder","jsxDEV","_jsxDEV","Test","constructor","props","handleFolderClick","folderName","sourcesList","setState","currentFolder","error","console","handleRenameFolder","newFolderName","state","loadData","handleAddFolder","handleInputChange","event","target","value","folders","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","files","map","item","index","file","folder","onClick","type","onChange"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { getFilesInThisFolder, getAllFileFolders, renameFolder, addSourceFolder } from './adminToServer.js';\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sourcesList: [],\r\n            currentFolder: 'links', // ���������� �������� ����� 'links'\r\n            folders: [],\r\n            newFolderName: ''\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const sourcesList = await getFilesInThisFolder(this.state.currentFolder);\r\n            const folders = await getAllFileFolders();\r\n            this.setState({\r\n                sourcesList: sourcesList,\r\n                folders: folders\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    handleFolderClick = async (folderName) => {\r\n        try {\r\n            const sourcesList = await getFilesInThisFolder(folderName);\r\n            this.setState({\r\n                sourcesList: sourcesList,\r\n                currentFolder: folderName\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    handleRenameFolder = async () => {\r\n        const { currentFolder, newFolderName } = this.state;\r\n        try {\r\n            await renameFolder(currentFolder, newFolderName);\r\n            await this.loadData(); // ������������� ������ ����� �������������� �����\r\n            this.setState({ newFolderName: '' }); // �������� ���� ������ �������� �����\r\n        } catch (error) {\r\n            console.error('Error renaming folder:', error);\r\n        }\r\n    }\r\n\r\n    handleAddFolder = async () => {\r\n        const { newFolderName } = this.state;\r\n        try {\r\n            await addSourceFolder(newFolderName);\r\n            await this.loadData(); // ������������� ������ ����� ���������� �����\r\n            this.setState({ newFolderName: '' }); // �������� ���� ������ �������� �����\r\n        } catch (error) {\r\n            console.error('Error adding folder:', error);\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({ newFolderName: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { sourcesList, folders, newFolderName } = this.state;\r\n        return (\r\n            <div>\r\n                <h2>Sources List:</h2>\r\n                <ul>\r\n                    {sourcesList && sourcesList.files && sourcesList.files.map((item, index) => (\r\n                        <li key={index}>{item.file}</li>\r\n                    ))}\r\n                </ul>\r\n                <h3>Current Folder: {this.state.currentFolder}</h3>\r\n                <h4>All Folders:</h4>\r\n                <ul>\r\n                    {folders && folders.map((folder, index) => (\r\n                        <li key={index}>\r\n                            <button onClick={() => this.handleFolderClick(folder)}>{folder}</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <div>\r\n                    <h4>Rename Current Folder:</h4>\r\n                    <input type=\"text\" value={newFolderName} onChange={this.handleInputChange} />\r\n                    <button onClick={this.handleRenameFolder}>Rename</button>\r\n                </div>\r\n                <div>\r\n                    <h4>Add New Folder:</h4>\r\n                    <input type=\"text\" value={newFolderName} onChange={this.handleInputChange} />\r\n                    <button onClick={this.handleAddFolder}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}