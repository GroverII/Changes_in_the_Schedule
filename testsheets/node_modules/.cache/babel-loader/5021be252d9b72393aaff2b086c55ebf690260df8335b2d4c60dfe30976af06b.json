{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport moment from 'moment-timezone';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginInfo, setLoginInfo] = useState('');\n  const [loggedInData, setLoggedInData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState(null);\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableColor, setTableColor] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: '',\n    color: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const units = ['px', '%', 'vw', 'vh'];\n  const [folders, setFolders] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [sourcesList, setSourcesList] = useState([]);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [oldLogin, setOldLogin] = useState('');\n  const [newLogin, setNewLogin] = useState('');\n  const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\n  const timeZones = moment.tz.names();\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\n  const [credentialFile, setCredentialFile] = useState(null);\n  const [columnNamesRange, setColumnNamesRange] = useState('');\n  const [dataRange, setDataRange] = useState('');\n  const reRef = useRef();\n  const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\n  const handleColumnNamesRangeChange = range => {\n    if (isValidRange(range)) setColumnNamesRange(range);else console.log(\"Invalid\");\n  };\n  const isValidCellCharacter = charCode => {\n    // Допустимыми символами являются заглавные латинские буквы\n    return charCode >= 65 && charCode <= 90; // A-Z\n  };\n  const isValidRange = range => {\n    // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\n    const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\n    if (!excelRangeRegex.test(range)) {\n      return false; // Неверный формат ренджа\n    }\n\n    // Разделить рендж на две ячейки: начальную и конечную\n    const [startCell, endCell] = range.split(':');\n\n    // Проверка корректности номеров столбцов\n    const columnRegex = /^[A-Za-z]+$/;\n    if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\n      return false; // Некорректное обозначение столбцов\n    }\n\n    // Проверка корректности номеров строк\n    const rowRegex = /^\\d+$/;\n    if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\n      return false; // Некорректное обозначение строк\n    }\n    return true; // Рендж соответствует формату Excel\n  };\n  const handleDataRangeChange = range => {\n    setDataRange(range);\n  };\n  const handleTimeZoneChange = async e => {\n    setSelectedTimeZone(e.target.value);\n    const updates = [{\n      key: 'TimeZone',\n      value: selectedTimeZone\n    }\n    // Другие обновления конфигурации, если есть\n    ];\n    try {\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      const data = await response.json();\n      console.log(data); // Вывод ответа от сервера\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  };\n  useEffect(() => {\n    getAllFolders();\n  }, []);\n  const getAllFolders = async () => {\n    try {\n      const response = await fetch(url + 'getAllFiles');\n      const data = await response.json();\n      setFolders(data.files);\n    } catch (error) {\n      console.error('Error getting folders:', error);\n    }\n  };\n  const handleAddFolder = async () => {\n    let fileName = prompt('Enter folder name:');\n    if (fileName) {\n      // Добавляем .txt, если расширение не указано\n      if (!fileName.includes('.')) {\n        fileName += '.txt';\n      }\n      try {\n        await fetch(url + 'addSourceFile', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            fileName\n          })\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error adding folder:', error);\n      }\n    }\n  };\n  const handleDeleteFolder = async fileName => {\n    if (window.confirm('Are you sure you want to delete this folder?')) {\n      try {\n        await fetch(url + `deleteSourceFile/${fileName}`, {\n          method: 'DELETE'\n        });\n        getAllFolders();\n      } catch (error) {\n        console.error('Error deleting folder:', error);\n      }\n    }\n  };\n  const handleDeleteLink = async (type, fileName) => {\n    try {\n      const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('File deleted successfully');\n        // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\n        setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\n      } else {\n        console.error('Error deleting file:', response.statusText);\n        // Обработка ошибок удаления файла\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      // Обработка ошибок сетевого запроса\n    }\n  };\n  const handleFolderClick = async fileName => {\n    setSelectedFolder(fileName);\n    console.log('Getting sources list:', fileName);\n    try {\n      const response = await fetch(url + `getSourcesList/${fileName}`);\n      const data = await response.json();\n      setSourcesList(data.sourcesList);\n      console.log('Getted sources list:', data);\n    } catch (error) {\n      console.error('Error getting sources list:', error);\n    }\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    try {\n      // Получаем токен ReCAPTCHA\n      const token = await reRef.current.executeAsync();\n      reRef.current.reset();\n      // Отправляем данные на сервер для аутентификации\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: login,\n          password: password,\n          recaptchaToken: token\n        })\n      });\n\n      // Обрабатываем ответ сервера\n      if (response.ok) {\n        setIsLoggedIn(true);\n      } else {\n        // Обработка ошибки входа\n        console.error('Login failed');\n        setLoginInfo(response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setLoginInfo(error);\n    }\n  };\n  const handleLoginChange = () => {\n    // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\n    if (oldLogin === '' || newLogin === '' || password === '') {\n      alert('Old login, new login, and new password are required.');\n      return;\n    }\n\n    // Отправка запроса на сервер для изменения логина и пароля\n    fetch(url + 'changelogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldLogin,\n        newLogin,\n        password: password\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Обработка успешного обновления логина и пароля\n        alert('Login updated successfully.');\n      } else {\n        // Обработка ошибки при обновлении логина и пароля\n        alert('Failed to update login.');\n      }\n    }).catch(error => {\n      // Обработка ошибки сети\n      console.error('Error updating login:', error);\n      alert('Network error. Failed to update login.');\n    });\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const response = await fetch(url + 'runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', response.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const jsonData = await response.json();\n      if (!jsonData.data.trim()) {\n        console.error('Empty response data received from the server.');\n        return;\n      }\n      console.log('Raw server response data:', jsonData.data);\n      let dataArray;\n      try {\n        dataArray = JSON.parse(jsonData.data);\n      } catch (parseError) {\n        console.error('Error parsing JSON data:', parseError);\n        return;\n      }\n      if (!Array.isArray(dataArray)) {\n        console.error('Data is not an array:', dataArray);\n        return;\n      }\n      console.log('Parsed server response data:', dataArray);\n      const ws = XLSX.utils.json_to_sheet(dataArray);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data.xlsx');\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChange = (color, setColor) => {\n    // Обработчик изменения цвета\n    setColor(color);\n\n    // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\n    setTimeout(() => {\n      document.activeElement.blur();\n    }, 0);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const applySingleColor = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    try {\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color1,\n          color2,\n          angle\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    try {\n      const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          defaultGradient\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async () => {\n    try {\n      const headerStylesToSend = {\n        fontSize: headerStyles.fontSize,\n        fontFamily: headerStyles.fontFamily,\n        fontWeight: headerStyles.fontWeight,\n        color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\n        // Другие свойства, если есть\n      };\n      const cellStylesToSend = {\n        fontSize: cellStyles.fontSize,\n        fontFamily: cellStyles.fontFamily,\n        fontWeight: cellStyles.fontWeight,\n        color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\n        // Другие свойства, если есть\n      };\n      const response = await fetch(url + 'updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          headerStyles: headerStylesToSend,\n          cellStyles: cellStylesToSend\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n  const handleHeaderFontSizeChange = (value, type) => {\n    if (value !== '') setHeaderStyles({\n      ...headerStyles,\n      fontSize: value + type\n    });\n  };\n  const handleCellFontSizeChange = (value, type) => {\n    if (value !== '') setCellStyles({\n      ...cellStyles,\n      fontSize: value + type\n    });\n  };\n  const handlePasswordChange = async () => {\n    // Проверка на совпадение нового пароля и его подтверждения\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirm password must match');\n      return;\n    }\n    try {\n      const response = await fetch(url + 'encryptpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: newPassword,\n          oldPassword: oldPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update password');\n      }\n\n      // Очистка полей после успешного обновления пароля\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmNewPassword('');\n\n      // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\n      alert('Password updated successfully');\n    } catch (error) {\n      console.error('Error updating password:', error.message);\n      // Действия в случае ошибки, например, показать сообщение об ошибке\n      alert('Failed to update password. Please try again later.');\n    }\n  };\n  const sortedTimeZones = timeZones.sort((a, b) => {\n    const offsetA = moment.tz(a).utcOffset();\n    const offsetB = moment.tz(b).utcOffset();\n    return offsetA - offsetB;\n  });\n  const isValidGoogleSheetsUrl = url => {\n    // Регулярное выражение для проверки валидности URL Google Sheets\n    const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\n\n    // Проверка URL с помощью регулярного выражения\n    return googleSheetsUrlRegex.test(url);\n  };\n  const handleSpreadsheetUrlChange = url => {\n    setSpreadsheetUrl(url);\n\n    // Проверка валидности URL Google Sheets\n    if (isValidGoogleSheetsUrl(url)) {\n      // URL валиден для Google Sheets - выполнить нужные действия\n      console.log('Valid Google Sheets URL');\n    } else {\n      // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\n      console.log('Invalid Google Sheets URL');\n    }\n  };\n  const handleCredentialFileChange = file => {\n    setCredentialFile(file);\n\n    // Чтение содержимого файла\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n\n      // Проверка валидности содержимого файла credentials.json\n      if (isValidCredentialsFile(fileContent)) {\n        // Файл credentials.json валиден - выполнить нужные действия\n        console.log('Valid credentials.json file');\n      } else {\n        // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\n        console.log('Invalid credentials.json file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const isValidCredentialsFile = fileContent => {\n    // Преобразование содержимого файла в объект\n    let credentials;\n    try {\n      credentials = JSON.parse(fileContent);\n    } catch (error) {\n      console.error(\"Error parsing credentials.json:\", error);\n      return false;\n    }\n\n    // Проверка наличия обязательных полей\n    const requiredFields = [\"type\", \"project_id\", \"private_key_id\", \"private_key\", \"client_email\", \"client_id\", \"auth_uri\", \"token_uri\", \"auth_provider_x509_cert_url\", \"client_x509_cert_url\"];\n    for (const field of requiredFields) {\n      if (!credentials.hasOwnProperty(field)) {\n        console.error(`Missing required field in credentials.json: ${field}`);\n        return false;\n      }\n    }\n\n    // Проверка типа\n    if (credentials.type !== \"service_account\") {\n      console.error(`Invalid type in credentials.json: ${credentials.type}`);\n      return false;\n    }\n\n    // Проверка формата приватного ключа\n    const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\n    if (!privateKeyFormatRegex.test(credentials.private_key)) {\n      console.error(\"Invalid format for private key in credentials.json\");\n      return false;\n    }\n\n    // Дополнительные проверки, если необходимо\n\n    return true;\n  };\n  const handleSubmit = () => {\n    // Проверка диапазонов названий столбцов и данных\n    // Если все данные корректны, отправка на сервер\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"Login:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n        sitekey: key,\n        size: \"invisible\",\n        ref: reRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: loginInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 17\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'additional' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('additional'),\n          children: \"Additional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 29\n        }, this), selectedOption === 'additional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spreadsheetUrl\",\n            children: \"Google Sheets URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spreadsheetUrl\",\n            placeholder: \"Enter Google Sheets URL\",\n            value: spreadsheetUrl,\n            onChange: e => handleSpreadsheetUrlChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: e => handleCredentialFileChange(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"columnNamesRange\",\n            children: \"Column Names Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"columnNamesRange\",\n            placeholder: \"Enter column names range (e.g., B2:I2)\",\n            value: columnNamesRange,\n            onChange: e => handleColumnNamesRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dataRange\",\n            children: \"Data Range:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dataRange\",\n            placeholder: \"Enter data range (e.g., B3:I)\",\n            value: dataRange,\n            onChange: e => handleDataRangeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 33\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Header Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"headerFontSize\",\n            placeholder: \"Enter font size for table header\",\n            value: headerStyles.fontSize.replace(/\\D/g, '') // Отображаем только цифры\n            ,\n            onChange: e => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: headerStyles.fontSize.replace(/\\d+/g, '') // Отображаем только единицы измерения\n            ,\n            onChange: e => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n            children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unit,\n              children: unit\n            }, unit, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontFamily\",\n            value: headerStyles.fontFamily,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontWeight\",\n            value: headerStyles.fontWeight,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cell Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cellFontSize\",\n            placeholder: \"Enter font size for table cells\",\n            value: cellStyles.fontSize.replace(/\\D/g, '') // Отображаем только цифры\n            ,\n            onChange: e => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: cellStyles.fontSize.replace(/\\d+/g, '') // Отображаем только единицы измерения\n            ,\n            onChange: e => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value),\n            children: units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: unit,\n              children: unit\n            }, unit, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontFamily\",\n            value: cellStyles.fontFamily,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontWeight\",\n            value: cellStyles.fontWeight,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tableColor\",\n            children: \"Table Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            id: \"tableColor\",\n            value: tableColor,\n            onChange: e => {\n              setHeaderStyles({\n                ...headerStyles,\n                color: e.target.value\n              });\n              setCellStyles({\n                ...cellStyles,\n                color: e.target.value\n              });\n              setTableColor(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyTableStyles,\n            children: \"Apply Table Styles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: e => handleColorChange(e.target.value, setColor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applySingleColor,\n            children: \"Apply Single Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: e => handleColorChange(e.target.value, setColor1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: e => handleColorChange(e.target.value, setColor2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyGradient,\n            children: \"Apply Gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Background Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '37vh',\n            left: '-10vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: headerStyles.fontFamily,\n                    fontWeight: headerStyles.fontWeight,\n                    fontStyle: headerStyles.fontStyle,\n                    textTransform: headerStyles.textTransform,\n                    color: headerStyles.color\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1036,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1050,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1051,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1054,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontFamily: cellStyles.fontFamily,\n                    fontWeight: cellStyles.fontWeight,\n                    fontStyle: cellStyles.fontStyle,\n                    textTransform: cellStyles.textTransform,\n                    color: cellStyles.color\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddFolder,\n            children: \"Add Folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 33\n          }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFolderClick(folder),\n              children: folder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteFolder(folder),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 41\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previewWindow\",\n          children: sourcesList.map((source, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewItem\",\n            children: [source.type === 'text' &&\n            /*#__PURE__*/\n            // Отображаем содержимое текстового файла, если тип файла - text\n            _jsxDEV(\"pre\", {\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 45\n            }, this), source.type.startsWith('URL') && (\n            // Отображаем соответствующий контент на основе URL\n            // Вместо этого можно использовать плееры для видео или изображений, как в предыдущем примере\n            // Этот код предполагает, что source.file содержит ссылку на изображение или видео\n            source.type === 'URL(foto)' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: source.file,\n              alt: `Image ${index}`,\n              className: \"previewImage\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 49\n            }, this) : source.type === 'URL(video)' ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: source.file,\n              controls: true,\n              className: \"previewVideo\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Error: Unsupported URL type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 49\n            }, this)), source.type === 'foto' &&\n            /*#__PURE__*/\n            // Отображаем изображение, если тип файла - foto\n            _jsxDEV(\"img\", {\n              src: url + `getSource/${source.file}`,\n              alt: `Image ${index}`,\n              className: \"previewImage\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 45\n            }, this), source.type === 'video' &&\n            /*#__PURE__*/\n            // Отображаем видео, если тип файла - video\n            _jsxDEV(\"video\", {\n              src: url + `getSource/${source.file}`,\n              controls: true,\n              className: \"previewVideo\",\n              style: {\n                width: '200px',\n                height: '150px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 45\n            }, this), source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' &&\n            /*#__PURE__*/\n            // Отображаем название файла, если он не текст, не URL, не foto и не video\n            _jsxDEV(\"div\", {\n              children: source.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: source.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteLink(source.type, source.file),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1110,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeZoneSelect\",\n          children: \"Select Time Zone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeZoneSelect\",\n          value: selectedTimeZone,\n          onChange: handleTimeZoneChange,\n          children: sortedTimeZones.map(timeZone => {\n            const offsetMinutes = moment.tz(timeZone).utcOffset();\n            const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\n            const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\n            const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\n            const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: timeZone,\n              children: [\"(UTC \", offsetString, \") \", region, \", \", city]\n            }, timeZone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1130,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Old Password\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordChange,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1158,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Old Login\",\n          value: oldLogin,\n          onChange: e => setOldLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Login\",\n          value: newLogin,\n          onChange: e => setNewLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoginChange,\n          children: \"Update Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 731,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"UN4Quoq86ZwzShe6JJZ07Uv3GAk=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ReCAPTCHA","moment","ReactAnglePicker","XLSX","jsxDEV","_jsxDEV","AdminConsole","_s","login","setLogin","password","setPassword","loginInfo","setLoginInfo","loggedInData","setLoggedInData","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableColor","setTableColor","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","units","folders","setFolders","selectedFolder","setSelectedFolder","sourcesList","setSourcesList","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","oldLogin","setOldLogin","newLogin","setNewLogin","selectedTimeZone","setSelectedTimeZone","timeZones","tz","names","spreadsheetUrl","setSpreadsheetUrl","credentialFile","setCredentialFile","columnNamesRange","setColumnNamesRange","dataRange","setDataRange","reRef","key","handleColumnNamesRangeChange","range","isValidRange","console","log","isValidCellCharacter","charCode","excelRangeRegex","test","startCell","endCell","split","columnRegex","match","rowRegex","handleDataRangeChange","handleTimeZoneChange","e","target","value","updates","response","fetch","method","headers","body","JSON","stringify","data","json","error","getAllFolders","files","handleAddFolder","fileName","prompt","includes","handleDeleteFolder","window","confirm","handleDeleteLink","type","ok","prevList","filter","item","statusText","handleFolderClick","handleTabClick","tab","handleLogin","token","current","executeAsync","reset","recaptchaToken","handleLoginChange","alert","then","catch","handleRunCSharpScript","status","Error","jsonData","trim","dataArray","parse","parseError","Array","isArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","getConfig","getCSharpScriptConfig","handleOptionChange","option","handleColorChange","setTimeout","document","activeElement","blur","handleChange","applySingleColor","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","headerStylesToSend","cellStylesToSend","handleHeaderFontSizeChange","handleCellFontSizeChange","handlePasswordChange","message","sortedTimeZones","sort","a","b","offsetA","utcOffset","offsetB","isValidGoogleSheetsUrl","googleSheetsUrlRegex","handleSpreadsheetUrlChange","handleCredentialFileChange","file","reader","FileReader","onload","event","fileContent","result","isValidCredentialsFile","readAsText","credentials","requiredFields","field","hasOwnProperty","privateKeyFormatRegex","private_key","handleSubmit","handleLoadExcel","blob","workbook","read","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","length","formattedData","Object","keys","map","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","entries","updateResponses","forEach","updateResponse","success","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","children","className","htmlFor","_jsxFileName","lineNumber","columnNumber","id","onChange","sitekey","size","ref","onClick","placeholder","accept","replace","unit","font","index","onFinalChange","style","top","left","transform","background","border","folder","source","startsWith","src","alt","width","height","controls","timeZone","offsetMinutes","offsetHours","Math","floor","abs","offsetMinutesPart","offsetString","toString","padStart","region","city","part","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport moment from 'moment-timezone';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginInfo,setLoginInfo] = useState('');\r\n    const [loggedInData, setLoggedInData] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState(null);\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: '',\r\n        color: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n    const units = ['px', '%', 'vw', 'vh'];\r\n    const [folders, setFolders] = useState([]);\r\n    const [selectedFolder, setSelectedFolder] = useState('');\r\n    const [sourcesList, setSourcesList] = useState([]);\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [oldLogin, setOldLogin] = useState('');\r\n    const [newLogin, setNewLogin] = useState('');\r\n    const [selectedTimeZone, setSelectedTimeZone] = useState('Europe/Riga'); // Установите часовой пояс по умолчанию\r\n    const timeZones = moment.tz.names();\r\n    const [spreadsheetUrl, setSpreadsheetUrl] = useState('');\r\n    const [credentialFile, setCredentialFile] = useState(null);\r\n    const [columnNamesRange, setColumnNamesRange] = useState('');\r\n    const [dataRange, setDataRange] = useState('');\r\n    const reRef = useRef();\r\n    const key = \"6LcPG6EpAAAAADbUuzfmtz2P_oTIvj6ydJ6F6zms\";\r\n\r\n    const handleColumnNamesRangeChange = (range) => {\r\n        if (isValidRange(range))\r\n            setColumnNamesRange(range);\r\n        else\r\n            console.log(\"Invalid\");\r\n    };\r\n\r\n    const isValidCellCharacter = (charCode) => {\r\n        // Допустимыми символами являются заглавные латинские буквы\r\n        return (charCode >= 65 && charCode <= 90); // A-Z\r\n    };\r\n\r\n    const isValidRange = (range) => {\r\n        // Регулярное выражение для проверки формата ренджа Excel (например, \"A1:B10\")\r\n        const excelRangeRegex = /^[A-Za-z]+\\d+:[A-Za-z]+\\d+$/;\r\n        if (!excelRangeRegex.test(range)) {\r\n            return false; // Неверный формат ренджа\r\n        }\r\n\r\n        // Разделить рендж на две ячейки: начальную и конечную\r\n        const [startCell, endCell] = range.split(':');\r\n\r\n        // Проверка корректности номеров столбцов\r\n        const columnRegex = /^[A-Za-z]+$/;\r\n        if (!columnRegex.test(startCell.match(/[A-Za-z]+/)[0]) || !columnRegex.test(endCell.match(/[A-Za-z]+/)[0])) {\r\n            return false; // Некорректное обозначение столбцов\r\n        }\r\n\r\n        // Проверка корректности номеров строк\r\n        const rowRegex = /^\\d+$/;\r\n        if (!rowRegex.test(startCell.match(/\\d+/)[0]) || !rowRegex.test(endCell.match(/\\d+/)[0])) {\r\n            return false; // Некорректное обозначение строк\r\n        }\r\n\r\n        return true; // Рендж соответствует формату Excel\r\n    };\r\n\r\n    const handleDataRangeChange = (range) => {\r\n        setDataRange(range);\r\n    };\r\n\r\n    const handleTimeZoneChange = async (e) => {\r\n        setSelectedTimeZone(e.target.value);\r\n        const updates = [\r\n            { key: 'TimeZone', value: selectedTimeZone },\r\n            // Другие обновления конфигурации, если есть\r\n        ];\r\n\r\n        try {\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(updates)\r\n            });\r\n            const data = await response.json();\r\n            console.log(data); // Вывод ответа от сервера\r\n        } catch (error) {\r\n            console.error('Error updating config:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAllFolders();\r\n    }, []);\r\n\r\n    const getAllFolders = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getAllFiles');\r\n            const data = await response.json();\r\n            setFolders(data.files);\r\n        } catch (error) {\r\n            console.error('Error getting folders:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddFolder = async () => {\r\n        let fileName = prompt('Enter folder name:');\r\n        if (fileName) {\r\n            // Добавляем .txt, если расширение не указано\r\n            if (!fileName.includes('.')) {\r\n                fileName += '.txt';\r\n            }\r\n\r\n            try {\r\n                await fetch(url + 'addSourceFile', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ fileName }),\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error adding folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteFolder = async (fileName) => {\r\n        if (window.confirm('Are you sure you want to delete this folder?')) {\r\n            try {\r\n                await fetch(url + `deleteSourceFile/${fileName}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                getAllFolders();\r\n            } catch (error) {\r\n                console.error('Error deleting folder:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteLink = async (type, fileName) => {\r\n        try {\r\n            const response = await fetch(url + `deleteSource/${selectedFolder}/${type}/${fileName}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('File deleted successfully');\r\n                // Здесь можно добавить дополнительные действия после успешного удаления файла, если необходимо\r\n                setSourcesList(prevList => prevList.filter(item => item.type !== type || item.fileName !== fileName));\r\n            } else {\r\n                console.error('Error deleting file:', response.statusText);\r\n                // Обработка ошибок удаления файла\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting file:', error);\r\n            // Обработка ошибок сетевого запроса\r\n        }\r\n    };\r\n\r\n\r\n    const handleFolderClick = async (fileName) => {\r\n        setSelectedFolder(fileName);\r\n        console.log('Getting sources list:', fileName);\r\n        try {\r\n            const response = await fetch(url + `getSourcesList/${fileName}`);\r\n            const data = await response.json();\r\n            setSourcesList(data.sourcesList);\r\n            console.log('Getted sources list:', data);\r\n        } catch (error) {\r\n            console.error('Error getting sources list:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Получаем токен ReCAPTCHA\r\n            const token = await reRef.current.executeAsync();\r\n            reRef.current.reset();\r\n            // Отправляем данные на сервер для аутентификации\r\n            const response = await fetch('http://localhost:3001/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    login: login,\r\n                    password: password,\r\n                    recaptchaToken: token\r\n                }),\r\n            });\r\n\r\n            // Обрабатываем ответ сервера\r\n            if (response.ok) {\r\n                setIsLoggedIn(true);\r\n            } else {\r\n                // Обработка ошибки входа\r\n                console.error('Login failed');\r\n                setLoginInfo(response);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setLoginInfo(error);\r\n        }\r\n    };\r\n\r\n    const handleLoginChange = () => {\r\n        // Проверка валидности введённых данных (старый и новый логины, а также новый пароль)\r\n        if (oldLogin === '' || newLogin === '' || password === '') {\r\n            alert('Old login, new login, and new password are required.');\r\n            return;\r\n        }\r\n\r\n        // Отправка запроса на сервер для изменения логина и пароля\r\n        fetch(url + 'changelogin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ oldLogin, newLogin, password: password }),\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    // Обработка успешного обновления логина и пароля\r\n                    alert('Login updated successfully.');\r\n                } else {\r\n                    // Обработка ошибки при обновлении логина и пароля\r\n                    alert('Failed to update login.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // Обработка ошибки сети\r\n                console.error('Error updating login:', error);\r\n                alert('Network error. Failed to update login.');\r\n            });\r\n    };\r\n\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const response = await fetch(url + 'runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', response.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const jsonData = await response.json();\r\n\r\n            if (!jsonData.data.trim()) {\r\n                console.error('Empty response data received from the server.');\r\n                return;\r\n            }\r\n\r\n            console.log('Raw server response data:', jsonData.data);\r\n\r\n            let dataArray;\r\n\r\n            try {\r\n                dataArray = JSON.parse(jsonData.data);\r\n            } catch (parseError) {\r\n                console.error('Error parsing JSON data:', parseError);\r\n                return;\r\n            }\r\n\r\n            if (!Array.isArray(dataArray)) {\r\n                console.error('Data is not an array:', dataArray);\r\n                return;\r\n            }\r\n\r\n            console.log('Parsed server response data:', dataArray);\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArray);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChange = (color, setColor) => {\r\n        // Обработчик изменения цвета\r\n        setColor(color);\r\n\r\n        // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\r\n        setTimeout(() => {\r\n            document.activeElement.blur();\r\n        }, 0);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        try {\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color1, color2, angle })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        try {\r\n            const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ defaultGradient })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async () => {\r\n        try {\r\n            const headerStylesToSend = {\r\n                fontSize: headerStyles.fontSize,\r\n                fontFamily: headerStyles.fontFamily,\r\n                fontWeight: headerStyles.fontWeight,\r\n                color: headerStyles.color // Добавьте цвет для заголовка, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const cellStylesToSend = {\r\n                fontSize: cellStyles.fontSize,\r\n                fontFamily: cellStyles.fontFamily,\r\n                fontWeight: cellStyles.fontWeight,\r\n                color: cellStyles.color // Добавьте цвет для ячеек, если это необходимо\r\n                // Другие свойства, если есть\r\n            };\r\n            const response = await fetch(url + 'updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ headerStyles: headerStylesToSend, cellStyles: cellStylesToSend })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleHeaderFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setHeaderStyles({ ...headerStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handleCellFontSizeChange = (value, type) => {\r\n        if (value !== '')\r\n            setCellStyles({ ...cellStyles, fontSize: value + type });\r\n    };\r\n\r\n    const handlePasswordChange = async () => {\r\n        // Проверка на совпадение нового пароля и его подтверждения\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirm password must match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(url + 'encryptpassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    password: newPassword,\r\n                    oldPassword: oldPassword\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to update password');\r\n            }\r\n\r\n            // Очистка полей после успешного обновления пароля\r\n            setOldPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n\r\n            // Дополнительные действия после успешного обновления пароля, например, показать сообщение об успехе\r\n            alert('Password updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating password:', error.message);\r\n            // Действия в случае ошибки, например, показать сообщение об ошибке\r\n            alert('Failed to update password. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const sortedTimeZones = timeZones.sort((a, b) => {\r\n        const offsetA = moment.tz(a).utcOffset();\r\n        const offsetB = moment.tz(b).utcOffset();\r\n        return offsetA - offsetB;\r\n    });\r\n\r\n    const isValidGoogleSheetsUrl = (url) => {\r\n        // Регулярное выражение для проверки валидности URL Google Sheets\r\n        const googleSheetsUrlRegex = /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/[a-zA-Z0-9-_]+/;\r\n\r\n        // Проверка URL с помощью регулярного выражения\r\n        return googleSheetsUrlRegex.test(url);\r\n    };\r\n\r\n    const handleSpreadsheetUrlChange = (url) => {\r\n        setSpreadsheetUrl(url);\r\n\r\n        // Проверка валидности URL Google Sheets\r\n        if (isValidGoogleSheetsUrl(url)) {\r\n            // URL валиден для Google Sheets - выполнить нужные действия\r\n            console.log('Valid Google Sheets URL');\r\n        } else {\r\n            // URL не является URL Google Sheets - выполнить нужные действия, например, вывод сообщения об ошибке\r\n            console.log('Invalid Google Sheets URL');\r\n        }\r\n    };\r\n\r\n    const handleCredentialFileChange = (file) => {\r\n        setCredentialFile(file);\r\n\r\n        // Чтение содержимого файла\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const fileContent = event.target.result;\r\n\r\n            // Проверка валидности содержимого файла credentials.json\r\n            if (isValidCredentialsFile(fileContent)) {\r\n                // Файл credentials.json валиден - выполнить нужные действия\r\n                console.log('Valid credentials.json file');\r\n            } else {\r\n                // Файл credentials.json невалиден - выполнить нужные действия, например, вывод сообщения об ошибке\r\n                console.log('Invalid credentials.json file');\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const isValidCredentialsFile = (fileContent) => {\r\n        // Преобразование содержимого файла в объект\r\n        let credentials;\r\n        try {\r\n            credentials = JSON.parse(fileContent);\r\n        } catch (error) {\r\n            console.error(\"Error parsing credentials.json:\", error);\r\n            return false;\r\n        }\r\n\r\n        // Проверка наличия обязательных полей\r\n        const requiredFields = [\r\n            \"type\",\r\n            \"project_id\",\r\n            \"private_key_id\",\r\n            \"private_key\",\r\n            \"client_email\",\r\n            \"client_id\",\r\n            \"auth_uri\",\r\n            \"token_uri\",\r\n            \"auth_provider_x509_cert_url\",\r\n            \"client_x509_cert_url\"\r\n        ];\r\n\r\n        for (const field of requiredFields) {\r\n            if (!credentials.hasOwnProperty(field)) {\r\n                console.error(`Missing required field in credentials.json: ${field}`);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Проверка типа\r\n        if (credentials.type !== \"service_account\") {\r\n            console.error(`Invalid type in credentials.json: ${credentials.type}`);\r\n            return false;\r\n        }\r\n\r\n        // Проверка формата приватного ключа\r\n        const privateKeyFormatRegex = /^-----BEGIN PRIVATE KEY-----\\n[\\s\\S]+\\n-----END PRIVATE KEY-----\\n$/;\r\n        if (!privateKeyFormatRegex.test(credentials.private_key)) {\r\n            console.error(\"Invalid format for private key in credentials.json\");\r\n            return false;\r\n        }\r\n\r\n        // Дополнительные проверки, если необходимо\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Проверка диапазонов названий столбцов и данных\r\n        // Если все данные корректны, отправка на сервер\r\n    };\r\n\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <div className=\"admin-form\">\r\n                    <div>\r\n                        <label htmlFor=\"login\">Login:</label>\r\n                        <input\r\n                                type=\"text\"\r\n                                id=\"login\"\r\n                                value={login}\r\n                                onChange={(e) => setLogin(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <ReCAPTCHA\r\n                            sitekey={key}\r\n                            size=\"invisible\"\r\n                            ref={reRef}\r\n                    />\r\n                    <div>\r\n                        <label>{loginInfo}</label>\r\n                    </div>\r\n                    <button onClick={handleLogin}>Enter</button>\r\n                </div>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'additional' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('additional')}\r\n                            >\r\n                                Additional\r\n                            </button>\r\n                            {selectedOption === 'additional' && (\r\n                                <div>\r\n                                    <label htmlFor=\"spreadsheetUrl\">Google Sheets URL:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"spreadsheetUrl\"\r\n                                        placeholder=\"Enter Google Sheets URL\"\r\n                                        value={spreadsheetUrl}\r\n                                        onChange={(e) => handleSpreadsheetUrlChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если ссылка валидна */}\r\n                                    <br />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".json\"\r\n                                        onChange={(e) => handleCredentialFileChange(e.target.files[0])}\r\n                                    />\r\n                                    {/* Возможность загрузить файл credentials.json */}\r\n                                    <br />\r\n                                    <label htmlFor=\"columnNamesRange\">Column Names Range:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"columnNamesRange\"\r\n                                        placeholder=\"Enter column names range (e.g., B2:I2)\"\r\n                                        value={columnNamesRange}\r\n                                        onChange={(e) => handleColumnNamesRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Вывод зеленой галочки, если диапазон названий столбцов валиден */}\r\n                                    <br />\r\n                                    <label htmlFor=\"dataRange\">Data Range:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"dataRange\"\r\n                                        placeholder=\"Enter data range (e.g., B3:I)\"\r\n                                        value={dataRange}\r\n                                        onChange={(e) => handleDataRangeChange(e.target.value)}\r\n                                    />\r\n                                    {/* Кнопка для сохранения на сервере */}\r\n                                    <button onClick={handleSubmit}>Save</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'tabula' && (\r\n                                <div>\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <h4>Header Styles:</h4>\r\n                                    <label htmlFor=\"headerFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"headerFontSize\"\r\n                                        placeholder=\"Enter font size for table header\"\r\n                                        value={headerStyles.fontSize.replace(/\\D/g, '')} // Отображаем только цифры\r\n                                        onChange={(e) => handleHeaderFontSizeChange(e.target.value, headerStyles.fontSize.replace(/\\d/g, ''))}\r\n                                    />\r\n\r\n                                    <select\r\n                                        value={headerStyles.fontSize.replace(/\\d+/g, '')} // Отображаем только единицы измерения\r\n                                        onChange={(e) => handleHeaderFontSizeChange(headerStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                    >\r\n                                        {units.map(unit => (\r\n                                            <option key={unit} value={unit}>{unit}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <br />\r\n                                    <label htmlFor=\"headerFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"headerFontFamily\"\r\n                                        value={headerStyles.fontFamily}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"headerFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"headerFontWeight\"\r\n                                        value={headerStyles.fontWeight}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для шапки таблицы здесь */}\r\n                                    </select>\r\n\r\n                                    {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n\r\n                                    <h4>Cell Styles:</h4>\r\n                                    <label htmlFor=\"cellFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"cellFontSize\"\r\n                                        placeholder=\"Enter font size for table cells\"\r\n                                        value={cellStyles.fontSize.replace(/\\D/g, '')} // Отображаем только цифры\r\n                                        onChange={(e) => handleCellFontSizeChange(e.target.value, cellStyles.fontSize.replace(/\\d/g, ''))}\r\n                                    />\r\n\r\n                                    <select\r\n                                        value={cellStyles.fontSize.replace(/\\d+/g, '')} // Отображаем только единицы измерения\r\n                                        onChange={(e) => handleCellFontSizeChange(cellStyles.fontSize.replace(/\\D/g, ''), e.target.value)}\r\n                                    >\r\n                                        {units.map(unit => (\r\n                                            <option key={unit} value={unit}>{unit}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <br/>\r\n                                    <label htmlFor=\"cellFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"cellFontFamily\"\r\n                                        value={cellStyles.fontFamily}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"cellFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"cellFontWeight\"\r\n                                        value={cellStyles.fontWeight}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для ячеек таблицы здесь */}\r\n                                    </select>\r\n                                    <br /><br />\r\n                                    <label htmlFor=\"tableColor\">Table Color:</label>\r\n                                    <input\r\n                                        type=\"color\"\r\n                                        id=\"tableColor\"\r\n                                        value={tableColor}\r\n                                        onChange={(e) => {\r\n                                            setHeaderStyles({ ...headerStyles, color: e.target.value });\r\n                                            setCellStyles({ ...cellStyles, color: e.target.value });\r\n                                            setTableColor(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                    <br /><br/>\r\n                                    <button onClick={applyTableStyles}>Apply Table Styles</button>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                    \r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div>\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor)}\r\n                                    />\r\n                                    <button onClick={applySingleColor}>Apply Single Color</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div>\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor1)}\r\n                                    />\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor2)}\r\n                                    />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}\r\n                                    <button onClick={applyGradient}>Apply Gradient</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n                            <label>\r\n                                Background Type:\r\n                                <select\r\n                                    value={backgroundType}\r\n                                    onChange={(e) => setBackgroundType(e.target.value)}\r\n                                >\r\n                                    <option value=\"none\">None</option>\r\n                                    <option value=\"color\">Color</option>\r\n                                    <option value=\"gradient\">Gradient</option>\r\n                                </select>\r\n                            </label>\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '37vh', left: '-10vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead>\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor, fontFamily: headerStyles.fontFamily, fontWeight: headerStyles.fontWeight, fontStyle: headerStyles.fontStyle, textTransform: headerStyles.textTransform, color: headerStyles.color }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontFamily: cellStyles.fontFamily, fontWeight: cellStyles.fontWeight, fontStyle: cellStyles.fontStyle, textTransform: cellStyles.textTransform, color: cellStyles.color }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            <div>\r\n                                <button onClick={handleAddFolder}>Add Folder</button>\r\n                                {folders.map(folder => (\r\n                                    <div key={folder}>\r\n                                        <button onClick={() => handleFolderClick(folder)}>{folder}</button>\r\n                                        <button onClick={() => handleDeleteFolder(folder)}>Delete</button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"previewWindow\">\r\n                                {sourcesList.map((source, index) => (\r\n                                    <div key={index} className=\"previewItem\">\r\n                                        {source.type === 'text' && (\r\n                                            // Отображаем содержимое текстового файла, если тип файла - text\r\n                                            <pre>{source.file}</pre>\r\n                                        )}\r\n\r\n                                        {source.type.startsWith('URL') && (\r\n                                            // Отображаем соответствующий контент на основе URL\r\n                                            // Вместо этого можно использовать плееры для видео или изображений, как в предыдущем примере\r\n                                            // Этот код предполагает, что source.file содержит ссылку на изображение или видео\r\n                                            source.type === 'URL(foto)' ? (\r\n                                                <img src={source.file} alt={`Image ${index}`} className=\"previewImage\" style={{ width: '200px', height: '150px' }} />\r\n                                            ) : source.type === 'URL(video)' ? (\r\n                                                    <video src={source.file} controls className=\"previewVideo\" style={{ width: '200px', height: '150px' }} />\r\n                                            ) : (\r\n                                                <div>Error: Unsupported URL type</div>\r\n                                            )\r\n                                        )}\r\n\r\n                                        {source.type === 'foto' && (\r\n                                            // Отображаем изображение, если тип файла - foto\r\n                                            <img src={url + `getSource/${source.file}`} alt={`Image ${index}`} className=\"previewImage\" style={{ width: '200px', height: '150px' }} />\r\n                                        )}\r\n\r\n                                        {source.type === 'video' && (\r\n                                            // Отображаем видео, если тип файла - video\r\n                                            <video src={url + `getSource/${source.file}`} controls className=\"previewVideo\" style={{ width: '200px', height: '150px' }} />\r\n                                        )}\r\n\r\n                                        {source.type !== 'text' && !source.type.startsWith('URL') && source.type !== 'foto' && source.type !== 'video' && (\r\n                                            // Отображаем название файла, если он не текст, не URL, не foto и не video\r\n                                            <div>{source.file}</div>\r\n                                        )}\r\n                                        <div>\r\n                                            <span>{source.file}</span>\r\n                                            <button onClick={() => handleDeleteLink(source.type, source.file)}>Delete</button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <label htmlFor=\"timeZoneSelect\">Select Time Zone:</label>\r\n                            <select id=\"timeZoneSelect\" value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n                                {sortedTimeZones.map(timeZone => {\r\n                                    const offsetMinutes = moment.tz(timeZone).utcOffset();\r\n                                    const offsetHours = Math.floor(Math.abs(offsetMinutes) / 60);\r\n                                    const offsetMinutesPart = Math.abs(offsetMinutes) % 60;\r\n                                    const offsetString = (offsetMinutes >= 0 ? '+' : '-') + offsetHours.toString().padStart(2, '0') + ':' + offsetMinutesPart.toString().padStart(2, '0');\r\n                                    const [region, city] = timeZone.split(\"/\").map(part => part.replace(\"_\", \" \"));\r\n                                    return (\r\n                                        <option key={timeZone} value={timeZone}>\r\n                                            (UTC {offsetString}) {region}, {city}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </select>\r\n\r\n                            <br />\r\n                            {/* Поля ввода для обновления пароля */}\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Old Password\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"New Password\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm New Password\"\r\n                                value={confirmNewPassword}\r\n                                onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                            />\r\n                            <button onClick={handlePasswordChange}>Update Password</button>\r\n                            <br />\r\n                            {/* Поля ввода для обновления логина */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Old Login\"\r\n                                value={oldLogin}\r\n                                onChange={(e) => setOldLogin(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"New Login\"\r\n                                value={newLogin}\r\n                                onChange={(e) => setNewLogin(e.target.value)}\r\n                            />\r\n                            <button onClick={handleLoginChange}>Update Login</button>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}