{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { getSourcesList, url, getFileType, getItemStyle } from './adminToServer.js'; // ������ ������� getSourcesList\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourcesList: [],\n      serverFiles: []\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  // ����� ��� �������� ������ �� getSourcesList � fetch\n  async componentDidMount() {\n    try {\n      const sourcesList = await getSourcesList(); // �������� sourcesList\n      this.setState({\n        sourcesList\n      });\n      const response = await fetch(url + 'getAllSources'); // �������� serverFiles\n      if (!response.ok) {\n        throw new Error('Failed to fetch sources');\n      }\n      const data = await response.json();\n      const serverFiles = data.files.map((file, index) => ({\n        id: index,\n        type: getFileType(file),\n        file,\n        index: index\n      }));\n      this.setState({\n        serverFiles\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  // ����� ��� ��������� ����������� ���������\n  onDragEnd(result) {\n    // ��������� ������ ����������� ���������...\n  }\n  render() {\n    const {\n      sourcesList,\n      serverFiles\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable1\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [sourcesList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable2\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: getListStyle(snapshot.isDraggingOver),\n            children: [serverFiles.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Test;","map":{"version":3,"names":["React","Component","DragDropContext","Droppable","Draggable","getSourcesList","url","getFileType","getItemStyle","jsxDEV","_jsxDEV","Test","constructor","props","state","sourcesList","serverFiles","onDragEnd","bind","componentDidMount","setState","response","fetch","ok","Error","data","json","files","map","file","index","id","type","error","console","result","render","children","style","display","droppableId","provided","snapshot","ref","innerRef","getListStyle","isDraggingOver","item","draggableId","draggableProps","dragHandleProps","isDragging","content","fileName","_jsxFileName","lineNumber","columnNumber","placeholder"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/Test.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { getSourcesList, url, getFileType, getItemStyle } from './adminToServer.js'; // ������ ������� getSourcesList\r\n\r\nclass Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sourcesList: [],\r\n            serverFiles: []\r\n        };\r\n        this.onDragEnd = this.onDragEnd.bind(this);\r\n    }\r\n\r\n    // ����� ��� �������� ������ �� getSourcesList � fetch\r\n    async componentDidMount() {\r\n        try {\r\n            const sourcesList = await getSourcesList(); // �������� sourcesList\r\n            this.setState({ sourcesList });\r\n\r\n            const response = await fetch(url + 'getAllSources'); // �������� serverFiles\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch sources');\r\n            }\r\n            const data = await response.json();\r\n            const serverFiles = data.files.map((file, index) => ({\r\n                id: index,\r\n                type: getFileType(file),\r\n                file,\r\n                index: index\r\n            }));\r\n            this.setState({ serverFiles });\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    // ����� ��� ��������� ����������� ���������\r\n    onDragEnd(result) {\r\n        // ��������� ������ ����������� ���������...\r\n    }\r\n\r\n    render() {\r\n        const { sourcesList, serverFiles } = this.state;\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Droppable droppableId=\"droppable1\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {sourcesList.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    <Droppable droppableId=\"droppable2\">\r\n                        {(provided, snapshot) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                style={getListStyle(snapshot.isDraggingOver)}\r\n                            >\r\n                                {serverFiles.map((item, index) => (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                style={getItemStyle(\r\n                                                    snapshot.isDragging,\r\n                                                    provided.draggableProps.style\r\n                                                )}\r\n                                            >\r\n                                                {item.content}\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}