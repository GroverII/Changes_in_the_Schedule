{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './style_adm.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedInData, setLoggedInData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState(null);\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [gradientDirection, setGradientDirection] = useState(0);\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    // Отправляем запрос на сервер для проверки логина и пароля\n    try {\n      const response = await fetch(url + 'login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      if (!response.ok) {\n        console.error('Authentication failed. HTTP status:', response.status);\n        // Обработка ошибки аутентификации\n        return;\n      }\n      const data = await response.json();\n      setLoggedInData(data);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const response = await fetch(url + 'runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', response.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const jsonData = await response.json();\n      if (!jsonData.data.trim()) {\n        console.error('Empty response data received from the server.');\n        return;\n      }\n      console.log('Raw server response data:', jsonData.data);\n      let dataArray;\n      try {\n        dataArray = JSON.parse(jsonData.data);\n      } catch (parseError) {\n        console.error('Error parsing JSON data:', parseError);\n        return;\n      }\n      if (!Array.isArray(dataArray)) {\n        console.error('Data is not an array:', dataArray);\n        return;\n      }\n      console.log('Parsed server response data:', dataArray);\n      const ws = XLSX.utils.json_to_sheet(dataArray);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data.xlsx');\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const AizvietosanasTab = () => {\n    const handleOptionChange = option => {\n      setSelectedOption(option);\n    };\n    const handleColorChange = (color, setColor) => {\n      // Обработчик изменения цвета\n      setColor(color);\n\n      // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 0);\n    };\n    const handleGradientDirectionChange = e => {\n      // Обработчик изменения направления градиента\n      setGradientDirection(parseInt(e.target.value, 10));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n        onClick: () => handleOptionChange('Vienlaidu'),\n        children: \"Vienlaidu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedOption === 'Gradients' ? 'active-tab' : '',\n        onClick: () => handleOptionChange('Gradients'),\n        children: \"Gradients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: color1,\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color1,\n          onFocus: e => e.target.blur() // Убираем фокус при получении\n          ,\n          onMouseDown: e => handleColorChange(e.target.value, setColor1),\n          onBlur: e => e.target.focus() // Возвращаем фокус при потере\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: color1,\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color1,\n          onChange: e => handleColorChange(e.target.value, setColor1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: color2,\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color2,\n          onChange: e => handleColorChange(e.target.value, setColor2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gradientDirection\",\n          children: \"Gradient Direction (degrees):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"gradientDirection\",\n          value: gradientDirection,\n          onChange: handleGradientDirectionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Компонент для таба \"Attēli\"\n  const AtteliTab = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Att\\u0113li Tab Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 16\n    }, this);\n  };\n\n  // Компонент для таба \"Iestatījumi\"\n  const IestatijumiTab = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Iestat\\u012Bjumi Tab Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 16\n    }, this);\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"login\",\n            children: \"Login:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"login\",\n            value: login,\n            onChange: e => setLogin(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabClick('aizvietosanas'),\n        className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n        children: \"Aizvieto\\u0161anas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabClick('atteli'),\n        className: activeTab === 'atteli' ? 'active-tab' : '',\n        children: \"Att\\u0113li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabClick('iestatijumi'),\n        className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n        children: \"Iestat\\u012Bjumi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(AizvietosanasTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 55\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(AtteliTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 48\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(IestatijumiTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"h10RYnBcRaiRRi6PKfRyWfKOeBg=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminConsole","_s","login","setLogin","password","setPassword","loggedInData","setLoggedInData","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color1","setColor1","color2","setColor2","gradientDirection","setGradientDirection","handleTabClick","tab","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","data","json","handleRunCSharpScript","Error","jsonData","trim","log","dataArray","parse","parseError","Array","isArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","getConfig","getCSharpScriptConfig","AizvietosanasTab","handleOptionChange","option","handleColorChange","color","setColor","setTimeout","document","activeElement","blur","handleGradientDirectionChange","e","parseInt","target","value","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","width","height","type","onFocus","onMouseDown","onBlur","focus","onChange","htmlFor","id","AtteliTab","IestatijumiTab","handleLoadExcel","blob","reader","FileReader","onload","result","workbook","read","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","length","formattedData","Object","keys","map","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","updates","entries","key","updateResponses","forEach","updateResponse","success","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './style_adm.css';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loggedInData, setLoggedInData] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState(null);\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [gradientDirection, setGradientDirection] = useState(0);\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        // Отправляем запрос на сервер для проверки логина и пароля\r\n        try {\r\n            const response = await fetch(url + 'login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ login, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Authentication failed. HTTP status:', response.status);\r\n                // Обработка ошибки аутентификации\r\n                return;\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoggedInData(data);\r\n            setIsLoggedIn(true);\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    };\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const response = await fetch(url + 'runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', response.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const jsonData = await response.json();\r\n\r\n            if (!jsonData.data.trim()) {\r\n                console.error('Empty response data received from the server.');\r\n                return;\r\n            }\r\n\r\n            console.log('Raw server response data:', jsonData.data);\r\n\r\n            let dataArray;\r\n\r\n            try {\r\n                dataArray = JSON.parse(jsonData.data);\r\n            } catch (parseError) {\r\n                console.error('Error parsing JSON data:', parseError);\r\n                return;\r\n            }\r\n\r\n            if (!Array.isArray(dataArray)) {\r\n                console.error('Data is not an array:', dataArray);\r\n                return;\r\n            }\r\n\r\n            console.log('Parsed server response data:', dataArray);\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArray);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const AizvietosanasTab = () => {\r\n        const handleOptionChange = (option) => {\r\n            setSelectedOption(option);\r\n        };\r\n\r\n        const handleColorChange = (color, setColor) => {\r\n            // Обработчик изменения цвета\r\n            setColor(color);\r\n\r\n            // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\r\n            setTimeout(() => {\r\n                document.activeElement.blur();\r\n            }, 0);\r\n        };\r\n\r\n        const handleGradientDirectionChange = (e) => {\r\n            // Обработчик изменения направления градиента\r\n            setGradientDirection(parseInt(e.target.value, 10));\r\n        };\r\n\r\n        return (\r\n            <div className=\"content-container\">\r\n                <button\r\n                    className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                    onClick={() => handleOptionChange('Vienlaidu')}\r\n                >\r\n                    Vienlaidu\r\n                </button>\r\n                <button\r\n                    className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                    onClick={() => handleOptionChange('Gradients')}\r\n                >\r\n                    Gradients\r\n                </button>\r\n\r\n                {selectedOption === 'Vienlaidu' && (\r\n                    <div>\r\n                        {/* Элементы для Vienlaidu */}\r\n                        <div style={{ backgroundColor: color1, width: '50px', height: '50px' }}></div>\r\n                        <input\r\n                            type=\"color\"\r\n                            value={color1}\r\n                            onFocus={(e) => e.target.blur()}  // Убираем фокус при получении\r\n                            onMouseDown={(e) => handleColorChange(e.target.value, setColor1)}\r\n                            onBlur={(e) => e.target.focus()}  // Возвращаем фокус при потере\r\n                        />\r\n\r\n                    </div>\r\n                )}\r\n\r\n                {selectedOption === 'Gradients' && (\r\n                    <div>\r\n                        {/* Элементы для Gradients */}\r\n                        <div style={{ backgroundColor: color1, width: '50px', height: '50px' }}></div>\r\n                        <input\r\n                            type=\"color\"\r\n                            value={color1}\r\n                            onChange={(e) => handleColorChange(e.target.value, setColor1)}\r\n                        />\r\n\r\n                        <div style={{ backgroundColor: color2, width: '50px', height: '50px' }}></div>\r\n                        <input\r\n                            type=\"color\"\r\n                            value={color2}\r\n                            onChange={(e) => handleColorChange(e.target.value, setColor2)}\r\n                        />\r\n\r\n                        <label htmlFor=\"gradientDirection\">Gradient Direction (degrees):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"gradientDirection\"\r\n                            value={gradientDirection}\r\n                            onChange={handleGradientDirectionChange}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    // Компонент для таба \"Attēli\"\r\n    const AtteliTab = () => {\r\n        return <div className=\"content-container\"><p>Attēli Tab Content</p></div>;\r\n    };\r\n\r\n    // Компонент для таба \"Iestatījumi\"\r\n    const IestatijumiTab = () => {\r\n        return <div className=\"content-container\"><p>Iestatījumi Tab Content</p></div>;\r\n    };\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <>\r\n                    <div className=\"admin-form\">\r\n                        <div>\r\n                            <label htmlFor=\"login\">Login:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"login\"\r\n                                value={login}\r\n                                onChange={(e) => setLogin(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button onClick={handleLogin}>Enter</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <button\r\n                        onClick={() => handleTabClick('aizvietosanas')}\r\n                        className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                    >\r\n                        Aizvietošanas\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handleTabClick('atteli')}\r\n                        className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                    >\r\n                        Attēli\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handleTabClick('iestatijumi')}\r\n                        className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                    >\r\n                        Iestatījumi\r\n                    </button>\r\n\r\n                    {/* Отображение контента в зависимости от активного таба */}\r\n                    {activeTab === 'aizvietosanas' && <AizvietosanasTab />}\r\n                    {activeTab === 'atteli' && <AtteliTab />}\r\n                    {activeTab === 'iestatijumi' && <IestatijumiTab />}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}