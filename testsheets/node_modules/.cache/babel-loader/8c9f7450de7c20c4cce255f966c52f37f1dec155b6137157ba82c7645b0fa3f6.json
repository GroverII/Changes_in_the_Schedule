{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\testsheets\\\\src\\\\AdminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactAnglePicker } from 'react-angle-picker';\nimport './style_adm.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminConsole = () => {\n  _s();\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedInData, setLoggedInData] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [excelData, setExcelData] = useState(null);\n  const [selectedCell, setSelectedCell] = useState({\n    row: null,\n    col: null\n  });\n  const [config, setConfig] = useState({});\n  const [newConfig, setNewConfig] = useState({});\n  const [newCSConfig, setNewCSConfig] = useState({});\n  const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\n  const url = 'http://localhost:3001/';\n  const [activeTab, setActiveTab] = useState(null);\n  const [selectedOption, setSelectedOption] = useState('Vienlaidu');\n  const [color, setColor] = useState('#ff0000');\n  const [color1, setColor1] = useState('#ff0000');\n  const [color2, setColor2] = useState('#00ff00');\n  const [angle, setAngle] = React.useState(0);\n  const [tableWrapperStyles, setTableWrapperStyles] = useState('');\n  const [tableStyles, setTableStyles] = useState('');\n  const [tableHeaderStyles, setTableHeaderStyles] = useState('');\n  const [tableColor, setTableColor] = useState('');\n  const [tableWrapperFontSize, setTableWrapperFontSize] = useState('');\n  const [tableCellFontSize, setTableCellFontSize] = useState('');\n  const [backgroundType, setBackgroundType] = useState('');\n  const [headerStyles, setHeaderStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: ''\n  });\n  const [cellStyles, setCellStyles] = useState({\n    fontSize: '',\n    fontFamily: '',\n    fontWeight: '',\n    fontStyle: '',\n    textTransform: ''\n  });\n  const fontFamilies = ['Arial', 'Verdana', 'Tahoma', 'Times New Roman', 'Georgia', 'Courier New'\n  // Добавьте другие варианты семейств шрифтов по желанию\n  ];\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const handleLogin = async () => {\n    // Отправляем запрос на сервер для проверки логина и пароля\n    try {\n      const response = await fetch(url + 'login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      if (!response.ok) {\n        console.error('Authentication failed. HTTP status:', response.status);\n        // Обработка ошибки аутентификации\n        return;\n      }\n      const data = await response.json();\n      setLoggedInData(data);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleRunCSharpScript = async () => {\n    try {\n      const response = await fetch(url + 'runCSharpScript', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        console.error('Failed to run C# script on the server. HTTP status:', response.status);\n        throw new Error('Failed to run C# script on the server');\n      }\n      const jsonData = await response.json();\n      if (!jsonData.data.trim()) {\n        console.error('Empty response data received from the server.');\n        return;\n      }\n      console.log('Raw server response data:', jsonData.data);\n      let dataArray;\n      try {\n        dataArray = JSON.parse(jsonData.data);\n      } catch (parseError) {\n        console.error('Error parsing JSON data:', parseError);\n        return;\n      }\n      if (!Array.isArray(dataArray)) {\n        console.error('Data is not an array:', dataArray);\n        return;\n      }\n      console.log('Parsed server response data:', dataArray);\n      const ws = XLSX.utils.json_to_sheet(dataArray);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'data.xlsx');\n    } catch (error) {\n      console.error('Error during C# script execution:', error);\n    }\n  };\n  useEffect(() => {\n    // Вызывается при монтировании компонента\n    getConfig(); // Получаем конфигурацию при загрузке\n    getCSharpScriptConfig();\n  }, []);\n  const getConfig = async () => {\n    try {\n      const response = await fetch(url + 'getConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      setConfig(data.config);\n    } catch (error) {\n      console.error('Error fetching configuration:', error);\n    }\n  };\n  const getCSharpScriptConfig = async () => {\n    try {\n      const response = await fetch(url + 'getCSharpScriptConfig');\n      if (!response.ok) {\n        console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\n        return;\n      }\n      const data = await response.json();\n      // Сохранение данных в состоянии React\n      setCSharpScriptConfig(data);\n    } catch (error) {\n      console.error('Error fetching C# Script configuration:', error);\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  const handleColorChange = (color, setColor) => {\n    // Обработчик изменения цвета\n    setColor(color);\n\n    // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\n    setTimeout(() => {\n      document.activeElement.blur();\n    }, 0);\n  };\n  const handleChange = value => {\n    setAngle(value);\n  };\n  const applySingleColor = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying single color:', error);\n    }\n  };\n  const applyGradient = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color1,\n          color2,\n          angle\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying gradient:', error);\n    }\n  };\n  const resetToDefaultGradient = async () => {\n    try {\n      const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\n      const response = await fetch('http://localhost:3001/updateStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          defaultGradient\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error resetting to default gradient:', error);\n    }\n  };\n  const applyTableStyles = async tableStyles => {\n    try {\n      const response = await fetch('http://localhost:3001/updateTableStyles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tableStyles\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error('Error applying table styles:', error);\n    }\n  };\n\n  //unused\n  const handleLoadExcel = async () => {\n    try {\n      const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\n      const blob = await response.blob();\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const data = e.target.result;\n        const workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n          defval: ''\n        });\n        if (Array.isArray(sheetData) && sheetData.length > 0) {\n          const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\n          console.log('Formatted Excel Data:', formattedData);\n          setExcelData(formattedData);\n        } else {\n          console.error('Invalid Excel data format.');\n        }\n      };\n      reader.readAsBinaryString(blob);\n    } catch (error) {\n      console.error('Error loading Excel file:', error);\n    }\n  };\n  const handleCellClick = (rowIndex, colIndex) => {\n    setSelectedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  const handleUpdateCSharpScriptConfig = async () => {\n    try {\n      const updates = Object.entries(newCSConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      console.log(updates);\n      const response = await fetch(url + 'updateCSharpScriptConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update C# script configuration. HTTP status:', response.status);\n        throw new Error('Failed to update C# script configuration');\n      }\n      const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\n\n      updateResponses.forEach(updateResponse => {\n        if (updateResponse.success) {\n          console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\n        } else {\n          console.error('Failed to update C# script configuration. Server response:', updateResponse);\n        }\n      });\n      getCSharpScriptConfig();\n    } catch (error) {\n      console.error('Error updating C# script configuration:', error);\n    }\n  };\n  const handleUpdateConfig = async () => {\n    try {\n      const updates = Object.entries(newConfig).map(([key, value]) => ({\n        key,\n        value\n      }));\n      const response = await fetch(url + 'updateConfig', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n      });\n      if (!response.ok) {\n        console.error('Failed to update configuration. HTTP status:', response.status);\n        throw new Error('Failed to update configuration');\n      }\n      const updateResponse = await response.json();\n      if (updateResponse.success) {\n        console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\n        getConfig();\n      } else {\n        console.error('Failed to update configuration. Server response:', updateResponse);\n      }\n    } catch (error) {\n      console.error('Error updating configuration:', error);\n    }\n  };\n  const handleInputChangeCSConfig = (key, value) => {\n    setNewCSConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  const handleInputChange = (key, value) => {\n    setNewConfig(prevConfig => ({\n      ...prevConfig,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"login\",\n            children: \"Login:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"login\",\n            value: login,\n            onChange: e => setLogin(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('aizvietosanas'),\n          className: activeTab === 'aizvietosanas' ? 'active-tab' : '',\n          children: \"Aizvieto\\u0161anas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('atteli'),\n          className: activeTab === 'atteli' ? 'active-tab' : '',\n          children: \"Att\\u0113li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabClick('iestatijumi'),\n          className: activeTab === 'iestatijumi' ? 'active-tab' : '',\n          children: \"Iestat\\u012Bjumi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }, this), activeTab === 'aizvietosanas' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Vienlaidu' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Vienlaidu'),\n          children: \"Vienlaidu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'Gradients' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('Gradients'),\n          children: \"Gradients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedOption === 'tabula' ? 'active-tab' : '',\n          onClick: () => handleOptionChange('tabula'),\n          children: \"Tabula\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 29\n        }, this), selectedOption === 'tabula' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Header Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"headerFontSize\",\n            placeholder: \"Enter font size for table header\",\n            value: headerStyles.fontSize,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontSize: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontFamily\",\n            value: headerStyles.fontFamily,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"headerFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"headerFontWeight\",\n            value: headerStyles.fontWeight,\n            onChange: e => setHeaderStyles({\n              ...headerStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cell Styles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontSize\",\n            children: \"Font Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cellFontSize\",\n            placeholder: \"Enter font size for table cells\",\n            value: cellStyles.fontSize,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontSize: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontFamily\",\n            children: \"Font Family:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontFamily\",\n            value: cellStyles.fontFamily,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontFamily: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 41\n            }, this), fontFamilies.map((font, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: font,\n              children: font\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cellFontWeight\",\n            children: \"Font Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cellFontWeight\",\n            value: cellStyles.fontWeight,\n            onChange: e => setCellStyles({\n              ...cellStyles,\n              fontWeight: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select font weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"normal\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bold\",\n              children: \"Bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyTableStyles,\n            children: \"Apply Table Styles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 33\n        }, this), selectedOption === 'Vienlaidu' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color,\n            onChange: e => handleColorChange(e.target.value, setColor)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applySingleColor,\n            children: \"Apply Single Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 33\n        }, this), selectedOption === 'Gradients' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color1,\n            onChange: e => handleColorChange(e.target.value, setColor1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom-style\",\n            type: \"color\",\n            value: color2,\n            onChange: e => handleColorChange(e.target.value, setColor2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gradient Angle:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ReactAnglePicker, {\n            angle: angle,\n            onChange: handleChange,\n            onFinalChange: handleChange // Для мгновенного изменения угла\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 37\n          }, this), angle, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyGradient,\n            children: \"Apply Gradient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetToDefaultGradient,\n            children: \"Reset to Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Background Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: backgroundType,\n            onChange: e => setBackgroundType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"color\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gradient\",\n              children: \"Gradient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          style: {\n            top: '20vh',\n            left: '-10vw',\n            transform: 'translate(0, 0) scale(0.6)',\n            color: tableColor,\n            fontSize: tableWrapperFontSize,\n            background: backgroundType === 'gradient' ? `linear-gradient(${angle}deg, ${color1}, ${color2})` : backgroundType === 'color' ? color : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"fl-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  border: \"3px solid \" + tableColor\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Aizvietot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Stunda\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Klase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Kab.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Prome\\u0161osais skolot\\u0101js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    border: \"3px solid \" + tableColor\n                  },\n                  children: \"Piez\\u012Bmes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"dataBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"11A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"Jane Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"10B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"102\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"John Doe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"No special notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"Michael Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"5.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"12C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"103\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"Mary Wilson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: \"3px solid \" + tableColor,\n                    fontSize: tableCellFontSize\n                  },\n                  children: \"Bring extra materials\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 25\n      }, this), activeTab === 'atteli' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Att\\u0113li Tab Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 25\n      }, this), activeTab === 'iestatijumi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Iestat\\u012Bjumi Tab Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminConsole, \"ezyj7nno1nVRuvZE2nyicdW1u9A=\");\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useState","useEffect","ReactAnglePicker","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminConsole","_s","login","setLogin","password","setPassword","loggedInData","setLoggedInData","isLoggedIn","setIsLoggedIn","excelData","setExcelData","selectedCell","setSelectedCell","row","col","config","setConfig","newConfig","setNewConfig","newCSConfig","setNewCSConfig","csharpScriptConfig","setCSharpScriptConfig","url","activeTab","setActiveTab","selectedOption","setSelectedOption","color","setColor","color1","setColor1","color2","setColor2","angle","setAngle","tableWrapperStyles","setTableWrapperStyles","tableStyles","setTableStyles","tableHeaderStyles","setTableHeaderStyles","tableColor","setTableColor","tableWrapperFontSize","setTableWrapperFontSize","tableCellFontSize","setTableCellFontSize","backgroundType","setBackgroundType","headerStyles","setHeaderStyles","fontSize","fontFamily","fontWeight","fontStyle","textTransform","cellStyles","setCellStyles","fontFamilies","handleTabClick","tab","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","data","json","handleRunCSharpScript","Error","jsonData","trim","log","dataArray","parse","parseError","Array","isArray","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","getConfig","getCSharpScriptConfig","handleOptionChange","option","handleColorChange","setTimeout","document","activeElement","blur","handleChange","value","applySingleColor","applyGradient","resetToDefaultGradient","defaultGradient","applyTableStyles","handleLoadExcel","blob","reader","FileReader","onload","e","target","result","workbook","read","type","firstSheetName","SheetNames","sheetData","sheet_to_json","Sheets","defval","length","formattedData","Object","keys","map","values","readAsBinaryString","handleCellClick","rowIndex","colIndex","handleUpdateCSharpScriptConfig","updates","entries","key","updateResponses","forEach","updateResponse","success","oldValue","handleUpdateConfig","handleInputChangeCSConfig","prevConfig","handleInputChange","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","placeholder","font","index","onFinalChange","style","top","left","transform","background","border","_c","$RefreshReg$"],"sources":["C:/Users/grigo/OneDrive/Рабочий стол/testsheets/src/AdminConsole.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ReactAnglePicker } from 'react-angle-picker';\r\nimport './style_adm.css';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst AdminConsole = () => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loggedInData, setLoggedInData] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [selectedCell, setSelectedCell] = useState({ row: null, col: null });\r\n    const [config, setConfig] = useState({});\r\n    const [newConfig, setNewConfig] = useState({});\r\n    const [newCSConfig, setNewCSConfig] = useState({});\r\n    const [csharpScriptConfig, setCSharpScriptConfig] = useState({});\r\n    const url = 'http://localhost:3001/';\r\n    const [activeTab, setActiveTab] = useState(null);\r\n    const [selectedOption, setSelectedOption] = useState('Vienlaidu');\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [color1, setColor1] = useState('#ff0000');\r\n    const [color2, setColor2] = useState('#00ff00');\r\n    const [angle, setAngle] = React.useState(0);\r\n    const [tableWrapperStyles, setTableWrapperStyles] = useState('');\r\n    const [tableStyles, setTableStyles] = useState('');\r\n    const [tableHeaderStyles, setTableHeaderStyles] = useState('');\r\n    const [tableColor, setTableColor] = useState('');\r\n    const [tableWrapperFontSize, setTableWrapperFontSize] = useState('');\r\n    const [tableCellFontSize, setTableCellFontSize] = useState('');\r\n    const [backgroundType, setBackgroundType] = useState('');\r\n    const [headerStyles, setHeaderStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: ''\r\n    });\r\n\r\n    const [cellStyles, setCellStyles] = useState({\r\n        fontSize: '',\r\n        fontFamily: '',\r\n        fontWeight: '',\r\n        fontStyle: '',\r\n        textTransform: ''\r\n    });\r\n    const fontFamilies = [\r\n        'Arial',\r\n        'Verdana',\r\n        'Tahoma',\r\n        'Times New Roman',\r\n        'Georgia',\r\n        'Courier New',\r\n        // Добавьте другие варианты семейств шрифтов по желанию\r\n    ];\r\n\r\n\r\n    const handleTabClick = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        // Отправляем запрос на сервер для проверки логина и пароля\r\n        try {\r\n            const response = await fetch(url + 'login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ login, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Authentication failed. HTTP status:', response.status);\r\n                // Обработка ошибки аутентификации\r\n                return;\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoggedInData(data);\r\n            setIsLoggedIn(true);\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n        }\r\n    };\r\n\r\n    const handleRunCSharpScript = async () => {\r\n        try {\r\n            const response = await fetch(url + 'runCSharpScript', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to run C# script on the server. HTTP status:', response.status);\r\n                throw new Error('Failed to run C# script on the server');\r\n            }\r\n\r\n            const jsonData = await response.json();\r\n\r\n            if (!jsonData.data.trim()) {\r\n                console.error('Empty response data received from the server.');\r\n                return;\r\n            }\r\n\r\n            console.log('Raw server response data:', jsonData.data);\r\n\r\n            let dataArray;\r\n\r\n            try {\r\n                dataArray = JSON.parse(jsonData.data);\r\n            } catch (parseError) {\r\n                console.error('Error parsing JSON data:', parseError);\r\n                return;\r\n            }\r\n\r\n            if (!Array.isArray(dataArray)) {\r\n                console.error('Data is not an array:', dataArray);\r\n                return;\r\n            }\r\n\r\n            console.log('Parsed server response data:', dataArray);\r\n\r\n            const ws = XLSX.utils.json_to_sheet(dataArray);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n            XLSX.writeFile(wb, 'data.xlsx');\r\n        } catch (error) {\r\n            console.error('Error during C# script execution:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Вызывается при монтировании компонента\r\n        getConfig(); // Получаем конфигурацию при загрузке\r\n        getCSharpScriptConfig();\r\n    }, []);\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            setConfig(data.config);\r\n        } catch (error) {\r\n            console.error('Error fetching configuration:', error);\r\n        }\r\n    };\r\n\r\n    const getCSharpScriptConfig = async () => {\r\n        try {\r\n            const response = await fetch(url + 'getCSharpScriptConfig');\r\n            if (!response.ok) {\r\n                console.error('Failed to fetch C# Script configuration. HTTP status:', response.status);\r\n                return;\r\n            }\r\n            const data = await response.json();\r\n            // Сохранение данных в состоянии React\r\n            setCSharpScriptConfig(data);\r\n        } catch (error) {\r\n            console.error('Error fetching C# Script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleOptionChange = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleColorChange = (color, setColor) => {\r\n        // Обработчик изменения цвета\r\n        setColor(color);\r\n\r\n        // Попробуйте добавить следующий код, чтобы убедиться, что не теряется фокус на элементе\r\n        setTimeout(() => {\r\n            document.activeElement.blur();\r\n        }, 0);\r\n    };\r\n\r\n    const handleChange = (value) => {\r\n        setAngle(value);\r\n    };\r\n\r\n    const applySingleColor = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3001/updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying single color:', error);\r\n        }\r\n    };\r\n\r\n    const applyGradient = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3001/updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ color1, color2, angle })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying gradient:', error);\r\n        }\r\n    };\r\n\r\n    const resetToDefaultGradient = async () => {\r\n        try {\r\n            const defaultGradient = 'linear-gradient(229.82deg, #FFC400 18.72%, #FF6B00 84.82%)';\r\n            const response = await fetch('http://localhost:3001/updateStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ defaultGradient })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error resetting to default gradient:', error);\r\n        }\r\n    };\r\n\r\n    const applyTableStyles = async (tableStyles) => {\r\n        try {\r\n            const response = await fetch('http://localhost:3001/updateTableStyles', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ tableStyles })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.error('Error applying table styles:', error);\r\n        }\r\n    };\r\n\r\n\r\n    //unused\r\n    const handleLoadExcel = async () => {\r\n        try {\r\n            const response = await fetch('https://docs.google.com/spreadsheets/d/1MBboSLNI-avCAJ7RZPeJKL-JPIuFY4H9eBoq3W18Qao/export?format=xlsx');\r\n            const blob = await response.blob();\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = async (e) => {\r\n                const data = e.target.result;\r\n                const workbook = XLSX.read(data, { type: 'binary' });\r\n                const firstSheetName = workbook.SheetNames[0];\r\n                const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { defval: '' });\r\n\r\n                if (Array.isArray(sheetData) && sheetData.length > 0) {\r\n                    const formattedData = [Object.keys(sheetData[0]), ...sheetData.map(row => Object.values(row))];\r\n                    console.log('Formatted Excel Data:', formattedData);\r\n                    setExcelData(formattedData);\r\n                } else {\r\n                    console.error('Invalid Excel data format.');\r\n                }\r\n            };\r\n\r\n            reader.readAsBinaryString(blob);\r\n        } catch (error) {\r\n            console.error('Error loading Excel file:', error);\r\n        }\r\n    };\r\n    const handleCellClick = (rowIndex, colIndex) => {\r\n        setSelectedCell({ row: rowIndex, col: colIndex });\r\n    };\r\n\r\n    const handleUpdateCSharpScriptConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newCSConfig).map(([key, value]) => ({ key, value }));\r\n            console.log(updates);\r\n            const response = await fetch(url + 'updateCSharpScriptConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update C# script configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update C# script configuration');\r\n            }\r\n\r\n            const updateResponses = await response.json(); // Обратите внимание на \"s\" в конце\r\n\r\n            updateResponses.forEach(updateResponse => {\r\n                if (updateResponse.success) {\r\n                    console.log(`C# script configuration updated successfully. Old value: ${updateResponse.oldValue}`);\r\n                } else {\r\n                    console.error('Failed to update C# script configuration. Server response:', updateResponse);\r\n                }\r\n            });\r\n\r\n            getCSharpScriptConfig();\r\n\r\n        } catch (error) {\r\n            console.error('Error updating C# script configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateConfig = async () => {\r\n        try {\r\n            const updates = Object.entries(newConfig).map(([key, value]) => ({ key, value }));\r\n\r\n            const response = await fetch(url + 'updateConfig', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Failed to update configuration. HTTP status:', response.status);\r\n                throw new Error('Failed to update configuration');\r\n            }\r\n\r\n            const updateResponse = await response.json();\r\n\r\n            if (updateResponse.success) {\r\n                console.log('Configuration updated successfully. Old value:', updateResponse.oldValue);\r\n                getConfig();\r\n            } else {\r\n                console.error('Failed to update configuration. Server response:', updateResponse);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error updating configuration:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChangeCSConfig = (key, value) => {\r\n        setNewCSConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setNewConfig((prevConfig) => ({\r\n            ...prevConfig,\r\n            [key]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && (\r\n                <>\r\n                    <div className=\"admin-form\">\r\n                        <div>\r\n                            <label htmlFor=\"login\">Login:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"login\"\r\n                                value={login}\r\n                                onChange={(e) => setLogin(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button onClick={handleLogin}>Enter</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n            {isLoggedIn && (\r\n                <div>\r\n                    <div className=\"tab-container\">\r\n                        <button\r\n                            onClick={() => handleTabClick('aizvietosanas')}\r\n                            className={activeTab === 'aizvietosanas' ? 'active-tab' : ''}\r\n                        >\r\n                            Aizvietošanas\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('atteli')}\r\n                            className={activeTab === 'atteli' ? 'active-tab' : ''}\r\n                        >\r\n                            Attēli\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={() => handleTabClick('iestatijumi')}\r\n                            className={activeTab === 'iestatijumi' ? 'active-tab' : ''}\r\n                        >\r\n                            Iestatījumi\r\n                        </button>\r\n                    </div>\r\n                    {/* Отображение контента в зависимости от выбранного таба */}\r\n                    {activeTab === 'aizvietosanas' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Вставьте содержимое компонента AizvietosanasTab */}\r\n                            <button\r\n                                className={selectedOption === 'Vienlaidu' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Vienlaidu')}\r\n                            >\r\n                                Vienlaidu\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'Gradients' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('Gradients')}\r\n                            >\r\n                                Gradients\r\n                            </button>\r\n                            <button\r\n                                className={selectedOption === 'tabula' ? 'active-tab' : ''}\r\n                                onClick={() => handleOptionChange('tabula')}\r\n                            >\r\n                                Tabula\r\n                            </button>\r\n                            {selectedOption === 'tabula' && (\r\n                                <div>\r\n                                    {/* Элементы для настройки стилей таблицы */}\r\n                                    <h4>Header Styles:</h4>\r\n                                    <label htmlFor=\"headerFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"headerFontSize\"\r\n                                        placeholder=\"Enter font size for table header\"\r\n                                        value={headerStyles.fontSize}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontSize: e.target.value })}\r\n                                    />\r\n\r\n                                    <label htmlFor=\"headerFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"headerFontFamily\"\r\n                                        value={headerStyles.fontFamily}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"headerFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"headerFontWeight\"\r\n                                        value={headerStyles.fontWeight}\r\n                                        onChange={(e) => setHeaderStyles({ ...headerStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для шапки таблицы здесь */}\r\n                                    </select>\r\n\r\n                                    {/* Добавьте другие параметры стилей для шапки таблицы здесь */}\r\n\r\n                                    <h4>Cell Styles:</h4>\r\n                                    <label htmlFor=\"cellFontSize\">Font Size:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"cellFontSize\"\r\n                                        placeholder=\"Enter font size for table cells\"\r\n                                        value={cellStyles.fontSize}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontSize: e.target.value })}\r\n                                    />\r\n\r\n                                    <label htmlFor=\"cellFontFamily\">Font Family:</label>\r\n                                    <select\r\n                                        id=\"cellFontFamily\"\r\n                                        value={cellStyles.fontFamily}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontFamily: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font family</option>\r\n                                        {fontFamilies.map((font, index) => (\r\n                                            <option key={index} value={font}>{font}</option>\r\n                                        ))}\r\n                                    </select>\r\n\r\n                                    <label htmlFor=\"cellFontWeight\">Font Weight:</label>\r\n                                    <select\r\n                                        id=\"cellFontWeight\"\r\n                                        value={cellStyles.fontWeight}\r\n                                        onChange={(e) => setCellStyles({ ...cellStyles, fontWeight: e.target.value })}\r\n                                    >\r\n                                        <option value=\"\">Select font weight</option>\r\n                                        <option value=\"normal\">Normal</option>\r\n                                        <option value=\"bold\">Bold</option>\r\n                                        {/* Добавьте другие варианты толщины шрифта для ячеек таблицы здесь */}\r\n                                    </select>\r\n                                    <br /><br/>\r\n                                    <button onClick={applyTableStyles}>Apply Table Styles</button>\r\n                                    {/* Здесь добавлены стили в стиль атрибут */}\r\n                                    \r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Vienlaidu' && (\r\n                                <div>\r\n                                    {/* Элементы для Vienlaidu */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor)}\r\n                                    />\r\n                                    <button onClick={applySingleColor}>Apply Single Color</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOption === 'Gradients' && (\r\n                                <div>\r\n                                    {/* Элементы для Gradients */}\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color1}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor1)}\r\n                                    />\r\n                                    <input className=\"custom-style\"\r\n                                        type=\"color\"\r\n                                        value={color2}\r\n                                        onChange={(e) => handleColorChange(e.target.value, setColor2)}\r\n                                    />\r\n                                    <div>Gradient Angle:</div>\r\n                                    <ReactAnglePicker\r\n                                        angle={angle}\r\n                                        onChange={handleChange}\r\n                                        onFinalChange={handleChange} // Для мгновенного изменения угла\r\n                                    />\r\n                                    {angle}\r\n                                    <button onClick={applyGradient}>Apply Gradient</button>\r\n                                    <button onClick={resetToDefaultGradient}>Reset to Default</button>\r\n                                </div>\r\n                            )}\r\n                            <label>\r\n                                Background Type:\r\n                                <select\r\n                                    value={backgroundType}\r\n                                    onChange={(e) => setBackgroundType(e.target.value)}\r\n                                >\r\n                                    <option value=\"none\">None</option>\r\n                                    <option value=\"color\">Color</option>\r\n                                    <option value=\"gradient\">Gradient</option>\r\n                                </select>\r\n                            </label>\r\n                            <div className=\"table-wrapper\" style={{\r\n                                top: '20vh', left: '-10vw', transform: 'translate(0, 0) scale(0.6)', color: tableColor, fontSize: tableWrapperFontSize, background: backgroundType === 'gradient' ?\r\n                                    `linear-gradient(${angle}deg, ${color1}, ${color2})` :\r\n                                    backgroundType === 'color' ?\r\n                                        color :\r\n                                        'none'\r\n                            }}>\r\n                                <table className=\"fl-table\">\r\n                                    <thead >\r\n                                        <tr style={{ border: \"3px solid \" + tableColor }}>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Aizvietotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Stunda</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Klase</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Kab.</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Promešosais skolotājs</th>\r\n                                            <th style={{ border: \"3px solid \" + tableColor }}>Piezīmes</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"dataBody\">\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>1.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>11A</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>101</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>Jane Smith</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>3.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>10B</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>102</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>John Doe</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>No special notes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>Michael Johnson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>5.</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>12C</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>103</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>Mary Wilson</td>\r\n                                            <td style={{ border: \"3px solid \" + tableColor, fontSize: tableCellFontSize }}>Bring extra materials</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'atteli' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента AtteliTab */}\r\n                            <div>Attēli Tab Content</div>\r\n                        </div>\r\n                    )}\r\n                    {activeTab === 'iestatijumi' && (\r\n                        <div className=\"content-container\">\r\n                            {/* Содержимое компонента IestatijumiTab */}\r\n                            <div>Iestatījumi Tab Content</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminConsole;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}